{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Powerton Engineering - Industrial Automation Platform\n\n## Overview\n\nThis is a comprehensive business website for Powerton Engineering Pvt. Ltd., a company specializing in industrial automation and electrical engineering solutions. The platform serves as both a showcase for the company's services, products, and projects, as well as a lead generation tool with contact forms, quote requests, and an integrated chatbot system. The application is built as a full-stack web application with a React frontend and Express.js backend, designed to handle business inquiries and provide detailed information about the company's engineering capabilities.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nLogo preference: Use official Powerton Engineering logo (https://powertonengineering.in/assets/img/logo-new.jpg) throughout the website.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with JavaScript (JSX) for modern development practices\n- **Routing**: Wouter for lightweight client-side routing with pages for Home, About, Services, Products, Projects, and Contact\n- **Styling**: Tailwind CSS with custom design system using CSS variables for consistent theming and shadcn/ui components for professional UI elements\n- **State Management**: TanStack Query (React Query) for server state management and API interactions\n- **Form Handling**: React Hook Form with Zod schema validation for robust form management\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript for API development (Server remains in TypeScript)\n- **API Design**: RESTful endpoints for contacts, quote requests, and chatbot interactions\n- **Data Validation**: Zod schemas shared between frontend and backend for consistent validation\n- **Error Handling**: Centralized error middleware with structured error responses\n- **Development**: Hot reload with Vite middleware integration for seamless full-stack development\n\n### Data Storage Solutions\n- **Database**: PostgreSQL configured through Drizzle ORM with schema definitions\n- **ORM**: Drizzle for type-safe database operations and migrations\n- **Fallback Storage**: In-memory storage implementation for development/testing scenarios\n- **Schema Management**: Shared schema definitions between frontend and backend using Drizzle-Zod integration\n\n### Database Schema\n- **Contacts Table**: Stores customer inquiries with fields for personal info, service type, and privacy consent\n- **Quote Requests Table**: Handles detailed project quotes with budget, timeline, and project specifications\n- **Chatbot Messages Table**: Logs conversational interactions with session tracking for support purposes\n\n### Authentication and Authorization\n- **Current State**: No authentication system implemented - operates as a public business website\n- **Session Management**: Basic session tracking for chatbot interactions using random session IDs\n\n### Component Architecture\n- **Design System**: shadcn/ui components with consistent styling and accessibility features\n- **Layout System**: Shared layout components (Header, Footer) with responsive navigation\n- **Form Components**: Reusable contact and quote forms with validation and submission handling\n- **SEO Components**: Structured data and meta tag management for search optimization\n- **Responsive Design**: Mobile-first approach with breakpoint-specific layouts\n- **Scroll Animations**: Custom scroll-triggered animations using Intersection Observer API\n- **Animation System**: Smooth transitions and entrance animations with Tailwind CSS\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **@neondatabase/serverless**: Serverless PostgreSQL database connectivity for cloud deployment\n- **drizzle-orm**: Type-safe ORM for database operations and query building\n- **@tanstack/react-query**: Server state management and API caching\n\n### UI and Styling\n- **@radix-ui/**: Comprehensive collection of accessible UI primitives for professional interfaces\n- **tailwindcss**: Utility-first CSS framework with custom design tokens\n- **class-variance-authority**: Component variant management for consistent styling\n- **lucide-react**: Icon library for consistent visual elements\n\n### Form and Validation\n- **react-hook-form**: Performant form library with minimal re-renders\n- **@hookform/resolvers**: Integration between React Hook Form and validation libraries\n- **zod**: Schema validation for both frontend and backend data integrity\n\n### Development Tools\n- **typescript**: Static type checking for better code quality\n- **vite**: Fast build tool with development server and HMR support\n- **@replit/vite-plugin-**: Replit-specific development tools and error handling\n\n### Third-Party Integrations\n- **Database Provider**: Neon (serverless PostgreSQL) for cloud database hosting\n- **Fonts**: Google Fonts integration (Inter, Architects Daughter, DM Sans, Fira Code, Geist Mono)\n- **Images**: Unsplash for stock photography and visual content\n\n### Production Considerations\n- **Session Storage**: Uses connect-pg-simple for PostgreSQL session storage when database is available\n- **Build Process**: Separate build process for client (Vite) and server (esbuild) bundling\n- **Environment**: Supports both development and production environments with appropriate configurations","size_bytes":5389},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"fade-in\": {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translateY(10px)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translateY(0)\",\n          },\n        },\n        \"slide-in-right\": {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translateX(20px)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translateX(0)\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fade-in 0.5s ease-out\",\n        \"slide-in-right\": \"slide-in-right 0.3s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3326},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSchema, insertQuoteRequestSchema, insertChatbotMessageSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission\n  app.post(\"/api/contacts\", async (req, res) => {\n    try {\n      const contactData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(contactData);\n      res.json({ success: true, contact });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  // Get all contacts (for admin purposes)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json(contacts);\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  // Quote request submission\n  app.post(\"/api/quote-requests\", async (req, res) => {\n    try {\n      const quoteData = insertQuoteRequestSchema.parse(req.body);\n      const quote = await storage.createQuoteRequest(quoteData);\n      res.json({ success: true, quote });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  // Get all quote requests\n  app.get(\"/api/quote-requests\", async (req, res) => {\n    try {\n      const quotes = await storage.getQuoteRequests();\n      res.json(quotes);\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  // Chatbot message handling\n  app.post(\"/api/chatbot\", async (req, res) => {\n    try {\n      const messageData = insertChatbotMessageSchema.parse(req.body);\n      const message = await storage.createChatbotMessage(messageData);\n      \n      // Generate bot response based on user message\n      let botResponse = generateChatbotResponse(messageData.userMessage);\n      \n      // Store bot response\n      await storage.createChatbotMessage({\n        sessionId: messageData.sessionId,\n        userMessage: botResponse,\n        botResponse: \"\", // Bot response doesn't need a response\n      });\n      \n      res.json({ success: true, response: botResponse });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  // Get chatbot conversation\n  app.get(\"/api/chatbot/:sessionId\", async (req, res) => {\n    try {\n      const { sessionId } = req.params;\n      const messages = await storage.getChatbotMessages(sessionId);\n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n\nfunction generateChatbotResponse(userMessage: string): string {\n  const message = userMessage.toLowerCase();\n  \n  if (message.includes('service') || message.includes('automation') || message.includes('what do you do')) {\n    return \"We offer Process Automation, Instrumentation Solutions, Site Installation, Commissioning Services, Maintenance Contracts (AMC), Power & Control Panels, and Solar Solutions. Which service interests you most?\";\n  }\n  \n  if (message.includes('quote') || message.includes('price') || message.includes('cost')) {\n    return \"I'd be happy to help with a quote! Please use our contact form or call +91-94627-71662 for detailed pricing. You can also click 'Get Quote' to submit your requirements.\";\n  }\n  \n  if (message.includes('contact') || message.includes('phone') || message.includes('address')) {\n    return \"Contact us at +91-94627-71662 or info@powertonengineering.in. We're located at F-25, Sector 6, Noida, UP 201301. We're available 24/7 for emergency support.\";\n  }\n  \n  if (message.includes('support') || message.includes('technical') || message.includes('help')) {\n    return \"For technical support, please call our hotline at +91-94627-71662 or submit a detailed inquiry through our contact form. Our expert team is available 24/7.\";\n  }\n  \n  if (message.includes('automation') || message.includes('control panel')) {\n    return \"We specialize in industrial automation systems including PLC programming, SCADA systems, control panels, and process automation. What specific automation needs do you have?\";\n  }\n  \n  if (message.includes('solar') || message.includes('renewable')) {\n    return \"We provide complete solar solutions including panel installation, inverters, grid synchronization, and monitoring systems. Would you like information about our solar services?\";\n  }\n  \n  if (message.includes('maintenance') || message.includes('amc')) {\n    return \"We offer comprehensive Annual Maintenance Contracts (AMC) to keep your systems running smoothly with minimal downtime. Our maintenance programs include preventive and corrective services.\";\n  }\n  \n  if (message.includes('hello') || message.includes('hi') || message.includes('hey')) {\n    return \"Hello! Welcome to Powerton Engineering. I'm here to help you with information about our industrial automation and electrical engineering services. How can I assist you today?\";\n  }\n  \n  if (message.includes('thank') || message.includes('thanks')) {\n    return \"You're welcome! Is there anything else I can help you with regarding our engineering services?\";\n  }\n  \n  // Default response\n  return \"I'm here to help you with information about Powerton Engineering's services including Process Automation, Instrumentation, Control Panels, and Solar Solutions. You can also contact us directly at +91-94627-71662 or use our contact form for detailed inquiries.\";\n}\n","size_bytes":6138},"server/storage.ts":{"content":"import { type Contact, type InsertContact, type QuoteRequest, type InsertQuoteRequest, type ChatbotMessage, type InsertChatbotMessage } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Contact management\n  createContact(contact: InsertContact): Promise<Contact>;\n  getContacts(): Promise<Contact[]>;\n  \n  // Quote request management\n  createQuoteRequest(quote: InsertQuoteRequest): Promise<QuoteRequest>;\n  getQuoteRequests(): Promise<QuoteRequest[]>;\n  \n  // Chatbot messages\n  createChatbotMessage(message: InsertChatbotMessage): Promise<ChatbotMessage>;\n  getChatbotMessages(sessionId: string): Promise<ChatbotMessage[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private contacts: Map<string, Contact>;\n  private quoteRequests: Map<string, QuoteRequest>;\n  private chatbotMessages: Map<string, ChatbotMessage>;\n\n  constructor() {\n    this.contacts = new Map();\n    this.quoteRequests = new Map();\n    this.chatbotMessages = new Map();\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = {\n      ...insertContact,\n      id,\n      createdAt: new Date(),\n      agreedToPrivacy: insertContact.agreedToPrivacy ?? false,\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n\n  async createQuoteRequest(insertQuote: InsertQuoteRequest): Promise<QuoteRequest> {\n    const id = randomUUID();\n    const quote: QuoteRequest = {\n      ...insertQuote,\n      id,\n      createdAt: new Date(),\n      company: insertQuote.company ?? null,\n      budget: insertQuote.budget ?? null,\n      timeline: insertQuote.timeline ?? null,\n    };\n    this.quoteRequests.set(id, quote);\n    return quote;\n  }\n\n  async getQuoteRequests(): Promise<QuoteRequest[]> {\n    return Array.from(this.quoteRequests.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n\n  async createChatbotMessage(insertMessage: InsertChatbotMessage): Promise<ChatbotMessage> {\n    const id = randomUUID();\n    const message: ChatbotMessage = {\n      ...insertMessage,\n      id,\n      createdAt: new Date(),\n    };\n    this.chatbotMessages.set(id, message);\n    return message;\n  }\n\n  async getChatbotMessages(sessionId: string): Promise<ChatbotMessage[]> {\n    return Array.from(this.chatbotMessages.values())\n      .filter(msg => msg.sessionId === sessionId)\n      .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":2683},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  service: text(\"service\").notNull(),\n  message: text(\"message\").notNull(),\n  agreedToPrivacy: boolean(\"agreed_to_privacy\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const quoteRequests = pgTable(\"quote_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  company: text(\"company\"),\n  service: text(\"service\").notNull(),\n  projectDetails: text(\"project_details\").notNull(),\n  budget: text(\"budget\"),\n  timeline: text(\"timeline\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const chatbotMessages = pgTable(\"chatbot_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  sessionId: text(\"session_id\").notNull(),\n  userMessage: text(\"user_message\").notNull(),\n  botResponse: text(\"bot_response\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertQuoteRequestSchema = createInsertSchema(quoteRequests).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertChatbotMessageSchema = createInsertSchema(chatbotMessages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n\nexport type InsertQuoteRequest = z.infer<typeof insertQuoteRequestSchema>;\nexport type QuoteRequest = typeof quoteRequests.$inferSelect;\n\nexport type InsertChatbotMessage = z.infer<typeof insertChatbotMessageSchema>;\nexport type ChatbotMessage = typeof chatbotMessages.$inferSelect;\n","size_bytes":2265},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\n// Layout\nimport Layout from \"@/components/layout/layout\";\n\n// Pages\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Services from \"@/pages/services\";\nimport Products from \"@/pages/products\";\nimport Projects from \"@/pages/projects\";\nimport Quote from \"@/pages/quote\";\nimport Contact from \"@/pages/contact\";\nimport NotFound from \"@/pages/not-found\";\nimport Chatbot from \"@/components/chatbot/chatbot\";\n\nfunction Router() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/services\" component={Services} />\n        <Route path=\"/products\" component={Products} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/quote\" component={Quote} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n      <Chatbot />\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1536},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(210, 25%, 7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7%);\n  --primary: hsl(215, 89%, 33%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(20, 91%, 48%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 40%, 98%);\n  --muted-foreground: hsl(210, 8%, 45%);\n  --accent: hsl(215, 89%, 59%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(215, 89%, 33%);\n  --chart-1: hsl(215, 89%, 33%);\n  --chart-2: hsl(160, 60%, 45%);\n  --chart-3: hsl(30, 80%, 55%);\n  --chart-4: hsl(280, 65%, 60%);\n  --chart-5: hsl(340, 75%, 55%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(210, 25%, 7%);\n  --sidebar-primary: hsl(215, 89%, 33%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(210, 40%, 98%);\n  --sidebar-accent-foreground: hsl(215, 89%, 33%);\n  --sidebar-border: hsl(214, 32%, 91%);\n  --sidebar-ring: hsl(215, 89%, 33%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: 'Georgia', serif;\n  --font-mono: 'Menlo', monospace;\n  --radius: 0.5rem;\n}\n\n.dark {\n  --background: hsl(210, 25%, 7%);\n  --foreground: hsl(0, 0%, 95%);\n  --card: hsl(210, 25%, 10%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(210, 25%, 10%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(215, 89%, 59%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(20, 91%, 48%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 25%, 15%);\n  --muted-foreground: hsl(210, 8%, 65%);\n  --accent: hsl(215, 89%, 59%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 25%, 20%);\n  --input: hsl(210, 25%, 20%);\n  --ring: hsl(215, 89%, 59%);\n  --sidebar: hsl(210, 25%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 95%);\n  --sidebar-primary: hsl(215, 89%, 59%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(210, 25%, 15%);\n  --sidebar-accent-foreground: hsl(215, 89%, 59%);\n  --sidebar-border: hsl(210, 25%, 20%);\n  --sidebar-ring: hsl(215, 89%, 59%);\n}\n\n/* Enhanced Scroll Animations with Better Easing */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(40px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-40px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes fadeInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-50px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0) scale(1);\n  }\n}\n\n@keyframes fadeInRight {\n  from {\n    opacity: 0;\n    transform: translateX(50px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0) scale(1);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.98);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes slideInUp {\n  from {\n    opacity: 0;\n    transform: translateY(60px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes zoomIn {\n  from {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* New Enhanced Animations */\n@keyframes bounceInUp {\n  0% {\n    opacity: 0;\n    transform: translateY(50px) scale(0.9);\n  }\n  60% {\n    opacity: 1;\n    transform: translateY(-8px) scale(1.02);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes slideInUpSoft {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes flipInX {\n  from {\n    opacity: 0;\n    transform: perspective(400px) rotateX(90deg);\n  }\n  40% {\n    transform: perspective(400px) rotateX(-20deg);\n  }\n  60% {\n    transform: perspective(400px) rotateX(10deg);\n  }\n  80% {\n    transform: perspective(400px) rotateX(-5deg);\n  }\n  to {\n    opacity: 1;\n    transform: perspective(400px) rotateX(0deg);\n  }\n}\n\n@keyframes slideInScale {\n  from {\n    opacity: 0;\n    transform: translateY(30px) scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes floatIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n    filter: blur(2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n    filter: blur(0px);\n  }\n}\n\n@keyframes staggerFadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Enhanced Animation Classes with Better Timing */\n.animate-fade-in-up {\n  animation: fadeInUp 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-fade-in-down {\n  animation: fadeInDown 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-fade-in-left {\n  animation: fadeInLeft 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-fade-in-right {\n  animation: fadeInRight 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-slide-in-up {\n  animation: slideInUp 0.9s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-zoom-in {\n  animation: zoomIn 0.7s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;\n  opacity: 0;\n}\n\n/* New Animation Classes */\n.animate-bounce-in-up {\n  animation: bounceInUp 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-slide-in-up-soft {\n  animation: slideInUpSoft 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-flip-in-x {\n  animation: flipInX 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-slide-in-scale {\n  animation: slideInScale 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-float-in {\n  animation: floatIn 0.9s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n.animate-stagger {\n  animation: staggerFadeIn 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n  opacity: 0;\n}\n\n/* Enhanced Staggered Animation Delays */\n.animate-delay-0 { animation-delay: 0ms; }\n.animate-delay-100 { animation-delay: 100ms; }\n.animate-delay-200 { animation-delay: 200ms; }\n.animate-delay-300 { animation-delay: 300ms; }\n.animate-delay-400 { animation-delay: 400ms; }\n.animate-delay-500 { animation-delay: 500ms; }\n.animate-delay-600 { animation-delay: 600ms; }\n.animate-delay-700 { animation-delay: 700ms; }\n.animate-delay-800 { animation-delay: 800ms; }\n\n/* Hover Animations */\n.hover-scale {\n  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.hover-scale:hover {\n  transform: scale(1.05);\n}\n\n.hover-lift {\n  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94), box-shadow 0.3s ease;\n}\n\n.hover-lift:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n}\n\n/* Smooth Scroll Behavior */\n.scroll-smooth {\n  scroll-behavior: smooth;\n}\n\n/* Performance Optimization */\n.will-animate {\n  will-change: opacity, transform;\n}\n\n.animate-complete {\n  will-change: auto;\n}\n\n* {\n  border-color: hsl(var(--border));\n}\n\nbody {\n  background-color: hsl(var(--background));\n  color: hsl(var(--foreground));\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Custom scrollbar for chatbot */\n.chatbot-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chatbot-messages::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 3px;\n}\n\n.chatbot-messages::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 3px;\n}\n\n.chatbot-messages::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n\n/* Container padding utility */\n.container-padding {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n@media (min-width: 640px) {\n  .container-padding {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container-padding {\n    padding-left: 4rem;\n    padding-right: 4rem;\n  }\n}\n\n/* Animate in viewport */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out forwards;\n}\n\n/* Scroll reveal animation */\n.scroll-reveal {\n  opacity: 0;\n  transform: translateY(30px);\n  transition: opacity 0.6s ease-out, transform 0.6s ease-out;\n}\n\n.scroll-reveal.revealed {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    overflow-x: hidden;\n  }\n\n  html {\n    overflow-x: hidden;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-semibold;\n  }\n}\n\n@layer components {\n  .gradient-bg {\n    background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);\n  }\n  \n  .gradient-text {\n    background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  /* Custom button styles */\n  .btn-secondary {\n    @apply bg-secondary text-white hover:bg-secondary hover:opacity-90 transition-all duration-300;\n  }\n\n  .btn-outline {\n    @apply border-2 border-white text-white bg-transparent hover:bg-white hover:text-primary transition-all duration-300;\n  }\n  \n  .section-padding {\n    @apply py-8 sm:py-12 md:py-16 lg:py-20 xl:py-24;\n  }\n  \n  .container-padding {\n    @apply px-3 sm:px-4 md:px-6 lg:px-8 xl:px-10;\n  }\n  \n  .text-responsive-xs {\n    @apply text-xs sm:text-sm;\n  }\n  \n  .text-responsive-sm {\n    @apply text-sm sm:text-base md:text-lg;\n  }\n  \n  .text-responsive-base {\n    @apply text-base sm:text-lg md:text-xl;\n  }\n  \n  .text-responsive-lg {\n    @apply text-lg sm:text-xl md:text-2xl lg:text-3xl;\n  }\n  \n  .text-responsive-xl {\n    @apply text-xl sm:text-2xl md:text-3xl lg:text-4xl xl:text-5xl;\n  }\n  \n  .text-responsive-2xl {\n    @apply text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl;\n  }\n  \n  .btn-responsive {\n    @apply px-3 py-2 sm:px-4 sm:py-2 md:px-6 md:py-3 text-sm sm:text-base;\n  }\n  \n  .grid-responsive-cards {\n    @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6 md:gap-8;\n  }\n  \n  .grid-responsive-2 {\n    @apply grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6 md:gap-8;\n  }\n  \n  .grid-responsive-3 {\n    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8;\n  }\n  \n  .mobile-full {\n    @apply w-full sm:w-auto;\n  }\n  \n  .hero-overlay {\n    background: linear-gradient(135deg, rgba(30, 58, 138, 0.9) 0%, rgba(59, 130, 246, 0.8) 100%);\n  }\n  \n  .card-hover {\n    @apply transition-all duration-300 hover:shadow-xl hover:-translate-y-2;\n  }\n  \n  .btn-primary {\n    @apply bg-primary text-primary-foreground hover:bg-blue-700 px-6 py-3 rounded-lg font-semibold transition-all;\n  }\n  \n  .btn-secondary {\n    @apply bg-secondary text-secondary-foreground hover:bg-orange-600 px-6 py-3 rounded-lg font-semibold transition-all;\n  }\n  \n  .btn-outline {\n    @apply border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-6 py-3 rounded-lg font-semibold transition-all;\n  }\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n","size_bytes":11663},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/data/constants.ts":{"content":"export const COMPANY_INFO = {\n  name: \"Powerton Engineering Pvt. Ltd.\",\n  tagline: \"Your trusted partner in industrial automation and electrical engineering\",\n  phone: \"+91-94627-71662\",\n  email: \"info@powertonengineering.in\",\n  address: {\n    street: \"2nd Floor, F-25, F Block, Sector 6\",\n    city: \"Noida\",\n    state: \"Uttar Pradesh\",\n    pincode: \"201301\",\n    landmark: \"nearest metro-Sector 15\"\n  },\n  businessHours: {\n    weekdays: \"Monday - Saturday: 9:00 AM - 6:00 PM\",\n    sunday: \"Sunday: Emergency Support Only\"\n  },\n  socialMedia: {\n    linkedin: \"#\",\n    twitter: \"#\",\n    facebook: \"#\"\n  }\n};\n\nexport const SERVICES = [\n  {\n    id: \"process-automation\",\n    title: \"Process Automation\",\n    description: \"Advanced automation systems for seamless industrial processes, improving efficiency and reducing operational costs.\",\n    icon: \"microchip\",\n    features: [\"PLC Programming\", \"SCADA Systems\", \"HMI Development\", \"Process Optimization\"]\n  },\n  {\n    id: \"instrumentation\",\n    title: \"Instrumentation Solutions\",\n    description: \"Precision instrumentation for accurate monitoring and control of industrial processes and systems.\",\n    icon: \"tachometer-alt\",\n    features: [\"Sensors & Transmitters\", \"Flow Measurement\", \"Temperature Control\", \"Pressure Monitoring\"]\n  },\n  {\n    id: \"site-installation\",\n    title: \"Site Installation\",\n    description: \"Professional on-site installation services ensuring optimal performance and safety compliance.\",\n    icon: \"tools\",\n    features: [\"Equipment Installation\", \"System Integration\", \"Safety Compliance\", \"Performance Testing\"]\n  },\n  {\n    id: \"commissioning\",\n    title: \"Commissioning Services\",\n    description: \"Comprehensive system commissioning to ensure all equipment operates at peak performance levels.\",\n    icon: \"play-circle\",\n    features: [\"System Testing\", \"Performance Validation\", \"Documentation\", \"Training\"]\n  },\n  {\n    id: \"amc\",\n    title: \"Maintenance Contracts (AMC)\",\n    description: \"Comprehensive maintenance programs to keep your systems running smoothly with minimal downtime.\",\n    icon: \"shield-alt\",\n    features: [\"Preventive Maintenance\", \"24/7 Support\", \"Emergency Response\", \"Performance Monitoring\"]\n  },\n  {\n    id: \"customized\",\n    title: \"Customized Solutions\",\n    description: \"Tailored engineering solutions designed specifically for your unique industrial requirements and challenges.\",\n    icon: \"cog\",\n    features: [\"Custom Design\", \"Flexible Solutions\", \"Industry Specific\", \"Scalable Systems\"]\n  }\n];\n\nexport const PRODUCTS = [\n  {\n    id: \"instrumentation\",\n    title: \"Instrumentation Components\",\n    description: \"High-precision sensors, transmitters, and measurement devices\",\n    image: \"https://images.unsplash.com/photo-1581092918056-0c4c3acd3789?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"electrical\",\n    title: \"Electrical Components\",\n    description: \"Switches, relays, contactors, and power distribution equipment\",\n    image: \"https://images.unsplash.com/photo-1621905251918-48416bd8575a?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"measurement\",\n    title: \"Measurement Instruments\",\n    description: \"Digital meters, analyzers, and calibration equipment\",\n    image: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"solar\",\n    title: \"Solar Products\",\n    description: \"Solar panels, inverters, and complete renewable systems\",\n    image: \"https://images.unsplash.com/photo-1508615070457-7baeba4003ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"automation\",\n    title: \"Automation & Control\",\n    description: \"PLC systems, HMI panels, and SCADA solutions\",\n    image: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"safety\",\n    title: \"Safety & Protection\",\n    description: \"Circuit breakers, safety relays, and protective equipment\",\n    image: \"https://images.unsplash.com/photo-1581092335878-1c43d93b6e07?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"pumps\",\n    title: \"Mechanical Pumps\",\n    description: \"Centrifugal pumps, spare parts, and maintenance kits\",\n    image: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  },\n  {\n    id: \"tools\",\n    title: \"Industrial Tools\",\n    description: \"Professional grade tools, tackles, and maintenance equipment\",\n    image: \"https://images.unsplash.com/photo-1504307651254-35680f356dfd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=240\"\n  }\n];\n\nexport const TESTIMONIALS = [\n  {\n    name: \"Anand Awasthi\",\n    location: \"West Bengal\",\n    rating: 5,\n    comment: \"Powerton Engineering made the process of going solar seamless and easy. Their team handled everything from start to finish, and we're thrilled with the results.\",\n    initials: \"AA\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\"\n  },\n  {\n    name: \"Sanjay Patil\",\n    location: \"Uttar Pradesh\", \n    rating: 5,\n    comment: \"I am glad I chose Powerton Engineering for our installation, and I would not hesitate to recommend them to any of my friends.\",\n    initials: \"SP\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\"\n  },\n  {\n    name: \"Rhea Sharma\",\n    location: \"Maharashtra\",\n    rating: 5,\n    comment: \"Excellent quality products and outstanding customer service. The technical expertise of the team is impressive and highly professional.\",\n    initials: \"RS\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b1c2?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100&q=80\"\n  }\n];\n\nexport const CLIENTS = [\n  \"SCI Group\", \"Agribio Ltd\", \"Motherson\", \"Praj Industries\", \"Thermax\", \"Ankur Scientific\",\n  \"DLS Group\", \"Boudh Industries\", \"Lokmangal\", \"Marcuras\", \"NV Group\", \"Anand NVH\",\n  \"Dhanuka\", \"MJSONS\", \"DKSM\", \"Procient\", \"Patel Group\", \"Regreen\", \"Muzaffarpur\",\n  \"Safex\", \"Radice\", \"Rajshree\", \"Lahag\"\n];\n\nexport const PROJECTS = [\n  {\n    id: \"thermal-plant\",\n    title: \"Thermal Power Plant Automation\",\n    category: \"Power Plant\",\n    description: \"Complete automation solution for 250MW thermal power plant including control panels, SCADA systems, and safety interlocks.\",\n    location: \"Uttar Pradesh\",\n    duration: \"12 months\",\n    year: \"2023\",\n    image: \"https://images.unsplash.com/photo-1473341304170-971dccb5ac1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\",\n    highlights: [\"SCADA Implementation\", \"Safety Systems\", \"Control Panels\", \"Performance Monitoring\"]\n  },\n  {\n    id: \"pharma-plant\",\n    title: \"Pharmaceutical Plant Control System\",\n    category: \"Manufacturing\",\n    description: \"Advanced process control and monitoring system for pharmaceutical manufacturing with FDA compliance and data integrity features.\",\n    location: \"Maharashtra\",\n    duration: \"8 months\",\n    year: \"2023\",\n    image: \"https://images.unsplash.com/photo-1576091160550-2173dba999ef?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\",\n    highlights: [\"FDA Compliance\", \"Data Integrity\", \"Process Control\", \"Quality Monitoring\"]\n  },\n  {\n    id: \"solar-plant\",\n    title: \"10MW Solar Power Installation\",\n    category: \"Solar\",\n    description: \"Complete design and installation of grid-connected solar power plant with monitoring systems and grid synchronization equipment.\",\n    location: \"Rajasthan\",\n    duration: \"6 months\",\n    year: \"2023\",\n    image: \"https://images.unsplash.com/photo-1466611653911-95081537e5b7?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\",\n    highlights: [\"Grid Connection\", \"Monitoring Systems\", \"Performance Optimization\", \"Maintenance Planning\"]\n  },\n  {\n    id: \"water-treatment\",\n    title: \"Municipal Water Treatment Automation\",\n    category: \"Water Treatment\",\n    description: \"Automated control system for water treatment plant serving 500,000 residents with real-time monitoring and quality control.\",\n    location: \"West Bengal\",\n    duration: \"10 months\",\n    year: \"2022\",\n    image: \"https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=300\",\n    highlights: [\"Real-time Monitoring\", \"Quality Control\", \"Automated Operations\", \"Remote Management\"]\n  }\n];\n\nexport const SERVICE_OPTIONS = [\n  { value: \"process-automation\", label: \"Process Automation\" },\n  { value: \"instrumentation\", label: \"Instrumentation Solutions\" },\n  { value: \"site-installation\", label: \"Site Installation\" },\n  { value: \"commissioning\", label: \"Commissioning Services\" },\n  { value: \"amc\", label: \"Maintenance Contracts (AMC)\" },\n  { value: \"power-control\", label: \"Power & Control Panels\" },\n  { value: \"solar-solutions\", label: \"Solar Solutions\" },\n  { value: \"customized\", label: \"Customized Solutions\" },\n  { value: \"other\", label: \"Other\" }\n];\n","size_bytes":8978},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/seo.tsx":{"content":"import { Helmet } from \"react-helmet-async\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  keywords?: string;\n  ogImage?: string;\n  canonicalUrl?: string;\n  structuredData?: object;\n}\n\nexport function SEO({\n  title = \"Powerton Engineering Pvt. Ltd. - Industrial Control Panels & Automation Solutions\",\n  description = \"Leading manufacturer of electrical control panels, industrial automation systems, and instrumentation solutions. Serving industries across India with quality engineering products and services.\",\n  keywords = \"electrical control panels, industrial automation, power control center, motor control center, instrumentation, electrical engineering, India\",\n  ogImage = \"https://powertonengineering.in/og-image.jpg\",\n  canonicalUrl,\n  structuredData\n}: SEOProps) {\n  const defaultStructuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"Powerton Engineering Pvt. Ltd.\",\n    \"url\": \"https://powertonengineering.in\",\n    \"description\": \"Leading manufacturer of electrical control panels and industrial automation solutions\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"2nd Floor, F-25, F Block, Sector 6\",\n      \"addressLocality\": \"Noida\",\n      \"addressRegion\": \"Uttar Pradesh\",\n      \"postalCode\": \"201301\",\n      \"addressCountry\": \"IN\"\n    },\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": \"+91-94627-71662\",\n      \"contactType\": \"customer service\"\n    },\n    \"sameAs\": [\n      \"https://www.linkedin.com/company/powerton-engineering\",\n      \"https://twitter.com/powertoneng\",\n      \"https://www.facebook.com/powertonengineering\"\n    ]\n  };\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\" />\n      <meta name=\"author\" content=\"Powerton Engineering Pvt. Ltd.\" />\n      <meta name=\"theme-color\" content=\"#1e3a8a\" />\n      <meta name=\"msapplication-TileColor\" content=\"#1e3a8a\" />\n      \n      {/* Enhanced SEO */}\n      <meta name=\"geo.region\" content=\"IN-UP\" />\n      <meta name=\"geo.placename\" content=\"Noida\" />\n      <meta name=\"geo.position\" content=\"28.5355;77.3910\" />\n      <meta name=\"ICBM\" content=\"28.5355, 77.3910\" />\n      \n      {/* Language and Content */}\n      <meta httpEquiv=\"content-language\" content=\"en-IN\" />\n      <meta name=\"language\" content=\"English\" />\n      <meta name=\"coverage\" content=\"Worldwide\" />\n      <meta name=\"distribution\" content=\"Global\" />\n      <meta name=\"rating\" content=\"General\" />\n      \n      {/* Open Graph Enhanced */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:url\" content={canonicalUrl || \"https://powertonengineering.in\"} />\n      <meta property=\"og:site_name\" content=\"Powerton Engineering\" />\n      <meta property=\"og:locale\" content=\"en_IN\" />\n      \n      {/* Twitter Card Enhanced */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      <meta name=\"twitter:site\" content=\"@powertoneng\" />\n      <meta name=\"twitter:creator\" content=\"@powertoneng\" />\n      \n      {/* Additional Business Info */}\n      <meta name=\"business:contact_data:street_address\" content=\"2nd Floor, F-25, F Block, Sector 6\" />\n      <meta name=\"business:contact_data:locality\" content=\"Noida\" />\n      <meta name=\"business:contact_data:region\" content=\"Uttar Pradesh\" />\n      <meta name=\"business:contact_data:postal_code\" content=\"201301\" />\n      <meta name=\"business:contact_data:country_name\" content=\"India\" />\n      <meta name=\"business:contact_data:phone_number\" content=\"+91-94627-71662\" />\n      <meta name=\"business:contact_data:email\" content=\"info@powertonengineering.in\" />\n      \n      {/* Canonical URL */}\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      {/* Structured Data */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(structuredData || defaultStructuredData)}\n      </script>\n    </Helmet>\n  );\n}\n","size_bytes":4597},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { CheckCircle, Users, Award, Globe, Target, Eye, Heart } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function About() {\n  const values = [\n    {\n      icon: Target,\n      title: \"Quality Excellence\",\n      description: \"We are committed to delivering the highest quality products and services that exceed industry standards.\"\n    },\n    {\n      icon: Users,\n      title: \"Customer Focus\",\n      description: \"Our clients are at the heart of everything we do. We work closely to understand and exceed their expectations.\"\n    },\n    {\n      icon: Award,\n      title: \"Technical Innovation\",\n      description: \"We continuously invest in latest technologies and innovative solutions to stay ahead of industry trends.\"\n    },\n    {\n      icon: Globe,\n      title: \"Reliability\",\n      description: \"Our proven track record of on-time delivery and dependable service makes us a trusted partner.\"\n    }\n  ];\n\n  const certifications = [\n    \"ISO 9001:2015 Quality Management\",\n    \"ISO 14001:2015 Environmental Management\",\n    \"OHSAS 18001 Occupational Health & Safety\",\n    \"CE Marking Compliance\",\n    \"UL Listed Products\",\n    \"CPRI Approved Equipment\"\n  ];\n\n  const teamStats = [\n    { number: \"50+\", label: \"Expert Engineers\" },\n    { number: \"25+\", label: \"Technical Staff\" },\n    { number: \"15+\", label: \"Years Average Experience\" },\n    { number: \"24/7\", label: \"Support Coverage\" }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"About Powerton Engineering - 15+ Years of Industrial Automation Excellence\"\n        description=\"Learn about Powerton Engineering's journey in industrial automation, electrical engineering, and instrumentation solutions. Expert team serving industries across India since 2008.\"\n        keywords=\"about powerton engineering, industrial automation company, electrical engineering company, instrumentation services, automation experts India\"\n        canonicalUrl=\"https://powertonengineering.in/about\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              About <span className=\"text-secondary\">Powerton Engineering</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              Your trusted partner in delivering high-quality engineering solutions and services for over 15 years.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Company Story */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                alt=\"Powerton Engineering industrial automation facility with modern control systems\" \n                className=\"rounded-xl shadow-2xl w-full\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                Our Journey & Vision\n              </h2>\n              <p className=\"text-lg text-gray-600 mb-6 leading-relaxed\">\n                Founded with a vision to empower industries through innovation and excellence, Powerton Engineering has grown to become a leading provider of electrical and instrumentation solutions across India.\n              </p>\n              <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                From our headquarters in Noida, we serve clients nationwide with comprehensive engineering solutions including process automation, instrumentation, solar installations, and maintenance services.\n              </p>\n\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\n                {teamStats.map((stat) => (\n                  <div key={stat.label} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-secondary mb-2\">{stat.number}</div>\n                    <div className=\"text-sm text-gray-600\">{stat.label}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mr-4\">\n                    <Target className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-primary\">Our Mission</h3>\n                </div>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  To empower industries with innovative engineering solutions that enhance productivity, efficiency, and sustainability. We strive to be the preferred partner for businesses seeking reliable automation and electrical systems.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-12 h-12 bg-secondary rounded-lg flex items-center justify-center mr-4\">\n                    <Eye className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-primary\">Our Vision</h3>\n                </div>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  To be India's leading engineering solutions provider, recognized for technical excellence, innovation, and customer satisfaction. We envision a future where our solutions drive industrial transformation.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Values */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">Our Core Values</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              These values guide our decisions, shape our culture, and drive our commitment to excellence.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {values.map((value) => {\n              const Icon = value.icon;\n              return (\n                <Card key={value.title} className=\"text-center border-none shadow-lg hover:shadow-xl transition-shadow\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                      <Icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{value.title}</h3>\n                    <p className=\"text-gray-600\">{value.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Certifications & Standards */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Certifications & Quality Standards\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our commitment to quality is validated by industry-recognized certifications and compliance standards.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {certifications.map((cert) => (\n              <div key={cert} className=\"flex items-center p-4 bg-white rounded-lg shadow\">\n                <CheckCircle className=\"w-6 h-6 text-green-600 mr-4 flex-shrink-0\" />\n                <span className=\"font-medium text-gray-900\">{cert}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Partner with Powerton Engineering\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Ready to transform your industrial operations with our expert engineering solutions? \n            Let's discuss your project requirements and deliver excellence together.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Start Your Project\n              </Button>\n            </Link>\n            <Link href=\"/services\">\n              <Button \n                variant=\"outline\" \n                className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n              >\n                Explore Our Services\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":10287},"client/src/pages/contact.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport ContactForm from \"@/components/forms/contact-form\";\nimport QuoteForm from \"@/components/forms/quote-form\";\nimport { \n  Phone, \n  Mail, \n  MapPin, \n  Clock, \n  MessageCircle,\n  User,\n  Building,\n  Headphones,\n  Globe,\n  CheckCircle\n} from \"lucide-react\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function Contact() {\n  const contactMethods = [\n    {\n      icon: Phone,\n      title: \"Phone Support\",\n      subtitle: \"24/7 Emergency Support\",\n      content: COMPANY_INFO.phone,\n      action: `tel:${COMPANY_INFO.phone}`,\n      description: \"Call us for immediate assistance or emergency support\"\n    },\n    {\n      icon: Mail,\n      title: \"Email Support\",\n      subtitle: \"Response within 24 hours\",\n      content: COMPANY_INFO.email,\n      action: `mailto:${COMPANY_INFO.email}`,\n      description: \"Send detailed inquiries and technical questions\"\n    },\n    {\n      icon: MessageCircle,\n      title: \"WhatsApp\",\n      subtitle: \"Quick chat support\",\n      content: \"+91-94627-71662\",\n      action: \"https://wa.me/919462771662\",\n      description: \"Connect via WhatsApp for instant messaging\"\n    },\n    {\n      icon: MapPin,\n      title: \"Visit Our Office\",\n      subtitle: \"By appointment only\",\n      content: `${COMPANY_INFO.address.city}, ${COMPANY_INFO.address.state}`,\n      action: \"https://maps.app.goo.gl/Nx4A15nXJcvVAG668\",\n      description: \"Schedule a visit to our headquarters in Noida\"\n    }\n  ];\n\n  const officeLocations = [\n    {\n      name: \"Corporate Headquarters\",\n      address: COMPANY_INFO.address.street,\n      city: `${COMPANY_INFO.address.city}, ${COMPANY_INFO.address.state} ${COMPANY_INFO.address.pincode}`,\n      landmark: COMPANY_INFO.address.landmark,\n      phone: COMPANY_INFO.phone,\n      email: COMPANY_INFO.email,\n      hours: \"Mon-Sat: 9:00 AM - 6:00 PM\"\n    }\n  ];\n\n  const supportServices = [\n    {\n      icon: Headphones,\n      title: \"Technical Support\",\n      description: \"Expert technical assistance for all our products and services\"\n    },\n    {\n      icon: User,\n      title: \"Customer Success\",\n      description: \"Dedicated support to ensure your project success\"\n    },\n    {\n      icon: Building,\n      title: \"On-Site Support\",\n      description: \"Field engineering support at your location\"\n    },\n    {\n      icon: Globe,\n      title: \"Remote Support\",\n      description: \"Virtual assistance and remote system diagnostics\"\n    }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"Contact Powerton Engineering - Get Expert Engineering Support\"\n        description=\"Contact Powerton Engineering for industrial automation, electrical engineering, and instrumentation services. 24/7 support available. Located in Noida, serving all India.\"\n        keywords=\"contact powerton engineering, industrial automation support, electrical engineering contact, instrumentation services, Noida engineering company, technical support India\"\n        canonicalUrl=\"https://powertonengineering.in/contact\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              Get in <span className=\"text-secondary\">Touch</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              Ready to start your next project? Our expert team is here to help you with customized engineering solutions and professional consultation.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-8 text-lg\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>Free Consultation</span>\n              </div>\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>24/7 Emergency Support</span>\n              </div>\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>Pan-India Service</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Methods */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Multiple Ways to Reach Us\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Choose the communication method that works best for you. We're available 24/7 for emergency support.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {contactMethods.map((method) => {\n              const Icon = method.icon;\n              return (\n                <Card key={method.title} className=\"text-center border-none shadow-lg hover:shadow-xl transition-shadow group\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform\">\n                      <Icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-2\">{method.title}</h3>\n                    <p className=\"text-sm text-secondary font-medium mb-3\">{method.subtitle}</p>\n                    <a \n                      href={method.action}\n                      className=\"text-lg font-semibold text-primary hover:text-secondary transition-colors block mb-3\"\n                    >\n                      {method.content}\n                    </a>\n                    <p className=\"text-sm text-gray-600\">{method.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Forms */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Send Us a Message\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Whether you need general information or a detailed project quote, we have the right form for your needs.\n            </p>\n          </div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <Tabs defaultValue=\"contact\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2 mb-8\">\n                <TabsTrigger value=\"contact\" className=\"text-lg py-3\">\n                  General Inquiry\n                </TabsTrigger>\n                <TabsTrigger value=\"quote\" className=\"text-lg py-3\">\n                  Request Quote\n                </TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"contact\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-center\">General Contact Form</CardTitle>\n                    <p className=\"text-gray-600 text-center\">\n                      For general inquiries, service information, or technical questions\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    <ContactForm />\n                  </CardContent>\n                </Card>\n              </TabsContent>\n              \n              <TabsContent value=\"quote\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-center\">Request Project Quote</CardTitle>\n                    <p className=\"text-gray-600 text-center\">\n                      Get a detailed quote for your specific project requirements\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    <QuoteForm />\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </section>\n\n      {/* Office Information */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-8\">\n                Visit Our Office\n              </h2>\n              \n              {officeLocations.map((location) => (\n                <Card key={location.name} className=\"mb-6 border-none shadow-lg\">\n                  <CardContent className=\"p-8\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{location.name}</h3>\n                    \n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-start\">\n                        <MapPin className=\"w-5 h-5 text-primary mr-3 mt-1 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-gray-600\">{location.address}</p>\n                          <p className=\"text-gray-600\">{location.city}</p>\n                          <p className=\"text-sm text-gray-500\">{location.landmark}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Phone className=\"w-5 h-5 text-primary mr-3\" />\n                        <a href={`tel:${location.phone}`} className=\"text-gray-600 hover:text-primary\">\n                          {location.phone}\n                        </a>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Mail className=\"w-5 h-5 text-primary mr-3\" />\n                        <a href={`mailto:${location.email}`} className=\"text-gray-600 hover:text-primary\">\n                          {location.email}\n                        </a>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Clock className=\"w-5 h-5 text-primary mr-3\" />\n                        <span className=\"text-gray-600\">{location.hours}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                      <a \n                        href=\"https://maps.app.goo.gl/Nx4A15nXJcvVAG668\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"inline-flex items-center text-secondary hover:text-secondary/80 font-medium\"\n                      >\n                        <MapPin className=\"w-4 h-4 mr-2\" />\n                        Get Directions\n                      </a>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-8\">\n                Support Services\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {supportServices.map((service) => {\n                  const Icon = service.icon;\n                  return (\n                    <Card key={service.title} className=\"border-none shadow-lg\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center mb-4\">\n                          <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mr-4\">\n                            <Icon className=\"w-6 h-6 text-white\" />\n                          </div>\n                          <h3 className=\"text-lg font-bold text-gray-900\">{service.title}</h3>\n                        </div>\n                        <p className=\"text-gray-600\">{service.description}</p>\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n\n              <Card className=\"mt-8 bg-gradient-to-br from-primary to-blue-800 text-white border-none\">\n                <CardContent className=\"p-8 text-center\">\n                  <h3 className=\"text-xl font-bold mb-4\">Emergency Support</h3>\n                  <p className=\"mb-6 opacity-90\">\n                    Critical system failure? Our emergency response team is available 24/7 to help minimize downtime.\n                  </p>\n                  <a \n                    href={`tel:${COMPANY_INFO.phone}`}\n                    className=\"inline-flex items-center bg-secondary hover:bg-secondary/90 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    <Phone className=\"w-5 h-5 mr-2\" />\n                    Emergency Hotline\n                  </a>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Business Hours */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Business Hours & Availability\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Clock className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Regular Hours</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>Monday - Saturday</p>\n                  <p className=\"font-semibold\">9:00 AM - 6:00 PM</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Phone className=\"w-12 h-12 text-secondary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Emergency Support</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>24/7 Availability</p>\n                  <p className=\"font-semibold\">All Days</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Mail className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Email Response</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>Within 24 Hours</p>\n                  <p className=\"font-semibold\">Guaranteed</p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":15482},"client/src/pages/home.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport HeroSection from \"@/components/sections/hero-section\";\nimport AboutSection from \"@/components/sections/about-section\";\nimport ServicesSection from \"@/components/sections/services-section\";\nimport ProductsSection from \"@/components/sections/products-section\";\nimport ClientsSection from \"@/components/sections/clients-section\";\nimport ProjectsSection from \"@/components/sections/projects-section\";\nimport GallerySection from \"@/components/sections/gallery-section\";\nimport ContactSection from \"@/components/sections/contact-section\";\n\nexport default function Home() {\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"Powerton Engineering Pvt. Ltd.\",\n    \"url\": \"https://powertonengineering.in\",\n    \"description\": \"Leading manufacturer of electrical control panels and industrial automation solutions\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"2nd Floor, F-25, F Block, Sector 6\",\n      \"addressLocality\": \"Noida\",\n      \"addressRegion\": \"Uttar Pradesh\",\n      \"postalCode\": \"201301\",\n      \"addressCountry\": \"IN\"\n    },\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": \"+91-94627-71662\",\n      \"contactType\": \"customer service\"\n    },\n    \"hasOfferCatalog\": {\n      \"@type\": \"OfferCatalog\",\n      \"name\": \"Engineering Services\",\n      \"itemListElement\": [\n        {\n          \"@type\": \"Offer\",\n          \"itemOffered\": {\n            \"@type\": \"Service\",\n            \"name\": \"Process Automation\",\n            \"description\": \"Advanced automation systems for industrial processes\"\n          }\n        },\n        {\n          \"@type\": \"Offer\",\n          \"itemOffered\": {\n            \"@type\": \"Service\",\n            \"name\": \"Instrumentation Solutions\",\n            \"description\": \"Precision instrumentation for monitoring and control\"\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"Powerton Engineering - Industrial Automation & Control Panels | India\"\n        description=\"Leading manufacturer of electrical control panels, industrial automation systems, and instrumentation solutions. Expert engineering services across India with 15+ years experience.\"\n        keywords=\"electrical control panels, industrial automation, process automation, instrumentation, power control center, motor control center, electrical engineering, India, Noida\"\n        structuredData={structuredData}\n      />\n      \n      <HeroSection />\n      <AboutSection />\n      <ServicesSection />\n      <ProductsSection />\n      <ProjectsSection />\n      <GallerySection />\n      <ClientsSection />\n      <ContactSection />\n    </>\n  );\n}\n","size_bytes":2697},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/products.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { PRODUCTS } from \"@/data/constants\";\nimport { \n  Search,\n  Filter,\n  Download,\n  ArrowRight,\n  Star,\n  CheckCircle,\n  Zap,\n  Shield,\n  Settings\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useState } from \"react\";\n\nexport default function Products() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const productCategories = [\n    { id: \"all\", name: \"All Products\", count: PRODUCTS.length },\n    { id: \"instrumentation\", name: \"Instrumentation\", count: 1 },\n    { id: \"electrical\", name: \"Electrical Components\", count: 1 },\n    { id: \"measurement\", name: \"Measurement Instruments\", count: 1 },\n    { id: \"solar\", name: \"Solar Products\", count: 1 },\n    { id: \"automation\", name: \"Automation & Control\", count: 1 },\n    { id: \"safety\", name: \"Safety & Protection\", count: 1 },\n    { id: \"pumps\", name: \"Mechanical Pumps\", count: 1 },\n    { id: \"tools\", name: \"Industrial Tools\", count: 1 }\n  ];\n\n  const productDetails = {\n    \"instrumentation\": {\n      fullDescription: \"Comprehensive range of precision instrumentation components for industrial monitoring and control applications.\",\n      specifications: [\n        \"High accuracy: ±0.1% to ±0.5%\",\n        \"Operating temperature: -40°C to +85°C\",\n        \"IP65/IP67 protection rating\",\n        \"4-20mA, 0-10V, HART, Profibus outputs\",\n        \"Explosion-proof variants available\"\n      ],\n      applications: [\"Process Control\", \"Quality Monitoring\", \"Safety Systems\", \"Environmental Monitoring\"],\n      features: [\"Smart Diagnostics\", \"Digital Communication\", \"Easy Calibration\", \"Long-term Stability\"]\n    },\n    \"electrical\": {\n      fullDescription: \"Complete range of electrical components including switches, relays, contactors, and power distribution equipment for industrial applications.\",\n      specifications: [\n        \"Voltage range: 24V DC to 690V AC\",\n        \"Current ratings: 1A to 1000A\",\n        \"IP54 to IP67 protection\",\n        \"IEC/IS standards compliant\",\n        \"Temperature rated: -25°C to +70°C\"\n      ],\n      applications: [\"Motor Control\", \"Power Distribution\", \"Switching Applications\", \"Protection Systems\"],\n      features: [\"High Reliability\", \"Modular Design\", \"Easy Installation\", \"Maintenance-Free\"]\n    },\n    \"measurement\": {\n      fullDescription: \"Advanced digital meters, analyzers, and calibration equipment for precise measurement and monitoring of electrical and process parameters.\",\n      specifications: [\n        \"Accuracy class: 0.1 to 1.0\",\n        \"Display: Digital LCD/LED\",\n        \"Communication: RS485, Ethernet, Wireless\",\n        \"Data logging capability\",\n        \"Multiple parameter measurement\"\n      ],\n      applications: [\"Power Quality Analysis\", \"Energy Management\", \"Process Monitoring\", \"Compliance Measurement\"],\n      features: [\"Real-time Monitoring\", \"Data Analytics\", \"Alarm Management\", \"Remote Access\"]\n    },\n    \"solar\": {\n      fullDescription: \"Complete solar energy solutions including panels, inverters, monitoring systems, and grid-tie equipment for sustainable energy generation.\",\n      specifications: [\n        \"Panel efficiency: 19-22%\",\n        \"Power range: 300W to 500W per panel\",\n        \"Inverter efficiency: >98%\",\n        \"25-year warranty on panels\",\n        \"Grid-tie and off-grid solutions\"\n      ],\n      applications: [\"Rooftop Solar\", \"Ground Mount Systems\", \"Solar Farms\", \"Hybrid Systems\"],\n      features: [\"High Efficiency\", \"Weather Resistant\", \"Smart Monitoring\", \"Grid Synchronization\"]\n    },\n    \"automation\": {\n      fullDescription: \"Advanced automation and control systems including PLCs, HMIs, SCADA solutions, and industrial communication devices.\",\n      specifications: [\n        \"I/O capacity: 16 to 2048 points\",\n        \"Communication: Ethernet, Profibus, Modbus\",\n        \"Programming: IEC 61131-3 compliant\",\n        \"Operating temperature: 0°C to +60°C\",\n        \"Redundancy options available\"\n      ],\n      applications: [\"Manufacturing Automation\", \"Process Control\", \"Building Management\", \"Machine Control\"],\n      features: [\"Flexible Programming\", \"Scalable Architecture\", \"Diagnostic Tools\", \"Remote Monitoring\"]\n    },\n    \"safety\": {\n      fullDescription: \"Comprehensive safety and protection equipment including circuit breakers, safety relays, emergency stop systems, and protective devices.\",\n      specifications: [\n        \"Breaking capacity: 6kA to 100kA\",\n        \"Safety integrity level: SIL 2/3\",\n        \"Response time: <10ms\",\n        \"Multiple protection functions\",\n        \"Arc fault protection available\"\n      ],\n      applications: [\"Personnel Safety\", \"Equipment Protection\", \"Fire Safety\", \"Emergency Systems\"],\n      features: [\"Fail-Safe Operation\", \"Self-Monitoring\", \"Quick Response\", \"Easy Testing\"]\n    },\n    \"pumps\": {\n      fullDescription: \"High-quality mechanical pumps, spare parts, and maintenance kits for various industrial and commercial applications.\",\n      specifications: [\n        \"Flow rate: 10 LPM to 5000 LPM\",\n        \"Head: 10m to 500m\",\n        \"Material: Cast iron, SS316, Bronze\",\n        \"Temperature: -20°C to +180°C\",\n        \"Efficiency: up to 85%\"\n      ],\n      applications: [\"Water Supply\", \"Chemical Processing\", \"HVAC Systems\", \"Industrial Processes\"],\n      features: [\"Energy Efficient\", \"Corrosion Resistant\", \"Low Maintenance\", \"Reliable Operation\"]\n    },\n    \"tools\": {\n      fullDescription: \"Professional grade industrial tools, tackles, and maintenance equipment for various engineering and maintenance applications.\",\n      specifications: [\n        \"Material: High-grade steel/alloy\",\n        \"Precision: ±0.1mm accuracy\",\n        \"Operating range: Various sizes\",\n        \"Ergonomic design\",\n        \"Certified to international standards\"\n      ],\n      applications: [\"Maintenance Work\", \"Installation\", \"Calibration\", \"Testing & Commissioning\"],\n      features: [\"Durable Construction\", \"Ergonomic Design\", \"Precision Engineering\", \"Multi-Purpose Use\"]\n    }\n  };\n\n  const filteredProducts = selectedCategory === \"all\" \n    ? PRODUCTS \n    : PRODUCTS.filter(product => product.id === selectedCategory);\n\n  return (\n    <>\n      <SEO\n        title=\"Industrial Products Catalog - Automation & Electrical Equipment | Powerton Engineering\"\n        description=\"Comprehensive catalog of industrial automation products, electrical components, instrumentation, solar systems, pumps, and tools. Quality equipment for industrial applications.\"\n        keywords=\"industrial products, automation equipment, electrical components, instrumentation products, solar panels, industrial pumps, measurement instruments, safety equipment\"\n        canonicalUrl=\"https://powertonengineering.in/products\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"relative section-padding bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-cover bg-center opacity-20\" style={{backgroundImage: \"url('https://images.unsplash.com/photo-1548094878-84ced0f6896d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"}}></div>\n        <div className=\"relative max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6\">\n              Industrial <span className=\"text-secondary\">Product Catalog</span>\n            </h1>\n            <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90\">\n              Comprehensive range of electrical and automation products designed for reliability, efficiency, and superior performance in industrial environments.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center gap-3 sm:gap-4\">\n              <Button className=\"btn-secondary mobile-full btn-responsive\">\n                <Download className=\"mr-2 w-4 h-4 sm:w-5 sm:h-5\" />\n                Download Catalog\n              </Button>\n              <Link href=\"/contact\" className=\"mobile-full\">\n                <Button \n                  variant=\"outline\" \n                  className=\"btn-outline mobile-full btn-responsive border-white text-white hover:bg-white hover:text-primary\"\n                >\n                  Request Quote\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Product Categories */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-12 sm:mb-16\">\n            <h2 className=\"text-responsive-xl font-bold text-primary mb-4 sm:mb-6\">\n              Product Categories\n            </h2>\n            <p className=\"text-responsive-sm text-gray-600 max-w-3xl mx-auto\">\n              Explore our comprehensive range of industrial products organized by category for easy navigation.\n            </p>\n          </div>\n\n          {/* Category Tabs */}\n          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-1 sm:gap-2 bg-gray-100 p-1 sm:p-2 rounded-lg mb-6 sm:mb-8\">\n              {productCategories.slice(0, 5).map((category) => (\n                <TabsTrigger\n                  key={category.id}\n                  value={category.id}\n                  className=\"data-[state=active]:bg-primary data-[state=active]:text-white text-xs sm:text-sm px-2 py-1 sm:px-3 sm:py-2\"\n                >\n                  <span className=\"hidden sm:inline\">{category.name}</span>\n                  <span className=\"sm:hidden\">{category.name.split(' ')[0]}</span>\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 sm:gap-4 mb-6 sm:mb-8\">\n              {productCategories.slice(5).map((category) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className=\"h-10 sm:h-12 text-xs sm:text-sm px-2 sm:px-4\"\n                >\n                  <span className=\"hidden sm:inline\">{category.name}</span>\n                  <span className=\"sm:hidden\">{category.name.split(' ')[0]}</span>\n                </Button>\n              ))}\n            </div>\n\n            {/* Product Grid */}\n            <TabsContent value={selectedCategory} className=\"space-y-6 sm:space-y-8\">\n              <div className=\"grid-responsive-cards\">\n                {filteredProducts.map((product) => {\n                  const details = productDetails[product.id as keyof typeof productDetails];\n                  \n                  return (\n                    <Card \n                      key={product.id} \n                      className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n                    >\n                      <div className=\"relative overflow-hidden\">\n                        <img \n                          src={product.image} \n                          alt={`${product.title} - ${product.description}`} \n                          className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n                          loading=\"lazy\"\n                        />\n                        <div className=\"absolute top-4 right-4\">\n                          <Badge className=\"bg-secondary text-white\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Premium\n                          </Badge>\n                        </div>\n                      </div>\n                      \n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{product.title}</h3>\n                        <p className=\"text-gray-600 text-sm mb-4\">{product.description}</p>\n                        \n                        {details && (\n                          <div className=\"space-y-4\">\n                            <div>\n                              <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Key Features:</h4>\n                              <div className=\"space-y-1\">\n                                {details.features.slice(0, 2).map((feature) => (\n                                  <div key={feature} className=\"flex items-center text-xs text-gray-600\">\n                                    <CheckCircle className=\"w-3 h-3 text-green-600 mr-2 flex-shrink-0\" />\n                                    {feature}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                              <div className=\"flex space-x-2\">\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  <Zap className=\"w-3 h-3 mr-1\" />\n                                  High Efficiency\n                                </Badge>\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  <Shield className=\"w-3 h-3 mr-1\" />\n                                  Certified\n                                </Badge>\n                              </div>\n                              <Button \n                                size=\"sm\" \n                                variant=\"ghost\" \n                                className=\"text-secondary hover:text-secondary/80 p-0\"\n                              >\n                                Details <ArrowRight className=\"ml-1 w-3 h-3\" />\n                              </Button>\n                            </div>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Detailed Product Information */}\n      {selectedCategory !== \"all\" && (\n        <section className=\"section-padding bg-gray-50\">\n          <div className=\"max-w-7xl mx-auto container-padding\">\n            {filteredProducts.map((product) => {\n              const details = productDetails[product.id as keyof typeof productDetails];\n              if (!details) return null;\n\n              return (\n                <div key={product.id} className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                  <div>\n                    <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                      {product.title}\n                    </h2>\n                    <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                      {details.fullDescription}\n                    </p>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                      <div>\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Applications</h3>\n                        <div className=\"space-y-2\">\n                          {details.applications.map((app) => (\n                            <div key={app} className=\"flex items-center\">\n                              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n                              <span className=\"text-gray-600\">{app}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n\n                      <div>\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Key Features</h3>\n                        <div className=\"space-y-2\">\n                          {details.features.map((feature) => (\n                            <div key={feature} className=\"flex items-center\">\n                              <Settings className=\"w-4 h-4 text-primary mr-3 flex-shrink-0\" />\n                              <span className=\"text-gray-600\">{feature}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Card className=\"border-none shadow-lg\">\n                      <CardHeader>\n                        <CardTitle className=\"text-xl font-bold text-gray-900\">\n                          Technical Specifications\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          {details.specifications.map((spec, index) => (\n                            <div key={index} className=\"flex items-start\">\n                              <div className=\"w-2 h-2 bg-secondary rounded-full mr-3 mt-2 flex-shrink-0\"></div>\n                              <span className=\"text-gray-600\">{spec}</span>\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                          <div className=\"flex flex-col space-y-3\">\n                            <Button className=\"btn-primary w-full\">\n                              Request Technical Datasheet\n                            </Button>\n                            <Link href=\"/contact\">\n                              <Button variant=\"outline\" className=\"w-full\">\n                                Get Product Quote\n                              </Button>\n                            </Link>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </section>\n      )}\n\n      {/* Why Choose Our Products */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Why Choose Powerton Products?\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Shield className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Quality Assurance</h3>\n                <p className=\"text-gray-600\">\n                  All products undergo rigorous testing and quality control processes to ensure reliability and performance.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Settings className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Technical Support</h3>\n                <p className=\"text-gray-600\">\n                  Comprehensive technical support and documentation to help you select and implement the right solutions.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Zap className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Innovation</h3>\n                <p className=\"text-gray-600\">\n                  Latest technology and innovative solutions to meet evolving industrial requirements and challenges.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Need Custom Product Solutions?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Can't find exactly what you're looking for? Our engineering team can customize products to meet your specific requirements.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Request Custom Solution\n              </Button>\n            </Link>\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n            >\n              <Download className=\"mr-2 w-5 h-5\" />\n              Download Complete Catalog\n            </Button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":21977},"client/src/pages/projects.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { PROJECTS } from \"@/data/constants\";\nimport { \n  MapPin, \n  Calendar, \n  ArrowRight, \n  Download,\n  Users,\n  Award,\n  Target,\n  TrendingUp,\n  CheckCircle,\n  Clock\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useState } from \"react\";\n\nexport default function Projects() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const projectCategories = [\n    { id: \"all\", name: \"All Projects\", count: PROJECTS.length },\n    { id: \"Power Plant\", name: \"Power Generation\", count: 1 },\n    { id: \"Manufacturing\", name: \"Manufacturing\", count: 1 },\n    { id: \"Solar\", name: \"Solar Energy\", count: 1 },\n    { id: \"Water Treatment\", name: \"Water Treatment\", count: 1 }\n  ];\n\n  const categoryColors = {\n    \"Power Plant\": \"bg-red-100 text-red-800\",\n    \"Manufacturing\": \"bg-blue-100 text-blue-800\",\n    \"Solar\": \"bg-green-100 text-green-800\",\n    \"Water Treatment\": \"bg-cyan-100 text-cyan-800\"\n  };\n\n  const filteredProjects = selectedCategory === \"all\" \n    ? PROJECTS \n    : PROJECTS.filter(project => project.category === selectedCategory);\n\n  const stats = [\n    { number: \"1200+\", label: \"Projects Completed\", icon: Award },\n    { number: \"450+\", label: \"Happy Clients\", icon: Users },\n    { number: \"15+\", label: \"Years Experience\", icon: Calendar },\n    { number: \"98%\", label: \"Success Rate\", icon: Target }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"Engineering Projects Portfolio - Industrial Automation Cases | Powerton Engineering\"\n        description=\"Explore our portfolio of successfully completed engineering projects including power plants, manufacturing automation, solar installations, and water treatment systems across India.\"\n        keywords=\"engineering projects, automation projects, power plant automation, manufacturing automation, solar projects, water treatment automation, industrial projects India\"\n        canonicalUrl=\"https://powertonengineering.in/projects\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6\">\n              Our <span className=\"text-secondary\">Project Portfolio</span>\n            </h1>\n            <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90\">\n              Explore our portfolio of successfully completed engineering projects showcasing our expertise in industrial automation and electrical engineering.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center gap-3 sm:gap-4\">\n              <Button className=\"btn-secondary mobile-full btn-responsive\">\n                <Download className=\"mr-2 w-4 h-4 sm:w-5 sm:h-5\" />\n                Download Portfolio\n              </Button>\n              <Link href=\"/contact\" className=\"mobile-full\">\n                <Button \n                  variant=\"outline\" \n                  className=\"btn-outline mobile-full btn-responsive border-white text-white hover:bg-white hover:text-primary\"\n                >\n                  Discuss Your Project\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Project Statistics */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\n            {stats.map((stat) => {\n              const Icon = stat.icon;\n              return (\n                <div key={stat.label} className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <Icon className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">{stat.number}</div>\n                  <div className=\"text-gray-600\">{stat.label}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Project Categories and Grid */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Featured Projects by Category\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              From power generation to water treatment, explore how we've delivered innovative engineering solutions across various industries.\n            </p>\n          </div>\n\n          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3 lg:grid-cols-5 gap-2 bg-white p-2 rounded-lg mb-8 shadow-sm\">\n              {projectCategories.map((category) => (\n                <TabsTrigger\n                  key={category.id}\n                  value={category.id}\n                  className=\"data-[state=active]:bg-primary data-[state=active]:text-white\"\n                >\n                  {category.name}\n                  <Badge variant=\"outline\" className=\"ml-2\">\n                    {category.count}\n                  </Badge>\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <TabsContent value={selectedCategory} className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                {filteredProjects.map((project) => (\n                  <Card \n                    key={project.id} \n                    className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n                  >\n                    <div className=\"relative overflow-hidden\">\n                      <img \n                        src={project.image} \n                        alt={`${project.title} - ${project.description}`}\n                        className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                        loading=\"lazy\"\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <div className=\"absolute top-4 left-4\">\n                        <Badge \n                          className={`${\n                            categoryColors[project.category as keyof typeof categoryColors] || \n                            \"bg-gray-100 text-gray-800\"\n                          }`}\n                        >\n                          {project.category}\n                        </Badge>\n                      </div>\n                      <div className=\"absolute top-4 right-4\">\n                        <Badge className=\"bg-white text-gray-900\">\n                          {project.year}\n                        </Badge>\n                      </div>\n                    </div>\n                    \n                    <CardContent className=\"p-8\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{project.title}</h3>\n                      <p className=\"text-gray-600 mb-6 leading-relaxed\">{project.description}</p>\n                      \n                      {/* Project Details */}\n                      <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <MapPin className=\"w-4 h-4 mr-2\" />\n                          {project.location}\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <Clock className=\"w-4 h-4 mr-2\" />\n                          {project.duration}\n                        </div>\n                      </div>\n\n                      {/* Project Highlights */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-sm font-semibold text-gray-900 mb-3\">Key Achievements:</h4>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {project.highlights.map((highlight) => (\n                            <div key={highlight} className=\"flex items-center text-xs text-gray-600\">\n                              <CheckCircle className=\"w-3 h-3 text-green-600 mr-2 flex-shrink-0\" />\n                              {highlight}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <TrendingUp className=\"w-4 h-4 mr-2 text-green-600\" />\n                          <span>Successfully Completed</span>\n                        </div>\n                        <Button \n                          variant=\"ghost\" \n                          className=\"text-secondary hover:text-secondary/80 font-semibold\"\n                        >\n                          View Case Study <ArrowRight className=\"ml-2 w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Detailed Case Study Section */}\n      {selectedCategory !== \"all\" && filteredProjects.length > 0 && (\n        <section className=\"section-padding bg-white\">\n          <div className=\"max-w-7xl mx-auto container-padding\">\n            {filteredProjects.map((project) => (\n              <div key={`details-${project.id}`} className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                <div>\n                  <Badge \n                    className={`mb-4 ${\n                      categoryColors[project.category as keyof typeof categoryColors] || \n                      \"bg-gray-100 text-gray-800\"\n                    }`}\n                  >\n                    {project.category} Project\n                  </Badge>\n                  <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                    {project.title}\n                  </h2>\n                  <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                    {project.description}\n                  </p>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n                    <div>\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-3\">Project Scope</h3>\n                      <div className=\"space-y-2\">\n                        {project.highlights.map((highlight) => (\n                          <div key={highlight} className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-gray-600 text-sm\">{highlight}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div>\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-3\">Project Details</h3>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center\">\n                          <MapPin className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Location: {project.location}</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <Clock className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Duration: {project.duration}</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <Calendar className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Completed: {project.year}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button className=\"btn-primary\">\n                      Discuss Similar Project\n                    </Button>\n                  </Link>\n                </div>\n\n                <div>\n                  <Card className=\"border-none shadow-lg\">\n                    <CardContent className=\"p-8\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Project Impact</h3>\n                      \n                      <div className=\"space-y-6\">\n                        <div className=\"bg-green-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-green-800 mb-2\">Energy Efficiency</h4>\n                          <p className=\"text-green-700 text-sm\">\n                            Achieved 25-30% improvement in energy efficiency through advanced automation systems.\n                          </p>\n                        </div>\n\n                        <div className=\"bg-blue-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-blue-800 mb-2\">Operational Excellence</h4>\n                          <p className=\"text-blue-700 text-sm\">\n                            Reduced manual intervention by 70% and improved process reliability significantly.\n                          </p>\n                        </div>\n\n                        <div className=\"bg-orange-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-orange-800 mb-2\">Safety Enhancement</h4>\n                          <p className=\"text-orange-700 text-sm\">\n                            Implemented comprehensive safety systems ensuring zero incidents post-commissioning.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                        <Button variant=\"outline\" className=\"w-full\">\n                          <Download className=\"mr-2 w-4 h-4\" />\n                          Download Case Study\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n\n      {/* Client Success Stories */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              What Our Clients Say About Our Projects\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">AA</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"The solar installation project was executed flawlessly. The team's professionalism and technical expertise exceeded our expectations.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Anand Awasthi</div>\n                <div className=\"text-sm text-gray-600\">West Bengal</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">SP</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"Excellent project management and on-time delivery. The automation system has significantly improved our manufacturing efficiency.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Sanjay Patil</div>\n                <div className=\"text-sm text-gray-600\">Uttar Pradesh</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">RS</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"Outstanding technical support throughout the project lifecycle. The instrumentation system works perfectly as designed.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Rhea Sharma</div>\n                <div className=\"text-sm text-gray-600\">Maharashtra</div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Ready to Start Your Next Project?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Let's discuss your project requirements and create a customized solution that delivers exceptional results for your business.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Start Project Discussion\n              </Button>\n            </Link>\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n            >\n              <Download className=\"mr-2 w-5 h-5\" />\n              Download Project Portfolio\n            </Button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":18865},"client/src/pages/services.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { SERVICES } from \"@/data/constants\";\nimport { \n  Cpu, \n  Gauge, \n  Wrench, \n  PlayCircle, \n  Shield, \n  Settings,\n  CheckCircle,\n  ArrowRight,\n  Clock,\n  Users,\n  Award\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst iconMap = {\n  \"microchip\": Cpu,\n  \"tachometer-alt\": Gauge,\n  \"tools\": Wrench,\n  \"play-circle\": PlayCircle,\n  \"shield-alt\": Shield,\n  \"cog\": Settings\n};\n\nexport default function Services() {\n  const serviceDetails = {\n    \"process-automation\": {\n      overview: \"Advanced automation systems designed to streamline industrial processes, reduce manual intervention, and optimize operational efficiency.\",\n      benefits: [\n        \"Reduced operational costs by up to 30%\",\n        \"Improved process consistency and quality\",\n        \"Enhanced safety through automated controls\",\n        \"Real-time monitoring and reporting\",\n        \"Scalable solutions for future expansion\"\n      ],\n      technologies: [\"PLC Programming\", \"SCADA Systems\", \"HMI Development\", \"Industrial IoT\", \"Edge Computing\"],\n      industries: [\"Manufacturing\", \"Process Industries\", \"Power Generation\", \"Water Treatment\", \"Oil & Gas\"]\n    },\n    \"instrumentation\": {\n      overview: \"Precision instrumentation solutions for accurate measurement, monitoring, and control of critical industrial parameters.\",\n      benefits: [\n        \"High-precision measurements with ±0.1% accuracy\",\n        \"Reliable performance in harsh environments\",\n        \"Integration with existing control systems\",\n        \"Comprehensive calibration services\",\n        \"24/7 monitoring capabilities\"\n      ],\n      technologies: [\"Smart Transmitters\", \"Flow Meters\", \"Temperature Sensors\", \"Pressure Instruments\", \"Analytical Equipment\"],\n      industries: [\"Chemical Processing\", \"Pharmaceuticals\", \"Food & Beverage\", \"Energy\", \"Environmental Monitoring\"]\n    },\n    \"site-installation\": {\n      overview: \"Professional on-site installation services ensuring optimal performance, safety compliance, and seamless system integration.\",\n      benefits: [\n        \"Certified installation technicians\",\n        \"Compliance with industry standards\",\n        \"Minimal disruption to operations\",\n        \"Comprehensive testing and validation\",\n        \"Complete documentation and training\"\n      ],\n      technologies: [\"Electrical Installation\", \"Mechanical Assembly\", \"System Integration\", \"Cable Management\", \"Safety Systems\"],\n      industries: [\"Industrial Plants\", \"Commercial Buildings\", \"Infrastructure\", \"Renewable Energy\", \"Data Centers\"]\n    },\n    \"commissioning\": {\n      overview: \"Comprehensive system commissioning to ensure all equipment operates at peak performance levels and meets design specifications.\",\n      benefits: [\n        \"Verified system performance\",\n        \"Optimized operational parameters\",\n        \"Complete functional testing\",\n        \"Performance documentation\",\n        \"Operator training programs\"\n      ],\n      technologies: [\"Performance Testing\", \"System Optimization\", \"Functional Verification\", \"Documentation\", \"Training Programs\"],\n      industries: [\"Power Plants\", \"Manufacturing\", \"HVAC Systems\", \"Process Industries\", \"Building Automation\"]\n    },\n    \"amc\": {\n      overview: \"Comprehensive Annual Maintenance Contracts designed to keep your systems running smoothly with minimal downtime and maximum efficiency.\",\n      benefits: [\n        \"Preventive maintenance scheduling\",\n        \"24/7 emergency support\",\n        \"Reduced unplanned downtime\",\n        \"Extended equipment lifespan\",\n        \"Cost-effective maintenance solutions\"\n      ],\n      technologies: [\"Predictive Maintenance\", \"Remote Monitoring\", \"Spare Parts Management\", \"Performance Analytics\", \"Emergency Response\"],\n      industries: [\"Manufacturing\", \"Power Generation\", \"Process Industries\", \"Commercial Buildings\", \"Infrastructure\"]\n    },\n    \"customized\": {\n      overview: \"Tailored engineering solutions designed specifically for unique industrial requirements and challenges that standard solutions cannot address.\",\n      benefits: [\n        \"Custom-designed for specific needs\",\n        \"Flexible and scalable solutions\",\n        \"Integration with existing systems\",\n        \"Innovative problem-solving approach\",\n        \"Long-term technical support\"\n      ],\n      technologies: [\"Custom Software Development\", \"Specialized Hardware\", \"Unique Control Algorithms\", \"Proprietary Protocols\", \"Advanced Analytics\"],\n      industries: [\"Specialized Manufacturing\", \"Research Facilities\", \"Unique Processes\", \"Emerging Technologies\", \"Custom Applications\"]\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"Engineering Services - Process Automation & Instrumentation | Powerton Engineering\"\n        description=\"Comprehensive engineering services including process automation, instrumentation solutions, site installation, commissioning, and maintenance contracts. Expert technical support across India.\"\n        keywords=\"process automation, instrumentation services, site installation, commissioning services, AMC maintenance contracts, electrical engineering services, industrial automation India\"\n        canonicalUrl=\"https://powertonengineering.in/services\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"relative section-padding bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-cover bg-center opacity-20\" style={{backgroundImage: \"url('https://images.unsplash.com/photo-1590736969955-71cc94901144?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"}}></div>\n        <div className=\"relative max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              Professional <span className=\"text-secondary\">Engineering Services</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              From process automation to maintenance contracts, we provide comprehensive engineering solutions tailored to your industrial requirements.\n            </p>\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Request Service Quote\n                <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Our Service Portfolio\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Comprehensive engineering solutions backed by 15+ years of experience and expertise in industrial automation.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {SERVICES.map((service) => {\n              const IconComponent = iconMap[service.icon as keyof typeof iconMap] || Settings;\n              \n              return (\n                <Card \n                  key={service.id} \n                  className=\"border border-gray-100 group hover:shadow-xl transition-all duration-300 hover:-translate-y-2\"\n                >\n                  <CardHeader>\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform\">\n                      <IconComponent className=\"w-8 h-8 text-white\" aria-hidden=\"true\" />\n                    </div>\n                    <CardTitle className=\"text-xl font-bold text-gray-900\">{service.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-600 mb-6\">{service.description}</p>\n                    \n                    <div className=\"space-y-2 mb-6\">\n                      <h4 className=\"font-semibold text-gray-900 text-sm\">Key Features:</h4>\n                      {service.features.slice(0, 3).map((feature) => (\n                        <div key={feature} className=\"flex items-center text-sm text-gray-600\">\n                          <CheckCircle className=\"w-4 h-4 text-green-600 mr-2 flex-shrink-0\" />\n                          {feature}\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 p-0 font-semibold\"\n                      onClick={() => {\n                        const element = document.getElementById(`service-${service.id}`);\n                        element?.scrollIntoView({ behavior: 'smooth' });\n                      }}\n                    >\n                      Learn More <ArrowRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Detailed Service Sections */}\n      {SERVICES.map((service, index) => {\n        const IconComponent = iconMap[service.icon as keyof typeof iconMap] || Settings;\n        const details = serviceDetails[service.id as keyof typeof serviceDetails];\n        const isEven = index % 2 === 0;\n        \n        return (\n          <section \n            key={service.id}\n            id={`service-${service.id}`}\n            className={`section-padding ${isEven ? 'bg-gray-50' : 'bg-white'}`}\n          >\n            <div className=\"max-w-7xl mx-auto container-padding\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                <div className={isEven ? '' : 'lg:order-2'}>\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mr-4\">\n                      <IconComponent className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <h2 className=\"text-3xl lg:text-4xl font-bold text-primary\">{service.title}</h2>\n                  </div>\n                  \n                  <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                    {details.overview}\n                  </p>\n\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Key Benefits</h3>\n                    <div className=\"space-y-3\">\n                      {details.benefits.map((benefit) => (\n                        <div key={benefit} className=\"flex items-start\">\n                          <CheckCircle className=\"w-5 h-5 text-green-600 mr-3 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-gray-600\">{benefit}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button className=\"btn-primary\">\n                      Request Quote for {service.title}\n                    </Button>\n                  </Link>\n                </div>\n\n                <div className={isEven ? '' : 'lg:order-1'}>\n                  <Card className=\"border-none shadow-lg\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"grid grid-cols-1 gap-6\">\n                        <div>\n                          <h4 className=\"font-bold text-gray-900 mb-4 flex items-center\">\n                            <Settings className=\"w-5 h-5 mr-2 text-primary\" />\n                            Technologies & Solutions\n                          </h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {details.technologies.map((tech) => (\n                              <Badge key={tech} variant=\"secondary\" className=\"bg-primary/10 text-primary\">\n                                {tech}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-bold text-gray-900 mb-4 flex items-center\">\n                            <Users className=\"w-5 h-5 mr-2 text-primary\" />\n                            Target Industries\n                          </h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {details.industries.map((industry) => (\n                              <Badge key={industry} variant=\"outline\" className=\"border-secondary text-secondary\">\n                                {industry}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n\n                        <div className=\"bg-gray-50 rounded-lg p-4\">\n                          <div className=\"flex items-center text-sm text-gray-600\">\n                            <Clock className=\"w-4 h-4 mr-2\" />\n                            <span>24/7 Support Available</span>\n                          </div>\n                          <div className=\"flex items-center text-sm text-gray-600 mt-2\">\n                            <Award className=\"w-4 h-4 mr-2\" />\n                            <span>Industry Certified Solutions</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </section>\n        );\n      })}\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Ready to Transform Your Operations?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Our expert team is ready to analyze your requirements and provide customized engineering solutions that drive efficiency and growth.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Get Free Consultation\n              </Button>\n            </Link>\n            <Link href=\"/projects\">\n              <Button \n                variant=\"outline\" \n                className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n              >\n                View Our Projects\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":15135},"client/src/components/chatbot/chatbot.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { MessageCircle, X, Send, Bot, User } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'bot';\n  timestamp: Date;\n}\n\ninterface ChatbotResponse {\n  message: string;\n  suggestions?: string[];\n}\n\nexport default function Chatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isToggling, setIsToggling] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const chatWindowRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Handle scroll management and click outside detection\n  useEffect(() => {\n    if (isOpen) {\n      // Disable scroll but keep scrollbar visible\n      const scrollY = window.scrollY;\n      document.body.style.overflowY = 'scroll';\n      document.body.style.position = 'fixed';\n      document.body.style.top = `-${scrollY}px`;\n      document.body.style.width = '100%';\n      \n      return () => {\n        document.body.style.overflowY = '';\n        document.body.style.position = '';\n        document.body.style.top = '';\n        document.body.style.width = '';\n        window.scrollTo(0, scrollY);\n      };\n    }\n  }, [isOpen]);\n\n  // Separate effect for click outside detection\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      \n      // Check if click is inside chatbot window\n      if (chatWindowRef.current?.contains(target)) {\n        return;\n      }\n      \n      // Check if click is on toggle button or its children\n      const toggleButton = document.querySelector('[data-chatbot-toggle=\"true\"]');\n      if (toggleButton?.contains(target)) {\n        return; // Don't close here - let the button's onClick handle it\n      }\n      \n      // Check if clicking on the blur overlay\n      if (target.classList?.contains('backdrop-blur-sm')) {\n        setIsOpen(false);\n        return;\n      }\n      \n      // Click is outside - close chatbot (but not if it's on the toggle button)\n      setIsOpen(false);\n    };\n\n    // Add small delay to prevent immediate triggering after opening\n    const timer = setTimeout(() => {\n      document.addEventListener('mousedown', handleClickOutside);\n    }, 200);\n\n    return () => {\n      clearTimeout(timer);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      setTimeout(() => {\n        addBotMessage({\n          message: \"Hello! I'm here to help you learn about Powerton Engineering's services and navigate our website. How can I assist you today?\",\n          suggestions: [\n            \"What services do you offer?\",\n            \"Tell me about your products\",\n            \"How can I get a quote?\",\n            \"Where are you located?\"\n          ]\n        });\n      }, 500);\n    }\n  }, [isOpen, messages.length]);\n\n  const addMessage = (text: string, sender: 'user' | 'bot') => {\n    const newMessage: Message = {\n      id: Date.now().toString(),\n      text,\n      sender,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n  };\n\n  const addBotMessage = (response: ChatbotResponse) => {\n    setIsTyping(true);\n    setTimeout(() => {\n      addMessage(response.message, 'bot');\n      setIsTyping(false);\n    }, 1000);\n  };\n\n  const generateResponse = (userInput: string): ChatbotResponse => {\n    const input = userInput.toLowerCase();\n\n    // Services related queries\n    if (input.includes('service') || input.includes('what do you do') || input.includes('what can you do')) {\n      return {\n        message: \"Powerton Engineering offers comprehensive industrial automation solutions including:\\n\\n• Process Automation Systems\\n• Instrumentation & Control\\n• Electrical Panel Manufacturing\\n• SCADA & HMI Solutions\\n• Industrial IoT Implementation\\n• Maintenance & Support Services\\n\\nWould you like detailed information about any specific service?\",\n        suggestions: [\"Process Automation\", \"Instrumentation\", \"Electrical Panels\", \"Get a Quote\"]\n      };\n    }\n\n    // Products related queries\n    if (input.includes('product') || input.includes('equipment') || input.includes('manufacture')) {\n      return {\n        message: \"We manufacture and supply a wide range of industrial products:\\n\\n• Control Panels & Switchgear\\n• Motor Control Centers (MCC)\\n• Distribution Boards\\n• Automation Hardware\\n• Sensors & Transmitters\\n• Variable Frequency Drives (VFD)\\n\\nAll our products meet international quality standards and come with comprehensive warranties.\",\n        suggestions: [\"Control Panels\", \"Motor Control Centers\", \"View All Products\", \"Technical Specifications\"]\n      };\n    }\n\n    // Quote and pricing queries\n    if (input.includes('quote') || input.includes('price') || input.includes('cost') || input.includes('estimate')) {\n      return {\n        message: \"To provide an accurate quote, I'll need some project details. You can:\\n\\n1. Fill out our online quote request form\\n2. Call us directly at +91-94627-71662\\n3. Email us at info@powertonengineering.in\\n\\nOur team typically responds within 24 hours with detailed proposals.\",\n        suggestions: [\"Request Quote\", \"Contact Us\", \"View Projects\", \"Technical Requirements\"]\n      };\n    }\n\n    // Location and contact queries\n    if (input.includes('location') || input.includes('address') || input.includes('where') || input.includes('contact')) {\n      return {\n        message: \"Powerton Engineering is located in:\\n\\n📍 2nd Floor, F-25, F Block, Sector 6\\nNoida, Uttar Pradesh - 201301, India\\n\\n📞 Phone: +91-94627-71662\\n📧 Email: info@powertonengineering.in\\n\\nWe serve clients across India with our engineering solutions.\",\n        suggestions: [\"Get Directions\", \"Call Now\", \"Send Email\", \"Service Areas\"]\n      };\n    }\n\n    // Projects and experience queries\n    if (input.includes('project') || input.includes('experience') || input.includes('portfolio') || input.includes('case study')) {\n      return {\n        message: \"With 15+ years of experience, we've successfully completed 1200+ projects across various industries:\\n\\n• Manufacturing & Production\\n• Oil & Gas\\n• Power Generation\\n• Water Treatment\\n• Chemical Processing\\n• Food & Beverage\\n\\nOur expertise ensures reliable, efficient automation solutions tailored to your specific needs.\",\n        suggestions: [\"View Projects\", \"Industry Experience\", \"Client Testimonials\", \"Technical Capabilities\"]\n      };\n    }\n\n    // Navigation help\n    if (input.includes('navigate') || input.includes('find') || input.includes('page') || input.includes('menu')) {\n      return {\n        message: \"I can help you navigate our website:\\n\\n🏠 Home - Company overview\\n📋 About - Our story and team\\n⚙️ Services - Detailed service information\\n🔧 Products - Product catalog\\n📊 Projects - Portfolio showcase\\n📞 Contact - Get in touch\\n\\nWhat specific information are you looking for?\",\n        suggestions: [\"View Services\", \"See Products\", \"Our Projects\", \"Contact Information\"]\n      };\n    }\n\n    // Technical support queries\n    if (input.includes('support') || input.includes('maintenance') || input.includes('technical') || input.includes('help')) {\n      return {\n        message: \"We provide comprehensive technical support:\\n\\n• 24/7 Emergency Support\\n• Preventive Maintenance Programs\\n• Remote Monitoring & Diagnostics\\n• On-site Technical Assistance\\n• Spare Parts & Components\\n• Training & Documentation\\n\\nOur certified engineers ensure minimal downtime and optimal system performance.\",\n        suggestions: [\"Emergency Support\", \"Maintenance Plans\", \"Technical Training\", \"Contact Support\"]\n      };\n    }\n\n    // Default response for unrecognized queries\n    return {\n      message: \"I'd be happy to help you with information about Powerton Engineering! I can assist with:\\n\\n• Our services and capabilities\\n• Product information and specifications\\n• Project portfolio and experience\\n• Contact details and locations\\n• Quote requests and pricing\\n• Technical support options\\n\\nWhat would you like to know more about?\",\n      suggestions: [\"Our Services\", \"Products & Solutions\", \"Get Quote\", \"Contact Us\"]\n    };\n  };\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    addMessage(inputValue, 'user');\n    const response = generateResponse(inputValue);\n    addBotMessage(response);\n    setInputValue(\"\");\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    addMessage(suggestion, 'user');\n    const response = generateResponse(suggestion);\n    addBotMessage(response);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <>\n      {/* Chatbot Toggle Button */}\n      <motion.div\n        className=\"fixed bottom-2 right-6 z-50\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ delay: 2 }}\n      >\n        <Button\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            // Prevent double-clicking issues\n            if (isToggling) return;\n            \n            setIsToggling(true);\n            setIsOpen(prev => !prev);\n            \n            // Reset toggle flag after a short delay\n            setTimeout(() => {\n              setIsToggling(false);\n            }, 300);\n          }}\n          className=\"w-14 h-14 rounded-full bg-primary hover:bg-primary/90 shadow-lg\"\n          aria-label={isOpen ? \"Close chat\" : \"Open chat\"}\n          data-chatbot-toggle=\"true\"\n          disabled={isToggling}\n        >\n          {isOpen ? (\n            <X className=\"w-6 h-6 text-white\" />\n          ) : (\n            <MessageCircle className=\"w-6 h-6 text-white\" />\n          )}\n        </Button>\n      </motion.div>\n\n      {/* Blur Overlay */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 bg-black/20 backdrop-blur-sm z-30\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Chatbot Window */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            ref={chatWindowRef}\n            className=\"fixed bottom-24 right-6 z-40 w-80 sm:w-96 max-h-[calc(100vh-200px)]\"\n            initial={{ opacity: 0, y: 100, scale: 0.8 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 100, scale: 0.8 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Card className=\"shadow-2xl border-0\">\n              <CardHeader className=\"bg-primary text-white rounded-t-lg\">\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\n                  <Bot className=\"w-5 h-5\" />\n                  Powerton Assistant\n                  <span className=\"ml-auto text-xs bg-secondary px-2 py-1 rounded-full\">\n                    Online\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-0 flex flex-col max-h-[calc(100vh-280px)]\">\n                {/* Messages Area */}\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 min-h-[280px] max-h-[380px] scroll-smooth chatbot-messages\">\n                  {messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div\n                        className={`max-w-[80%] p-3 rounded-lg ${\n                          message.sender === 'user'\n                            ? 'bg-primary text-white'\n                            : 'bg-white text-gray-800 shadow-sm border'\n                        }`}\n                      >\n                        <div className=\"flex items-start gap-2\">\n                          {message.sender === 'bot' && (\n                            <Bot className=\"w-4 h-4 mt-1 text-primary flex-shrink-0\" />\n                          )}\n                          {message.sender === 'user' && (\n                            <User className=\"w-4 h-4 mt-1 text-white flex-shrink-0\" />\n                          )}\n                          <div className=\"whitespace-pre-line text-sm\">\n                            {message.text}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {/* Typing indicator */}\n                  {isTyping && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"bg-white p-3 rounded-lg shadow-sm border max-w-[80%]\">\n                        <div className=\"flex items-center gap-2\">\n                          <Bot className=\"w-4 h-4 text-primary\" />\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Show suggestions if the last message has them */}\n                  {messages.length > 0 && !isTyping && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {[\"Our Services\", \"Get Quote\", \"Contact Us\", \"View Projects\"].map((suggestion) => (\n                        <button\n                          key={suggestion}\n                          onClick={() => handleSuggestionClick(suggestion)}\n                          className=\"text-xs bg-white border border-gray-300 hover:border-primary hover:text-primary px-3 py-1 rounded-full transition-colors\"\n                        >\n                          {suggestion}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                  \n                  <div ref={messagesEndRef} />\n                </div>\n\n                {/* Input Area */}\n                <div className=\"p-4 border-t bg-white rounded-b-lg\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Ask about our services...\"\n                      value={inputValue}\n                      onChange={(e) => setInputValue(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      className=\"flex-1\"\n                    />\n                    <Button\n                      onClick={handleSendMessage}\n                      disabled={!inputValue.trim()}\n                      size=\"icon\"\n                      className=\"bg-primary hover:bg-primary/90\"\n                    >\n                      <Send className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}","size_bytes":16094},"client/src/components/forms/contact-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { SERVICE_OPTIONS } from \"@/data/constants\";\nimport { z } from \"zod\";\n\nconst contactFormSchema = insertContactSchema.extend({\n  agreedToPrivacy: z.boolean().refine(val => val === true, {\n    message: \"You must agree to the privacy policy\"\n  })\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      service: \"\",\n      message: \"\",\n      agreedToPrivacy: false\n    }\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      const response = await apiRequest(\"POST\", \"/api/contacts\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Message Sent Successfully!\",\n        description: \"Thank you for your inquiry. We'll respond within 24 hours.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Sending Message\",\n        description: \"Please try again or contact us directly at +91-94627-71662.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Contact form error:\", error);\n    }\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    contactMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"text-gray-900\">\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Message Sent Successfully!</h3>\n          <p className=\"text-gray-600 mb-6\">\n            Thank you for your inquiry. Our team will review your message and respond within 24 hours.\n          </p>\n          <Button \n            onClick={() => setIsSubmitted(false)}\n            className=\"btn-primary\"\n          >\n            Send Another Message\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"text-gray-900 border-none shadow-lg\">\n      <CardContent className=\"p-4 sm:p-6 md:p-8\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 sm:space-y-6\">\n            <div className=\"grid-responsive-2\">\n              <FormField\n                control={form.control}\n                name=\"firstName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-xs sm:text-sm font-semibold text-gray-700\">\n                      First Name *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        className=\"w-full px-3 sm:px-4 py-2 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent text-sm sm:text-base\"\n                        placeholder=\"Enter your first name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Last Name *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your last name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Email *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        type=\"email\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your email address\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Phone *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        type=\"tel\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your phone number\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"service\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                    Service of Interest *\n                  </FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                        <SelectValue placeholder=\"Select a service...\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {SERVICE_OPTIONS.map((option) => (\n                        <SelectItem key={option.value} value={option.value}>\n                          {option.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"message\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                    Project Details *\n                  </FormLabel>\n                  <FormControl>\n                    <Textarea \n                      {...field} \n                      rows={4}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                      placeholder=\"Please describe your project requirements, timeline, and any specific technical specifications...\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"agreedToPrivacy\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      className=\"rounded border-gray-300 text-secondary focus:ring-secondary\"\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel className=\"text-sm text-gray-600\">\n                      I agree to the{\" \"}\n                      <a href=\"#\" className=\"text-secondary hover:underline\">\n                        Privacy Policy\n                      </a>{\" \"}\n                      and consent to being contacted about my inquiry. *\n                    </FormLabel>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button \n              type=\"submit\" \n              disabled={contactMutation.isPending}\n              className=\"w-full bg-secondary text-white py-4 rounded-lg hover:bg-secondary/90 transition-colors font-semibold\"\n            >\n              {contactMutation.isPending ? \"Sending...\" : \"Send Message & Request Quote\"}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":10412},"client/src/components/forms/quote-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertQuoteRequestSchema } from \"@shared/schema\";\nimport { SERVICE_OPTIONS } from \"@/data/constants\";\nimport { z } from \"zod\";\nimport { CheckCircle, FileText, Calculator } from \"lucide-react\";\n\nconst quoteFormSchema = insertQuoteRequestSchema.extend({\n  budget: z.string().optional(),\n  timeline: z.string().optional()\n});\n\ntype QuoteFormData = z.infer<typeof quoteFormSchema>;\n\nconst budgetRanges = [\n  { value: \"under-5-lakh\", label: \"Under ₹5 Lakh\" },\n  { value: \"5-10-lakh\", label: \"₹5 - 10 Lakh\" },\n  { value: \"10-25-lakh\", label: \"₹10 - 25 Lakh\" },\n  { value: \"25-50-lakh\", label: \"₹25 - 50 Lakh\" },\n  { value: \"50-lakh-1-crore\", label: \"₹50 Lakh - 1 Crore\" },\n  { value: \"above-1-crore\", label: \"Above ₹1 Crore\" },\n  { value: \"to-be-discussed\", label: \"To be discussed\" }\n];\n\nconst timelineOptions = [\n  { value: \"immediate\", label: \"Immediate (1-2 weeks)\" },\n  { value: \"1-month\", label: \"Within 1 month\" },\n  { value: \"2-3-months\", label: \"2-3 months\" },\n  { value: \"3-6-months\", label: \"3-6 months\" },\n  { value: \"6-months-plus\", label: \"6+ months\" },\n  { value: \"flexible\", label: \"Flexible timeline\" }\n];\n\nexport default function QuoteForm() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<QuoteFormData>({\n    resolver: zodResolver(quoteFormSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      company: \"\",\n      service: \"\",\n      projectDetails: \"\",\n      budget: \"\",\n      timeline: \"\"\n    }\n  });\n\n  const quoteMutation = useMutation({\n    mutationFn: async (data: QuoteFormData) => {\n      const response = await apiRequest(\"POST\", \"/api/quote-requests\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Quote Request Submitted!\",\n        description: \"Our team will review your requirements and send a detailed quote within 24 hours.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Submitting Quote Request\",\n        description: \"Please try again or contact us directly at +91-94627-71662.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Quote form error:\", error);\n    }\n  });\n\n  const onSubmit = (data: QuoteFormData) => {\n    quoteMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"text-gray-900 border-none shadow-lg\">\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\n          </div>\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Quote Request Received!</h3>\n          <p className=\"text-gray-600 mb-6 leading-relaxed\">\n            Thank you for your detailed project information. Our engineering team will analyze your requirements and prepare a comprehensive quote including:\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8 text-left\">\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Detailed cost breakdown</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Project timeline</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Technical specifications</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Implementation plan</span>\n            </div>\n          </div>\n          <p className=\"text-sm text-gray-500 mb-6\">\n            Expected response time: Within 24 hours\n          </p>\n          <Button \n            onClick={() => setIsSubmitted(false)}\n            className=\"btn-primary\"\n          >\n            Submit Another Quote Request\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"text-gray-900 border-none shadow-lg\">\n      <CardContent className=\"p-8\">\n        <div className=\"flex items-center mb-6\">\n          <Calculator className=\"w-6 h-6 text-secondary mr-3\" />\n          <h3 className=\"text-xl font-bold text-gray-900\">Project Quote Request</h3>\n        </div>\n        \n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Personal Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-lg font-semibold text-gray-900 border-b pb-2\">Contact Information</h4>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"firstName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        First Name *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your first name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"lastName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Last Name *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your last name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Email Address *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          type=\"email\"\n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your email address\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Phone Number *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          type=\"tel\"\n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your phone number\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Company/Organization\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        value={field.value || \"\"}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your company name (optional)\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Project Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-lg font-semibold text-gray-900 border-b pb-2\">Project Details</h4>\n              \n              <FormField\n                control={form.control}\n                name=\"service\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Primary Service Required *\n                    </FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                          <SelectValue placeholder=\"Select the primary service you need...\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {SERVICE_OPTIONS.map((option) => (\n                          <SelectItem key={option.value} value={option.value}>\n                            {option.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"projectDetails\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Detailed Project Description *\n                    </FormLabel>\n                    <FormControl>\n                      <Textarea \n                        {...field} \n                        rows={6}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Please provide detailed information about your project including:\n• Scope of work and objectives\n• Technical requirements and specifications\n• Location and site conditions\n• Any specific challenges or constraints\n• Expected deliverables\n• Integration with existing systems (if applicable)\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"budget\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Estimated Budget Range\n                      </FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                            <SelectValue placeholder=\"Select budget range (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {budgetRanges.map((range) => (\n                            <SelectItem key={range.value} value={range.value}>\n                              {range.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"timeline\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Expected Timeline\n                      </FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                            <SelectValue placeholder=\"Select timeline (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {timelineOptions.map((option) => (\n                            <SelectItem key={option.value} value={option.value}>\n                              {option.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n            </div>\n\n            {/* Additional Information */}\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex items-start\">\n                <FileText className=\"w-5 h-5 text-blue-600 mr-3 mt-0.5 flex-shrink-0\" />\n                <div className=\"text-sm text-blue-800\">\n                  <p className=\"font-semibold mb-2\">What happens next?</p>\n                  <ul className=\"space-y-1 text-blue-700\">\n                    <li>• Our engineering team will review your requirements</li>\n                    <li>• We may contact you for clarifications or additional details</li>\n                    <li>• A comprehensive quote will be prepared within 24-48 hours</li>\n                    <li>• The quote will include cost breakdown, timeline, and implementation plan</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <Button \n              type=\"submit\" \n              disabled={quoteMutation.isPending}\n              className=\"w-full bg-secondary text-white py-4 rounded-lg hover:bg-secondary/90 transition-colors font-semibold text-lg\"\n            >\n              {quoteMutation.isPending ? \"Submitting Quote Request...\" : \"Submit Quote Request\"}\n            </Button>\n\n            <p className=\"text-xs text-gray-500 text-center\">\n              By submitting this form, you agree to be contacted by our team regarding your project requirements. \n              We respect your privacy and will not share your information with third parties.\n            </p>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":17002},"client/src/components/layout/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Phone, Mail, MapPin } from \"lucide-react\";\nimport { COMPANY_INFO, SERVICES, PRODUCTS } from \"@/data/constants\";\nimport logoImage from \"@assets/logo-new-removebg-preview_1755497919444.png\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-12\" role=\"contentinfo\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-8\">\n          {/* Company Info */}\n          <div>\n            <div className=\"mb-4\">\n              <img \n                src={logoImage} \n                alt=\"Powerton Engineering Pvt. Ltd.\" \n                className=\"h-12 w-auto mb-3\"\n                loading=\"lazy\"\n              />\n            </div>\n            <p className=\"text-gray-300 mb-6\">\n              Your trusted partner in delivering high-quality engineering solutions and services for industrial automation and electrical systems.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href={COMPANY_INFO.socialMedia.linkedin} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on LinkedIn\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.338 16.338H13.67V12.16c0-.995-.017-2.277-1.387-2.277-1.39 0-1.601 1.086-1.601 2.207v4.248H8.014v-8.59h2.559v1.174h.037c.356-.675 1.227-1.387 2.526-1.387 2.703 0 3.203 1.778 3.203 4.092v4.711zM5.005 6.575a1.548 1.548 0 11-.003-3.096 1.548 1.548 0 01.003 3.096zm-1.337 9.763H6.34v-8.59H3.667v8.59zM17.668 1H2.328C1.595 1 1 1.581 1 2.298v15.403C1 18.418 1.595 19 2.328 19h15.34c.734 0 1.332-.582 1.332-1.299V2.298C19 1.581 18.402 1 17.668 1z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n              <a \n                href={COMPANY_INFO.socialMedia.twitter} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on Twitter\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                </svg>\n              </a>\n              <a \n                href={COMPANY_INFO.socialMedia.facebook} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on Facebook\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Services</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              {SERVICES.slice(0, 4).map((service) => (\n                <li key={service.id}>\n                  <Link \n                    href=\"/services\" \n                    className=\"hover:text-secondary transition-colors\"\n                  >\n                    {service.title}\n                  </Link>\n                </li>\n              ))}\n              <li>\n                <Link \n                  href=\"/quote\" \n                  className=\"text-secondary hover:text-secondary/80 transition-colors font-semibold\"\n                >\n                  Get Quote →\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Products */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Products</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              {PRODUCTS.slice(0, 5).map((product) => (\n                <li key={product.id}>\n                  <Link \n                    href=\"/products\" \n                    className=\"hover:text-secondary transition-colors\"\n                  >\n                    {product.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Contact Info</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              <li className=\"flex items-center\">\n                <Phone className=\"w-4 h-4 mr-3 text-secondary\" aria-hidden=\"true\" />\n                <span>{COMPANY_INFO.phone}</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Mail className=\"w-4 h-4 mr-3 text-secondary\" aria-hidden=\"true\" />\n                <span>{COMPANY_INFO.email}</span>\n              </li>\n              <li className=\"flex items-start\">\n                <MapPin className=\"w-4 h-4 mr-3 text-secondary mt-1\" aria-hidden=\"true\" />\n                <span>\n                  {COMPANY_INFO.address.street}<br />\n                  {COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} {COMPANY_INFO.address.pincode}\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-400 text-sm mb-4 md:mb-0\">\n              &copy; 2024 Powerton Engineering Pvt. Ltd. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 text-sm text-gray-400\">\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Privacy Policy</a>\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Terms of Service</a>\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Sitemap</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6530},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, Phone, Mail, MapPin } from \"lucide-react\";\nimport { COMPANY_INFO } from \"@/data/constants\";\nimport logoImage from \"@assets/logo-new-removebg-preview_1755497919444.png\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigation = [\n    { name: \"About\", href: \"/about\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Products\", href: \"/products\" },\n    { name: \"Projects\", href: \"/projects\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm sticky top-0 z-50\" role=\"banner\">\n      {/* Top bar */}\n      <div className=\"bg-primary text-white py-1 sm:py-2\">\n        <div className=\"max-w-7xl mx-auto container-padding flex flex-col sm:flex-row sm:justify-between items-center gap-2 sm:gap-0 text-xs sm:text-sm\">\n          <div className=\"flex items-center gap-2 sm:gap-4 flex-wrap justify-center sm:justify-start\">\n            <a \n              href={`tel:${COMPANY_INFO.phone}`} \n              className=\"flex items-center hover:text-secondary transition-colors\"\n              aria-label=\"Call us\"\n            >\n              <Phone className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n              <span className=\"hidden xs:inline\">{COMPANY_INFO.phone}</span>\n              <span className=\"xs:hidden\">Call</span>\n            </a>\n            <a \n              href={`mailto:${COMPANY_INFO.email}`} \n              className=\"flex items-center hover:text-secondary transition-colors\"\n              aria-label=\"Email us\"\n            >\n              <Mail className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n              <span className=\"hidden sm:inline\">{COMPANY_INFO.email}</span>\n              <span className=\"sm:hidden\">Email</span>\n            </a>\n          </div>\n          <div className=\"hidden md:flex items-center\">\n            <span className=\"flex items-center\">\n              <MapPin className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n              <span className=\"text-xs lg:text-sm\">{COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} - Serving All India</span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main navigation */}\n      <nav className=\"max-w-7xl mx-auto container-padding\" role=\"navigation\" aria-label=\"Main navigation\">\n        <div className=\"flex justify-between items-center py-3 sm:py-4\">\n          <Link href=\"/\" className=\"flex items-center\">\n            <img \n              src={logoImage} \n              alt=\"Powerton Engineering Pvt. Ltd.\" \n              className=\"h-8 sm:h-10 md:h-12 w-auto\"\n              loading=\"eager\"\n            />\n          </Link>\n\n          {/* Desktop navigation */}\n          <div className=\"hidden lg:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`text-gray-700 hover:text-primary transition-colors font-medium ${\n                  isActive(item.href) ? \"text-primary border-b-2 border-primary\" : \"\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            ))}\n            <Link href=\"/quote\">\n              <Button className=\"btn-secondary\">\n                Get Quote\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile navigation */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\">\n                <Menu className=\"w-6 h-6\" />\n                <span className=\"sr-only\">Open mobile menu</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n              <nav className=\"flex flex-col space-y-4 mt-8\">\n                {navigation.map((item) => (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    className={`text-lg font-medium transition-colors ${\n                      isActive(item.href) ? \"text-primary\" : \"text-gray-700 hover:text-primary\"\n                    }`}\n                    onClick={() => setIsOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n                <Link href=\"/quote\" onClick={() => setIsOpen(false)}>\n                  <Button className=\"btn-secondary w-full mt-4\">\n                    Get Quote\n                  </Button>\n                </Link>\n              </nav>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":5111},"client/src/components/layout/layout.tsx":{"content":"import Header from \"./header\";\nimport Footer from \"./footer\";\nimport Chatbot from \"@/components/chatbot/chatbot\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      <Footer />\n      <Chatbot />\n    </div>\n  );\n}\n","size_bytes":426},"client/src/components/sections/about-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Cog, Wrench, Sun, Settings } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function AboutSection() {\n  const features = [\n    {\n      icon: Cog,\n      title: \"Electrical & Instrumentation\",\n      description: \"Complete range of control systems\"\n    },\n    {\n      icon: Wrench,\n      title: \"Mechanical Pumps\",\n      description: \"Durable pump solutions & spares\"\n    },\n    {\n      icon: Sun,\n      title: \"Solar Solutions\",\n      description: \"Sustainable energy installations\"\n    },\n    {\n      icon: Settings,\n      title: \"Industrial Tools\",\n      description: \"Professional grade equipment\"\n    }\n  ];\n\n  return (\n    <section id=\"about\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 sm:gap-12 lg:gap-16 items-center\">\n          <div className=\"order-2 lg:order-1 relative\">\n            <div className=\"relative overflow-hidden rounded-xl shadow-2xl\">\n              <img \n                src=\"https://images.unsplash.com/photo-1581092335878-1c43d93b6e07?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                alt=\"Professional Indian engineers working on industrial automation and control systems\" \n                className=\"w-full h-auto object-cover animate-fade-in transform hover:scale-105 transition-transform duration-300\"\n                loading=\"lazy\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-primary/20 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\n            </div>\n            \n            {/* Decorative elements */}\n            <div className=\"absolute -top-4 -right-4 w-16 h-16 bg-secondary/20 rounded-full blur-xl\"></div>\n            <div className=\"absolute -bottom-4 -left-4 w-20 h-20 bg-primary/20 rounded-full blur-xl\"></div>\n          </div>\n          \n          <div className=\"animate-slide-in-right order-1 lg:order-2\">\n            <span className=\"text-secondary font-semibold text-sm sm:text-base md:text-lg\">About Us</span>\n            <h2 className=\"text-responsive-xl font-bold text-primary mt-2 sm:mt-4 mb-4 sm:mb-6\">\n              Welcome to Powerton Engineering Pvt. Ltd.\n            </h2>\n            <p className=\"text-responsive-sm text-gray-600 mb-6 leading-relaxed\">\n              Your trusted partner in delivering high-quality engineering solutions and services. Founded with a vision to empower industries through innovation and excellence, we specialize in providing a comprehensive range of electrical and instrumentation products.\n            </p>\n            \n            <div className=\"grid-responsive-2 mb-6 sm:mb-8\">\n              {features.map((feature, index) => {\n                const Icon = feature.icon;\n                return (\n                  <div key={feature.title} className=\"flex items-start space-x-3\">\n                    <div className=\"flex-shrink-0 w-8 h-8 bg-secondary rounded-full flex items-center justify-center\">\n                      <Icon className=\"w-4 h-4 text-white\" aria-hidden=\"true\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{feature.title}</h3>\n                      <p className=\"text-gray-600 text-sm\">{feature.description}</p>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            <div className=\"space-y-4\">\n              <Link href=\"/about\">\n                <Button className=\"btn-primary mr-4\">\n                  Learn More About Us\n                </Button>\n              </Link>\n              <Link href=\"/quote\">\n                <Button \n                  variant=\"outline\" \n                  className=\"btn-outline border-primary text-primary hover:bg-primary hover:text-white\"\n                >\n                  Get Quote\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4105},"client/src/components/sections/clients-section.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { TESTIMONIALS, CLIENTS } from \"@/data/constants\";\nimport { Star } from \"lucide-react\";\n\nexport default function ClientsSection() {\n  return (\n    <section className=\"section-padding bg-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Clients</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Trusted By Leading Brands and Organizations\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            We've partnered with industry leaders across various sectors to deliver exceptional engineering solutions.\n          </p>\n        </div>\n\n        {/* Client Logos Grid */}\n        <div className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-8 items-center opacity-70 hover:opacity-100 transition-opacity duration-300 mb-16\">\n          {CLIENTS.map((client, index) => (\n            <div \n              key={client} \n              className=\"flex items-center justify-center p-6 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300 min-h-[80px] border border-gray-100\"\n            >\n              <span className=\"text-gray-700 font-semibold text-sm text-center leading-tight\">{client}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* Testimonials Section */}\n        <div className=\"text-center mb-12\">\n          <h3 className=\"text-2xl font-bold text-primary mb-8\">What Our Clients Say</h3>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {TESTIMONIALS.map((testimonial) => (\n            <Card key={testimonial.name} className=\"bg-gray-50 border border-gray-100\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex text-secondary\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"w-4 h-4 fill-current\" aria-hidden=\"true\" />\n                    ))}\n                  </div>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\"{testimonial.comment}\"</p>\n                <div className=\"flex items-center\">\n                  <div className=\"relative w-12 h-12 mr-4\">\n                    <img \n                      src={testimonial.image} \n                      alt={`${testimonial.name} - ${testimonial.location}`}\n                      className=\"w-full h-full rounded-full object-cover shadow-md\"\n                      loading=\"lazy\"\n                    />\n                    <div className=\"absolute inset-0 rounded-full ring-2 ring-primary/20\"></div>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-900\">{testimonial.name}</div>\n                    <div className=\"text-sm text-gray-600\">{testimonial.location}</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3205},"client/src/components/sections/contact-section.tsx":{"content":"import ContactForm from \"@/components/forms/contact-form\";\nimport { Phone, Mail, MapPin, Clock } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function ContactSection() {\n  return (\n    <section id=\"contact\" className=\"section-padding bg-primary text-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Contact Us</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold mt-4 mb-6\">\n            Let's Discuss Your Engineering Needs\n          </h2>\n          <p className=\"text-xl opacity-90 max-w-3xl mx-auto\">\n            Ready to start your next project? Get in touch with our expert team for customized solutions and professional consultation.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          <div>\n            <h3 className=\"text-2xl font-bold mb-4\">Get in Touch</h3>\n            <p className=\"text-blue-100 mb-6\">\n              Need a detailed quote? <Link href=\"/quote\" className=\"text-secondary hover:underline font-semibold\">Visit our Quote Page</Link> for comprehensive project pricing.\n            </p>\n            \n            <div className=\"space-y-6 mb-8\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <Phone className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Phone</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.phone}</p>\n                  <p className=\"text-sm opacity-70\">Available 24/7 for emergency support</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <Mail className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Email</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.email}</p>\n                  <p className=\"text-sm opacity-70\">We'll respond within 24 hours</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <MapPin className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Address</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.address.street}</p>\n                  <p className=\"opacity-90\">{COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} {COMPANY_INFO.address.pincode}</p>\n                  <p className=\"text-sm opacity-70\">Nearest Metro: {COMPANY_INFO.address.landmark}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white bg-opacity-10 rounded-lg p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Clock className=\"w-5 h-5 mr-3\" />\n                <h4 className=\"font-semibold\">Business Hours</h4>\n              </div>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Monday - Saturday:</span>\n                  <span>9:00 AM - 6:00 PM</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Sunday:</span>\n                  <span>Emergency Support Only</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <ContactForm />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4044},"client/src/components/sections/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { ArrowRight, CheckCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function HeroSection() {\n  return (\n    <section \n      id=\"home\" \n      className=\"relative bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\"\n      role=\"banner\"\n    >\n      <div className=\"absolute inset-0 bg-black bg-opacity-20\"></div>\n      \n      {/* Background Image */}\n      <div \n        className=\"absolute inset-0 bg-cover bg-center opacity-30\"\n        style={{\n          backgroundImage: \"url('https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n        }}\n      ></div>\n      \n      <div className=\"relative max-w-7xl mx-auto container-padding py-12 sm:py-16 md:py-20 lg:py-32\">\n        <div className=\"max-w-4xl\">\n          <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6 leading-tight animate-fade-in\">\n            Comprehensive Solutions for <span className=\"text-secondary\">Industrial Success</span>\n          </h1>\n          <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90 leading-relaxed animate-fade-in\">\n            Our broad portfolio of products and services provides all-encompassing solutions that drive industrial success, ensuring that every aspect of your engineering needs is covered.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 mb-8 sm:mb-12\">\n            <Link href=\"/services\" className=\"w-full sm:w-auto\">\n              <Button className=\"btn-secondary w-full sm:w-auto text-sm sm:text-base md:text-lg px-4 sm:px-6 md:px-8 py-3 sm:py-4 transform hover:scale-105 transition-all\">\n                Explore Our Services\n                <ArrowRight className=\"ml-2 w-4 h-4 sm:w-5 sm:h-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/quote\" className=\"w-full sm:w-auto\">\n              <Button \n                variant=\"outline\" \n                className=\"btn-outline w-full sm:w-auto text-sm sm:text-base md:text-lg px-4 sm:px-6 md:px-8 py-3 sm:py-4 border-white text-white hover:bg-white hover:text-primary\"\n              >\n                Get Free Quote\n              </Button>\n            </Link>\n          </div>\n\n          {/* Key Features */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">15+ Years Experience</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">24/7 Technical Support</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">Pan-India Service</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Section */}\n      <div className=\"relative bg-white bg-opacity-10 backdrop-blur-sm border-t border-white border-opacity-20\">\n        <div className=\"max-w-7xl mx-auto container-padding py-8\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">15+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Years Experience</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">1200+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Projects Completed</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">450+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Happy Clients</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">24/7</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Support Available</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4272},"client/src/components/sections/products-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { PRODUCTS } from \"@/data/constants\";\nimport { ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ProductsSection() {\n  return (\n    <section id=\"products\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Products</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Industrial Automation Equipment Solutions\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Comprehensive range of electrical and automation products designed for reliability, efficiency, and superior performance in industrial environments.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12\">\n          {PRODUCTS.map((product) => (\n            <Card \n              key={product.id} \n              className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n            >\n              <div className=\"relative overflow-hidden\">\n                <img \n                  src={product.image} \n                  alt={`${product.title} - ${product.description}`} \n                  className=\"w-full h-48 object-cover group-hover:scale-110 transition-transform duration-500\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300\"></div>\n                \n                {/* Product Category Badge */}\n                <div className=\"absolute top-3 left-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <span className=\"bg-white/20 backdrop-blur-sm text-white px-2 py-1 rounded text-xs font-medium\">\n                    Industrial Grade\n                  </span>\n                </div>\n              </div>\n              \n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{product.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">{product.description}</p>\n                <Link href=\"/products\">\n                  <Button \n                    variant=\"ghost\" \n                    className=\"text-secondary hover:text-secondary/80 p-0 font-medium\"\n                  >\n                    View Products <ArrowRight className=\"ml-2 w-4 h-4\" />\n                  </Button>\n                </Link>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center space-x-4\">\n          <Link href=\"/products\">\n            <Button className=\"btn-primary text-lg px-8 py-4\">\n              View Complete Product Catalog\n            </Button>\n          </Link>\n          <Link href=\"/quote\">\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-primary text-primary hover:bg-primary hover:text-white\"\n            >\n              Request Quote\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3422},"client/src/components/sections/projects-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { PROJECTS } from \"@/data/constants\";\nimport { MapPin, Calendar, ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ProjectsSection() {\n  const categoryColors = {\n    \"Power Plant\": \"bg-red-100 text-red-800\",\n    \"Manufacturing\": \"bg-blue-100 text-blue-800\",\n    \"Solar\": \"bg-green-100 text-green-800\",\n    \"Water Treatment\": \"bg-cyan-100 text-cyan-800\"\n  };\n\n  return (\n    <section id=\"projects\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Projects</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Successfully Delivered Engineering Solutions\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Explore our portfolio of completed projects showcasing our expertise in industrial automation and electrical engineering.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12\">\n          {PROJECTS.map((project) => (\n            <Card \n              key={project.id} \n              className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n            >\n              <div className=\"relative overflow-hidden\">\n                <img \n                  src={project.image} \n                  alt={`${project.title} - ${project.description}`}\n                  className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n              </div>\n              \n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-4\">\n                  <Badge \n                    className={`mr-4 ${\n                      categoryColors[project.category as keyof typeof categoryColors] || \n                      \"bg-gray-100 text-gray-800\"\n                    }`}\n                  >\n                    {project.category}\n                  </Badge>\n                  <span className=\"text-gray-500 text-sm\">Completed {project.year}</span>\n                </div>\n                \n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{project.title}</h3>\n                <p className=\"text-gray-600 mb-6\">{project.description}</p>\n                \n                {/* Project Highlights */}\n                <div className=\"mb-6\">\n                  <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Key Features:</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {project.highlights.map((highlight) => (\n                      <span \n                        key={highlight}\n                        className=\"text-xs bg-primary/10 text-primary px-2 py-1 rounded\"\n                      >\n                        {highlight}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                    <span className=\"flex items-center\">\n                      <MapPin className=\"w-4 h-4 mr-1\" aria-hidden=\"true\" />\n                      {project.location}\n                    </span>\n                    <span className=\"flex items-center\">\n                      <Calendar className=\"w-4 h-4 mr-1\" aria-hidden=\"true\" />\n                      {project.duration}\n                    </span>\n                  </div>\n                  <Link href=\"/projects\">\n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 font-semibold\"\n                    >\n                      View Details <ArrowRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <Link href=\"/projects\">\n            <Button className=\"btn-primary text-lg px-8 py-4 mr-4\">\n              View All Projects\n            </Button>\n          </Link>\n          <Button \n            variant=\"outline\" \n            className=\"btn-outline text-lg px-8 py-4\"\n          >\n            Download Portfolio\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4884},"client/src/components/sections/services-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { SERVICES } from \"@/data/constants\";\nimport { \n  Cpu, \n  Gauge, \n  Wrench, \n  PlayCircle, \n  Shield, \n  Settings \n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst iconMap = {\n  \"microchip\": Cpu,\n  \"tachometer-alt\": Gauge,\n  \"tools\": Wrench,\n  \"play-circle\": PlayCircle,\n  \"shield-alt\": Shield,\n  \"cog\": Settings\n};\n\nexport default function ServicesSection() {\n  // Service background images\n  const serviceImages = {\n    \"process-automation\": \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\",\n    \"instrumentation\": \"https://images.unsplash.com/photo-1581092918056-0c4c3acd3789?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\",\n    \"site-installation\": \"https://images.unsplash.com/photo-1504307651254-35680f356dfd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\",\n    \"commissioning\": \"https://images.unsplash.com/photo-1621905251918-48416bd8575a?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\",\n    \"amc\": \"https://images.unsplash.com/photo-1581092335878-1c43d93b6e07?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\",\n    \"customized\": \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\"\n  };\n\n  return (\n    <section id=\"services\" className=\"section-padding bg-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-12 sm:mb-16\">\n          <span className=\"text-secondary font-semibold text-sm sm:text-base md:text-lg\">Our Services</span>\n          <h2 className=\"text-responsive-xl font-bold text-primary mt-2 sm:mt-4 mb-4 sm:mb-6\">\n            Expert solutions for all needs, delivered with exceptional care\n          </h2>\n          <p className=\"text-responsive-sm text-gray-600 max-w-3xl mx-auto\">\n            From process automation to maintenance contracts, we provide comprehensive engineering solutions tailored to your industrial requirements.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8\">\n          {SERVICES.map((service, index) => {\n            const IconComponent = iconMap[service.icon as keyof typeof iconMap] || Settings;\n            \n            return (\n              <Card \n                key={service.id} \n                className=\"border border-gray-100 group hover:shadow-xl transition-all duration-300 hover:-translate-y-1 sm:hover:-translate-y-2 overflow-hidden\"\n              >\n                {/* Service Image */}\n                <div className=\"relative h-32 sm:h-40 overflow-hidden\">\n                  <img \n                    src={serviceImages[service.id as keyof typeof serviceImages]} \n                    alt={`${service.title} - ${service.description}`}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\n                  <div className=\"absolute bottom-3 left-3\">\n                    <div className=\"w-8 h-8 sm:w-10 sm:h-10 bg-white/20 backdrop-blur-sm rounded-lg flex items-center justify-center\">\n                      <IconComponent className=\"w-4 h-4 sm:w-5 sm:h-5 text-white\" aria-hidden=\"true\" />\n                    </div>\n                  </div>\n                </div>\n                \n                <CardContent className=\"p-4 sm:p-6 md:p-8\">\n                  \n                  <h3 className=\"text-lg sm:text-xl font-bold text-gray-900 mb-3 sm:mb-4\">{service.title}</h3>\n                  <p className=\"text-sm sm:text-base text-gray-600 mb-4 sm:mb-6\">{service.description}</p>\n                  \n                  <ul className=\"space-y-2 mb-6\">\n                    {service.features.map((feature) => (\n                      <li key={feature} className=\"text-sm text-gray-600 flex items-center\">\n                        <div className=\"w-1.5 h-1.5 bg-secondary rounded-full mr-3\"></div>\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <Link href=\"/services\">\n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 p-0 font-semibold\"\n                    >\n                      Learn More →\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        <div className=\"text-center mt-12 space-x-4\">\n          <Link href=\"/services\">\n            <Button className=\"btn-primary text-lg px-8 py-4\">\n              View All Services\n            </Button>\n          </Link>\n          <Link href=\"/quote\">\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-primary text-primary hover:bg-primary hover:text-white\"\n            >\n              Get Quote\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5260},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","size_bytes":1843},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent, DialogTitle } from \"@/components/ui/dialog\"\nimport { VisuallyHidden } from \"@radix-ui/react-visually-hidden\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <VisuallyHidden>\n          <DialogTitle>Command Menu</DialogTitle>\n        </VisuallyHidden>\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":5064},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"shared/schema.js":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  service: text(\"service\").notNull(),\n  message: text(\"message\").notNull(),\n  agreedToPrivacy: boolean(\"agreed_to_privacy\").notNull().default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const quoteRequests = pgTable(\"quote_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  company: text(\"company\"),\n  service: text(\"service\").notNull(),\n  projectDetails: text(\"project_details\").notNull(),\n  budget: text(\"budget\"),\n  timeline: text(\"timeline\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const chatbotMessages = pgTable(\"chatbot_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  sessionId: text(\"session_id\").notNull(),\n  userMessage: text(\"user_message\").notNull(),\n  botResponse: text(\"bot_response\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertQuoteRequestSchema = createInsertSchema(quoteRequests).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertChatbotMessageSchema = createInsertSchema(chatbotMessages).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Export the schemas for use in components\nexport const schemas = {\n  insertContact: insertContactSchema,\n  insertQuoteRequest: insertQuoteRequestSchema,\n  insertChatbotMessage: insertChatbotMessageSchema\n};\n","size_bytes":2073},"client/src/App.jsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\n// Layout\nimport Layout from \"@/components/layout/layout\";\n\n// Pages\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Services from \"@/pages/services\";\nimport Products from \"@/pages/products\";\nimport Projects from \"@/pages/projects\";\nimport Contact from \"@/pages/contact\";\nimport NotFound from \"@/pages/not-found\";\nimport Chatbot from \"@/components/chatbot/chatbot\";\n\nfunction Router() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/services\" component={Services} />\n        <Route path=\"/products\" component={Products} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n      <Chatbot />\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1451},"client/src/main.jsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")).render(<App />);\n","size_bytes":156},"client/src/hooks/use-mobile.jsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-scroll-animation.jsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\nexport const useScrollAnimation = (options = {}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          if (options.once !== false) {\n            observer.unobserve(entry.target);\n          }\n        } else if (options.once === false) {\n          setIsVisible(false);\n        }\n      },\n      {\n        threshold: options.threshold || 0.1,\n        rootMargin: options.rootMargin || '0px',\n      }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [options.threshold, options.rootMargin, options.once]);\n\n  return [ref, isVisible];\n};\n\nexport const useScrollAnimations = () => {\n  useEffect(() => {\n    const elements = document.querySelectorAll('[data-scroll]');\n    \n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const animation = entry.target.dataset.scroll;\n            entry.target.classList.add(`animate-${animation}`);\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n      {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px',\n      }\n    );\n\n    elements.forEach((el) => observer.observe(el));\n\n    return () => {\n      elements.forEach((el) => observer.unobserve(el));\n    };\n  }, []);\n};\n\n// Animation component wrapper\nexport const AnimatedSection = ({ children, animation = 'fade-in-up', className = '', delay = 0, ...props }) => {\n  const [ref, isVisible] = useScrollAnimation();\n\n  return (\n    <div\n      ref={ref}\n      className={`transition-all duration-700 ease-out ${\n        isVisible \n          ? `opacity-100 translate-y-0 scale-100` \n          : `opacity-0 ${\n              animation.includes('up') ? 'translate-y-8' : \n              animation.includes('down') ? '-translate-y-8' : \n              animation.includes('left') ? 'translate-x-8' : \n              animation.includes('right') ? '-translate-x-8' : \n              animation.includes('scale') ? 'scale-95' : 'translate-y-8'\n            }`\n      } ${className}`}\n      style={{ transitionDelay: `${delay}ms` }}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};","size_bytes":2482},"client/src/hooks/use-toast.js":{"content":"import * as React from \"react\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n}\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\nconst toastTimeouts = new Map()\n\nconst addToRemoveQueue = (toastId) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners = []\n\nlet memoryState = { toasts: [] }\n\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\nfunction toast({ ...props }) {\n  const id = genId()\n\n  const update = (props) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3042},"client/src/lib/queryClient.js":{"content":"import { QueryClient } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(method, url, data) {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\nexport const getQueryFn = ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\"), {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1158},"client/src/lib/seo.jsx":{"content":"import { Helmet } from \"react-helmet-async\";\n\nexport function SEO({\n  title = \"Powerton Engineering Pvt. Ltd. - Industrial Control Panels & Automation Solutions\",\n  description = \"Leading manufacturer of electrical control panels, industrial automation systems, and instrumentation solutions. Serving industries across India with quality engineering products and services.\",\n  keywords = \"electrical control panels, industrial automation, power control center, motor control center, instrumentation, electrical engineering, India\",\n  ogImage = \"https://powertonengineering.in/og-image.jpg\",\n  canonicalUrl,\n  structuredData\n}) {\n  const defaultStructuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"Powerton Engineering Pvt. Ltd.\",\n    \"url\": \"https://powertonengineering.in\",\n    \"description\": \"Leading manufacturer of electrical control panels and industrial automation solutions\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"2nd Floor, F-25, F Block, Sector 6\",\n      \"addressLocality\": \"Noida\",\n      \"addressRegion\": \"Uttar Pradesh\",\n      \"postalCode\": \"201301\",\n      \"addressCountry\": \"IN\"\n    },\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": \"+91-94627-71662\",\n      \"contactType\": \"customer service\"\n    },\n    \"sameAs\": [\n      \"https://www.linkedin.com/company/powerton-engineering\",\n      \"https://twitter.com/powertoneng\",\n      \"https://www.facebook.com/powertonengineering\"\n    ]\n  };\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\" />\n      <meta name=\"author\" content=\"Powerton Engineering Pvt. Ltd.\" />\n      <meta name=\"theme-color\" content=\"#1e3a8a\" />\n      <meta name=\"msapplication-TileColor\" content=\"#1e3a8a\" />\n      \n      {/* Enhanced SEO */}\n      <meta name=\"geo.region\" content=\"IN-UP\" />\n      <meta name=\"geo.placename\" content=\"Noida\" />\n      <meta name=\"geo.position\" content=\"28.5355;77.3910\" />\n      <meta name=\"ICBM\" content=\"28.5355, 77.3910\" />\n      \n      {/* Language and Content */}\n      <meta httpEquiv=\"content-language\" content=\"en-IN\" />\n      <meta name=\"language\" content=\"English\" />\n      <meta name=\"coverage\" content=\"Worldwide\" />\n      <meta name=\"distribution\" content=\"Global\" />\n      <meta name=\"rating\" content=\"General\" />\n      \n      {/* Open Graph Enhanced */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:url\" content={canonicalUrl || \"https://powertonengineering.in\"} />\n      <meta property=\"og:site_name\" content=\"Powerton Engineering\" />\n      <meta property=\"og:locale\" content=\"en_IN\" />\n      \n      {/* Twitter Card Enhanced */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      <meta name=\"twitter:site\" content=\"@powertoneng\" />\n      <meta name=\"twitter:creator\" content=\"@powertoneng\" />\n      \n      {/* Additional Business Info */}\n      <meta name=\"business:contact_data:street_address\" content=\"2nd Floor, F-25, F Block, Sector 6\" />\n      <meta name=\"business:contact_data:locality\" content=\"Noida\" />\n      <meta name=\"business:contact_data:region\" content=\"Uttar Pradesh\" />\n      <meta name=\"business:contact_data:postal_code\" content=\"201301\" />\n      <meta name=\"business:contact_data:country_name\" content=\"India\" />\n      <meta name=\"business:contact_data:phone_number\" content=\"+91-94627-71662\" />\n      <meta name=\"business:contact_data:email\" content=\"info@powertonengineering.in\" />\n      \n      {/* Canonical URL */}\n      {canonicalUrl && <link rel=\"canonical\" href={canonicalUrl} />}\n      \n      {/* Structured Data */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(structuredData || defaultStructuredData)}\n      </script>\n    </Helmet>\n  );\n}\n","size_bytes":4428},"client/src/lib/utils.js":{"content":"import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":135},"client/src/pages/about.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { CheckCircle, Users, Award, Globe, Target, Eye, Heart } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function About() {\n  const values = [\n    {\n      icon: Target,\n      title: \"Quality Excellence\",\n      description: \"We are committed to delivering the highest quality products and services that exceed industry standards.\"\n    },\n    {\n      icon: Users,\n      title: \"Customer Focus\",\n      description: \"Our clients are at the heart of everything we do. We work closely to understand and exceed their expectations.\"\n    },\n    {\n      icon: Award,\n      title: \"Technical Innovation\",\n      description: \"We continuously invest in latest technologies and innovative solutions to stay ahead of industry trends.\"\n    },\n    {\n      icon: Globe,\n      title: \"Reliability\",\n      description: \"Our proven track record of on-time delivery and dependable service makes us a trusted partner.\"\n    }\n  ];\n\n  const certifications = [\n    \"ISO 9001:2015 Quality Management\",\n    \"ISO 14001:2015 Environmental Management\",\n    \"OHSAS 18001 Occupational Health & Safety\",\n    \"CE Marking Compliance\",\n    \"UL Listed Products\",\n    \"CPRI Approved Equipment\"\n  ];\n\n  const teamStats = [\n    { number: \"50+\", label: \"Expert Engineers\" },\n    { number: \"25+\", label: \"Technical Staff\" },\n    { number: \"15+\", label: \"Years Average Experience\" },\n    { number: \"24/7\", label: \"Support Coverage\" }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"About Powerton Engineering - 15+ Years of Industrial Automation Excellence\"\n        description=\"Learn about Powerton Engineering's journey in industrial automation, electrical engineering, and instrumentation solutions. Expert team serving industries across India since 2008.\"\n        keywords=\"about powerton engineering, industrial automation company, electrical engineering company, instrumentation services, automation experts India\"\n        canonicalUrl=\"https://powertonengineering.in/about\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              About <span className=\"text-secondary\">Powerton Engineering</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              Your trusted partner in delivering high-quality engineering solutions and services for over 15 years.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Company Story */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1565087826739-dac3fb4d34b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                alt=\"Powerton Engineering industrial automation facility with modern control systems\" \n                className=\"rounded-xl shadow-2xl w-full\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1581091226825-a6a2a5aee158?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n                alt=\"Indian engineering team at Powerton working on advanced industrial automation systems\"\n                className=\"rounded-xl shadow-2xl w-full\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                Our Journey & Vision\n              </h2>\n              <p className=\"text-lg text-gray-600 mb-6 leading-relaxed\">\n                Founded with a vision to empower industries through innovation and excellence, Powerton Engineering has grown to become a leading provider of electrical and instrumentation solutions across India.\n              </p>\n              <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                From our headquarters in Noida, we serve clients nationwide with comprehensive engineering solutions including process automation, instrumentation, solar installations, and maintenance services.\n              </p>\n\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\n                {teamStats.map((stat) => (\n                  <div key={stat.label} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-secondary mb-2\">{stat.number}</div>\n                    <div className=\"text-sm text-gray-600\">{stat.label}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mr-4\">\n                    <Target className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-primary\">Our Mission</h3>\n                </div>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  To empower industries with innovative engineering solutions that enhance productivity, efficiency, and sustainability. We strive to be the preferred partner for businesses seeking reliable automation and electrical systems.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-12 h-12 bg-secondary rounded-lg flex items-center justify-center mr-4\">\n                    <Eye className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-primary\">Our Vision</h3>\n                </div>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  To be India's leading engineering solutions provider, recognized for technical excellence, innovation, and customer satisfaction. We envision a future where our solutions drive industrial transformation.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Values */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">Our Core Values</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              These values guide our decisions, shape our culture, and drive our commitment to excellence.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {values.map((value) => {\n              const Icon = value.icon;\n              return (\n                <Card key={value.title} className=\"text-center border-none shadow-lg hover:shadow-xl transition-shadow\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                      <Icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{value.title}</h3>\n                    <p className=\"text-gray-600\">{value.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Certifications & Standards */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Certifications & Quality Standards\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our commitment to quality is validated by industry-recognized certifications and compliance standards.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {certifications.map((cert) => (\n              <div key={cert} className=\"flex items-center p-4 bg-white rounded-lg shadow\">\n                <CheckCircle className=\"w-6 h-6 text-green-600 mr-4 flex-shrink-0\" />\n                <span className=\"font-medium text-gray-900\">{cert}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Partner with Powerton Engineering\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Ready to transform your industrial operations with our expert engineering solutions? \n            Let's discuss your project requirements and deliver excellence together.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Start Your Project\n              </Button>\n            </Link>\n            <Link href=\"/services\">\n              <Button \n                variant=\"outline\" \n                className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n              >\n                Explore Our Services\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":10688},"client/src/pages/contact.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport ContactForm from \"@/components/forms/contact-form\";\nimport QuoteForm from \"@/components/forms/quote-form\";\nimport { \n  Phone, \n  Mail, \n  MapPin, \n  Clock, \n  MessageCircle,\n  User,\n  Building,\n  Headphones,\n  Globe,\n  CheckCircle\n} from \"lucide-react\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function Contact() {\n  const contactMethods = [\n    {\n      icon: Phone,\n      title: \"Phone Support\",\n      subtitle: \"24/7 Emergency Support\",\n      content: COMPANY_INFO.phone,\n      action: `tel:${COMPANY_INFO.phone}`,\n      description: \"Call us for immediate assistance or emergency support\"\n    },\n    {\n      icon: Mail,\n      title: \"Email Support\",\n      subtitle: \"Response within 24 hours\",\n      content: COMPANY_INFO.email,\n      action: `mailto:${COMPANY_INFO.email}`,\n      description: \"Send detailed inquiries and technical questions\"\n    },\n    {\n      icon: MessageCircle,\n      title: \"WhatsApp\",\n      subtitle: \"Quick chat support\",\n      content: \"+91-94627-71662\",\n      action: \"https://wa.me/919462771662\",\n      description: \"Connect via WhatsApp for instant messaging\"\n    },\n    {\n      icon: MapPin,\n      title: \"Visit Our Office\",\n      subtitle: \"By appointment only\",\n      content: `${COMPANY_INFO.address.city}, ${COMPANY_INFO.address.state}`,\n      action: \"https://maps.app.goo.gl/Nx4A15nXJcvVAG668\",\n      description: \"Schedule a visit to our headquarters in Noida\"\n    }\n  ];\n\n  const officeLocations = [\n    {\n      name: \"Corporate Headquarters\",\n      address: COMPANY_INFO.address.street,\n      city: `${COMPANY_INFO.address.city}, ${COMPANY_INFO.address.state} ${COMPANY_INFO.address.pincode}`,\n      landmark: COMPANY_INFO.address.landmark,\n      phone: COMPANY_INFO.phone,\n      email: COMPANY_INFO.email,\n      hours: \"Mon-Sat: 9:00 AM - 6:00 PM\"\n    }\n  ];\n\n  const supportServices = [\n    {\n      icon: Headphones,\n      title: \"Technical Support\",\n      description: \"Expert technical assistance for all our products and services\"\n    },\n    {\n      icon: User,\n      title: \"Customer Success\",\n      description: \"Dedicated support to ensure your project success\"\n    },\n    {\n      icon: Building,\n      title: \"On-Site Support\",\n      description: \"Field engineering support at your location\"\n    },\n    {\n      icon: Globe,\n      title: \"Remote Support\",\n      description: \"Virtual assistance and remote system diagnostics\"\n    }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"Contact Powerton Engineering - Get Expert Engineering Support\"\n        description=\"Contact Powerton Engineering for industrial automation, electrical engineering, and instrumentation services. 24/7 support available. Located in Noida, serving all India.\"\n        keywords=\"contact powerton engineering, industrial automation support, electrical engineering contact, instrumentation services, Noida engineering company, technical support India\"\n        canonicalUrl=\"https://powertonengineering.in/contact\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              Get in <span className=\"text-secondary\">Touch</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              Ready to start your next project? Our expert team is here to help you with customized engineering solutions and professional consultation.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-8 text-lg\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>Free Consultation</span>\n              </div>\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>24/7 Emergency Support</span>\n              </div>\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-6 h-6 text-secondary mr-3\" />\n                <span>Pan-India Service</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Methods */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Multiple Ways to Reach Us\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Choose the communication method that works best for you. We're available 24/7 for emergency support.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {contactMethods.map((method) => {\n              const Icon = method.icon;\n              return (\n                <Card key={method.title} className=\"text-center border-none shadow-lg hover:shadow-xl transition-shadow group\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform\">\n                      <Icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-2\">{method.title}</h3>\n                    <p className=\"text-sm text-secondary font-medium mb-3\">{method.subtitle}</p>\n                    <a \n                      href={method.action}\n                      className=\"text-lg font-semibold text-primary hover:text-secondary transition-colors block mb-3\"\n                    >\n                      {method.content}\n                    </a>\n                    <p className=\"text-sm text-gray-600\">{method.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Forms */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Send Us a Message\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Whether you need general information or a detailed project quote, we have the right form for your needs.\n            </p>\n          </div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <Tabs defaultValue=\"contact\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2 mb-8\">\n                <TabsTrigger value=\"contact\" className=\"text-lg py-3\">\n                  General Inquiry\n                </TabsTrigger>\n                <TabsTrigger value=\"quote\" className=\"text-lg py-3\">\n                  Request Quote\n                </TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"contact\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-center\">General Contact Form</CardTitle>\n                    <p className=\"text-gray-600 text-center\">\n                      For general inquiries, service information, or technical questions\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    <ContactForm />\n                  </CardContent>\n                </Card>\n              </TabsContent>\n              \n              <TabsContent value=\"quote\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-center\">Request Project Quote</CardTitle>\n                    <p className=\"text-gray-600 text-center\">\n                      Get a detailed quote for your specific project requirements\n                    </p>\n                  </CardHeader>\n                  <CardContent>\n                    <QuoteForm />\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </section>\n\n      {/* Office Information */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-8\">\n                Visit Our Office\n              </h2>\n              \n              {officeLocations.map((location) => (\n                <Card key={location.name} className=\"mb-6 border-none shadow-lg\">\n                  <CardContent className=\"p-8\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{location.name}</h3>\n                    \n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-start\">\n                        <MapPin className=\"w-5 h-5 text-primary mr-3 mt-1 flex-shrink-0\" />\n                        <div>\n                          <p className=\"text-gray-600\">{location.address}</p>\n                          <p className=\"text-gray-600\">{location.city}</p>\n                          <p className=\"text-sm text-gray-500\">{location.landmark}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Phone className=\"w-5 h-5 text-primary mr-3\" />\n                        <a href={`tel:${location.phone}`} className=\"text-gray-600 hover:text-primary\">\n                          {location.phone}\n                        </a>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Mail className=\"w-5 h-5 text-primary mr-3\" />\n                        <a href={`mailto:${location.email}`} className=\"text-gray-600 hover:text-primary\">\n                          {location.email}\n                        </a>\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <Clock className=\"w-5 h-5 text-primary mr-3\" />\n                        <span className=\"text-gray-600\">{location.hours}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                      <a \n                        href=\"https://maps.app.goo.gl/Nx4A15nXJcvVAG668\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"inline-flex items-center text-secondary hover:text-secondary/80 font-medium\"\n                      >\n                        <MapPin className=\"w-4 h-4 mr-2\" />\n                        Get Directions\n                      </a>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-8\">\n                Support Services\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {supportServices.map((service) => {\n                  const Icon = service.icon;\n                  return (\n                    <Card key={service.title} className=\"border-none shadow-lg\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center mb-4\">\n                          <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mr-4\">\n                            <Icon className=\"w-6 h-6 text-white\" />\n                          </div>\n                          <h3 className=\"text-lg font-bold text-gray-900\">{service.title}</h3>\n                        </div>\n                        <p className=\"text-gray-600\">{service.description}</p>\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n\n              <Card className=\"mt-8 bg-gradient-to-br from-primary to-blue-800 text-white border-none\">\n                <CardContent className=\"p-8 text-center\">\n                  <h3 className=\"text-xl font-bold mb-4\">Emergency Support</h3>\n                  <p className=\"mb-6 opacity-90\">\n                    Critical system failure? Our emergency response team is available 24/7 to help minimize downtime.\n                  </p>\n                  <a \n                    href={`tel:${COMPANY_INFO.phone}`}\n                    className=\"inline-flex items-center bg-secondary hover:bg-secondary/90 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    <Phone className=\"w-5 h-5 mr-2\" />\n                    Emergency Hotline\n                  </a>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Business Hours */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Business Hours & Availability\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Clock className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Regular Hours</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>Monday - Saturday</p>\n                  <p className=\"font-semibold\">9:00 AM - 6:00 PM</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Phone className=\"w-12 h-12 text-secondary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Emergency Support</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>24/7 Availability</p>\n                  <p className=\"font-semibold\">All Days</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <Mail className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Email Response</h3>\n                <div className=\"space-y-2 text-gray-600\">\n                  <p>Within 24 Hours</p>\n                  <p className=\"font-semibold\">Guaranteed</p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":15482},"client/src/pages/home.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { AnimatedSection, useScrollAnimations } from \"@/hooks/use-scroll-animation\";\nimport { useEffect } from \"react\";\nimport HeroSection from \"@/components/sections/hero-section\";\nimport AboutSection from \"@/components/sections/about-section\";\nimport ServicesSection from \"@/components/sections/services-section\";\nimport ProductsSection from \"@/components/sections/products-section\";\nimport ClientsSection from \"@/components/sections/clients-section\";\nimport ProjectsSection from \"@/components/sections/projects-section\";\nimport ContactSection from \"@/components/sections/contact-section\";\n\nexport default function Home() {\n  useScrollAnimations();\n  \n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"Powerton Engineering Pvt. Ltd.\",\n    \"url\": \"https://powertonengineering.in\",\n    \"description\": \"Leading manufacturer of electrical control panels and industrial automation solutions\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"streetAddress\": \"2nd Floor, F-25, F Block, Sector 6\",\n      \"addressLocality\": \"Noida\",\n      \"addressRegion\": \"Uttar Pradesh\",\n      \"postalCode\": \"201301\",\n      \"addressCountry\": \"IN\"\n    },\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": \"+91-94627-71662\",\n      \"contactType\": \"customer service\"\n    },\n    \"hasOfferCatalog\": {\n      \"@type\": \"OfferCatalog\",\n      \"name\": \"Engineering Services\",\n      \"itemListElement\": [\n        {\n          \"@type\": \"Offer\",\n          \"itemOffered\": {\n            \"@type\": \"Service\",\n            \"name\": \"Process Automation\",\n            \"description\": \"Advanced automation systems for industrial processes\"\n          }\n        },\n        {\n          \"@type\": \"Offer\",\n          \"itemOffered\": {\n            \"@type\": \"Service\",\n            \"name\": \"Instrumentation Solutions\",\n            \"description\": \"Precision instrumentation for monitoring and control\"\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"Powerton Engineering - Industrial Automation & Control Panels | India\"\n        description=\"Leading manufacturer of electrical control panels, industrial automation systems, and instrumentation solutions. Expert engineering services across India with 15+ years experience.\"\n        keywords=\"electrical control panels, industrial automation, process automation, instrumentation, power control center, motor control center, electrical engineering, India, Noida\"\n        structuredData={structuredData}\n      />\n      \n      <HeroSection />\n      <AnimatedSection animation=\"fade-in-up\" delay={100}>\n        <AboutSection />\n      </AnimatedSection>\n      <AnimatedSection animation=\"fade-in-left\" delay={200}>\n        <ServicesSection />\n      </AnimatedSection>\n      <AnimatedSection animation=\"fade-in-right\" delay={100}>\n        <ProductsSection />\n      </AnimatedSection>\n      <AnimatedSection animation=\"zoom-in\" delay={150}>\n        <ClientsSection />\n      </AnimatedSection>\n      <AnimatedSection animation=\"fade-in-up\" delay={200}>\n        <ProjectsSection />\n      </AnimatedSection>\n      <AnimatedSection animation=\"slide-in-up\" delay={100}>\n        <ContactSection />\n      </AnimatedSection>\n    </>\n  );\n}\n","size_bytes":3271},"client/src/pages/not-found.jsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/products.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { PRODUCTS } from \"@/data/constants\";\nimport { \n  Search,\n  Filter,\n  Download,\n  ArrowRight,\n  Star,\n  CheckCircle,\n  Zap,\n  Shield,\n  Settings\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useState } from \"react\";\n\nexport default function Products() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const productCategories = [\n    { id: \"all\", name: \"All Products\", count: PRODUCTS.length },\n    { id: \"instrumentation\", name: \"Instrumentation\", count: 1 },\n    { id: \"electrical\", name: \"Electrical Components\", count: 1 },\n    { id: \"measurement\", name: \"Measurement Instruments\", count: 1 },\n    { id: \"solar\", name: \"Solar Products\", count: 1 },\n    { id: \"automation\", name: \"Automation & Control\", count: 1 },\n    { id: \"safety\", name: \"Safety & Protection\", count: 1 },\n    { id: \"pumps\", name: \"Mechanical Pumps\", count: 1 },\n    { id: \"tools\", name: \"Industrial Tools\", count: 1 }\n  ];\n\n  const productDetails = {\n    \"instrumentation\": {\n      fullDescription: \"Comprehensive range of precision instrumentation components for industrial monitoring and control applications.\",\n      specifications: [\n        \"High accuracy: ±0.1% to ±0.5%\",\n        \"Operating temperature: -40°C to +85°C\",\n        \"IP65/IP67 protection rating\",\n        \"4-20mA, 0-10V, HART, Profibus outputs\",\n        \"Explosion-proof variants available\"\n      ],\n      applications: [\"Process Control\", \"Quality Monitoring\", \"Safety Systems\", \"Environmental Monitoring\"],\n      features: [\"Smart Diagnostics\", \"Digital Communication\", \"Easy Calibration\", \"Long-term Stability\"]\n    },\n    \"electrical\": {\n      fullDescription: \"Complete range of electrical components including switches, relays, contactors, and power distribution equipment for industrial applications.\",\n      specifications: [\n        \"Voltage range: 24V DC to 690V AC\",\n        \"Current ratings: 1A to 1000A\",\n        \"IP54 to IP67 protection\",\n        \"IEC/IS standards compliant\",\n        \"Temperature rated: -25°C to +70°C\"\n      ],\n      applications: [\"Motor Control\", \"Power Distribution\", \"Switching Applications\", \"Protection Systems\"],\n      features: [\"High Reliability\", \"Modular Design\", \"Easy Installation\", \"Maintenance-Free\"]\n    },\n    \"measurement\": {\n      fullDescription: \"Advanced digital meters, analyzers, and calibration equipment for precise measurement and monitoring of electrical and process parameters.\",\n      specifications: [\n        \"Accuracy class: 0.1 to 1.0\",\n        \"Display: Digital LCD/LED\",\n        \"Communication: RS485, Ethernet, Wireless\",\n        \"Data logging capability\",\n        \"Multiple parameter measurement\"\n      ],\n      applications: [\"Power Quality Analysis\", \"Energy Management\", \"Process Monitoring\", \"Compliance Measurement\"],\n      features: [\"Real-time Monitoring\", \"Data Analytics\", \"Alarm Management\", \"Remote Access\"]\n    },\n    \"solar\": {\n      fullDescription: \"Complete solar energy solutions including panels, inverters, monitoring systems, and grid-tie equipment for sustainable energy generation.\",\n      specifications: [\n        \"Panel efficiency: 19-22%\",\n        \"Power range: 300W to 500W per panel\",\n        \"Inverter efficiency: >98%\",\n        \"25-year warranty on panels\",\n        \"Grid-tie and off-grid solutions\"\n      ],\n      applications: [\"Rooftop Solar\", \"Ground Mount Systems\", \"Solar Farms\", \"Hybrid Systems\"],\n      features: [\"High Efficiency\", \"Weather Resistant\", \"Smart Monitoring\", \"Grid Synchronization\"]\n    },\n    \"automation\": {\n      fullDescription: \"Advanced automation and control systems including PLCs, HMIs, SCADA solutions, and industrial communication devices.\",\n      specifications: [\n        \"I/O capacity: 16 to 2048 points\",\n        \"Communication: Ethernet, Profibus, Modbus\",\n        \"Programming: IEC 61131-3 compliant\",\n        \"Operating temperature: 0°C to +60°C\",\n        \"Redundancy options available\"\n      ],\n      applications: [\"Manufacturing Automation\", \"Process Control\", \"Building Management\", \"Machine Control\"],\n      features: [\"Flexible Programming\", \"Scalable Architecture\", \"Diagnostic Tools\", \"Remote Monitoring\"]\n    },\n    \"safety\": {\n      fullDescription: \"Comprehensive safety and protection equipment including circuit breakers, safety relays, emergency stop systems, and protective devices.\",\n      specifications: [\n        \"Breaking capacity: 6kA to 100kA\",\n        \"Safety integrity level: SIL 2/3\",\n        \"Response time: <10ms\",\n        \"Multiple protection functions\",\n        \"Arc fault protection available\"\n      ],\n      applications: [\"Personnel Safety\", \"Equipment Protection\", \"Fire Safety\", \"Emergency Systems\"],\n      features: [\"Fail-Safe Operation\", \"Self-Monitoring\", \"Quick Response\", \"Easy Testing\"]\n    },\n    \"pumps\": {\n      fullDescription: \"High-quality mechanical pumps, spare parts, and maintenance kits for various industrial and commercial applications.\",\n      specifications: [\n        \"Flow rate: 10 LPM to 5000 LPM\",\n        \"Head: 10m to 500m\",\n        \"Material: Cast iron, SS316, Bronze\",\n        \"Temperature: -20°C to +180°C\",\n        \"Efficiency: up to 85%\"\n      ],\n      applications: [\"Water Supply\", \"Chemical Processing\", \"HVAC Systems\", \"Industrial Processes\"],\n      features: [\"Energy Efficient\", \"Corrosion Resistant\", \"Low Maintenance\", \"Reliable Operation\"]\n    },\n    \"tools\": {\n      fullDescription: \"Professional grade industrial tools, tackles, and maintenance equipment for various engineering and maintenance applications.\",\n      specifications: [\n        \"Material: High-grade steel/alloy\",\n        \"Precision: ±0.1mm accuracy\",\n        \"Operating range: Various sizes\",\n        \"Ergonomic design\",\n        \"Certified to international standards\"\n      ],\n      applications: [\"Maintenance Work\", \"Installation\", \"Calibration\", \"Testing & Commissioning\"],\n      features: [\"Durable Construction\", \"Ergonomic Design\", \"Precision Engineering\", \"Multi-Purpose Use\"]\n    }\n  };\n\n  const filteredProducts = selectedCategory === \"all\" \n    ? PRODUCTS \n    : PRODUCTS.filter(product => product.id === selectedCategory);\n\n  return (\n    <>\n      <SEO\n        title=\"Industrial Products Catalog - Automation & Electrical Equipment | Powerton Engineering\"\n        description=\"Comprehensive catalog of industrial automation products, electrical components, instrumentation, solar systems, pumps, and tools. Quality equipment for industrial applications.\"\n        keywords=\"industrial products, automation equipment, electrical components, instrumentation products, solar panels, industrial pumps, measurement instruments, safety equipment\"\n        canonicalUrl=\"https://powertonengineering.in/products\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"relative section-padding bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-cover bg-center opacity-20\" style={{backgroundImage: \"url('https://images.unsplash.com/photo-1548094878-84ced0f6896d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"}}></div>\n        <div className=\"relative max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6\">\n              Industrial <span className=\"text-secondary\">Product Catalog</span>\n            </h1>\n            <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90\">\n              Comprehensive range of electrical and automation products designed for reliability, efficiency, and superior performance in industrial environments.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center gap-3 sm:gap-4\">\n              <Button className=\"btn-secondary mobile-full btn-responsive\">\n                <Download className=\"mr-2 w-4 h-4 sm:w-5 sm:h-5\" />\n                Download Catalog\n              </Button>\n              <Link href=\"/contact\" className=\"mobile-full\">\n                <Button \n                  variant=\"outline\" \n                  className=\"btn-outline mobile-full btn-responsive border-white text-white hover:bg-white hover:text-primary\"\n                >\n                  Request Quote\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Product Categories */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-12 sm:mb-16\">\n            <h2 className=\"text-responsive-xl font-bold text-primary mb-4 sm:mb-6\">\n              Product Categories\n            </h2>\n            <p className=\"text-responsive-sm text-gray-600 max-w-3xl mx-auto\">\n              Explore our comprehensive range of industrial products organized by category for easy navigation.\n            </p>\n          </div>\n\n          {/* Category Tabs */}\n          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-1 sm:gap-2 bg-gray-100 p-1 sm:p-2 rounded-lg mb-6 sm:mb-8\">\n              {productCategories.slice(0, 5).map((category) => (\n                <TabsTrigger\n                  key={category.id}\n                  value={category.id}\n                  className=\"data-[state=active]:bg-primary data-[state=active]:text-white text-xs sm:text-sm px-2 py-1 sm:px-3 sm:py-2\"\n                >\n                  <span className=\"hidden sm:inline\">{category.name}</span>\n                  <span className=\"sm:hidden\">{category.name.split(' ')[0]}</span>\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 sm:gap-4 mb-6 sm:mb-8\">\n              {productCategories.slice(5).map((category) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category.id)}\n                  className=\"h-10 sm:h-12 text-xs sm:text-sm px-2 sm:px-4\"\n                >\n                  <span className=\"hidden sm:inline\">{category.name}</span>\n                  <span className=\"sm:hidden\">{category.name.split(' ')[0]}</span>\n                </Button>\n              ))}\n            </div>\n\n            {/* Product Grid */}\n            <TabsContent value={selectedCategory} className=\"space-y-6 sm:space-y-8\">\n              <div className=\"grid-responsive-cards\">\n                {filteredProducts.map((product) => {\n                  const details = productDetails[product.id];\n                  \n                  return (\n                    <Card \n                      key={product.id} \n                      className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n                    >\n                      <div className=\"relative overflow-hidden\">\n                        <img \n                          src={product.image} \n                          alt={`${product.title} - ${product.description}`} \n                          className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n                          loading=\"lazy\"\n                        />\n                        <div className=\"absolute top-4 right-4\">\n                          <Badge className=\"bg-secondary text-white\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Premium\n                          </Badge>\n                        </div>\n                      </div>\n                      \n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{product.title}</h3>\n                        <p className=\"text-gray-600 text-sm mb-4\">{product.description}</p>\n                        \n                        {details && (\n                          <div className=\"space-y-4\">\n                            <div>\n                              <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Key Features:</h4>\n                              <div className=\"space-y-1\">\n                                {details.features.slice(0, 2).map((feature) => (\n                                  <div key={feature} className=\"flex items-center text-xs text-gray-600\">\n                                    <CheckCircle className=\"w-3 h-3 text-green-600 mr-2 flex-shrink-0\" />\n                                    {feature}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                              <div className=\"flex space-x-2\">\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  <Zap className=\"w-3 h-3 mr-1\" />\n                                  High Efficiency\n                                </Badge>\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  <Shield className=\"w-3 h-3 mr-1\" />\n                                  Certified\n                                </Badge>\n                              </div>\n                              <Button \n                                size=\"sm\" \n                                variant=\"ghost\" \n                                className=\"text-secondary hover:text-secondary/80 p-0\"\n                              >\n                                Details <ArrowRight className=\"ml-1 w-3 h-3\" />\n                              </Button>\n                            </div>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Detailed Product Information */}\n      {selectedCategory !== \"all\" && (\n        <section className=\"section-padding bg-gray-50\">\n          <div className=\"max-w-7xl mx-auto container-padding\">\n            {filteredProducts.map((product) => {\n              const details = productDetails[product.id];\n              if (!details) return null;\n\n              return (\n                <div key={product.id} className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                  <div>\n                    <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                      {product.title}\n                    </h2>\n                    <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                      {details.fullDescription}\n                    </p>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                      <div>\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Applications</h3>\n                        <div className=\"space-y-2\">\n                          {details.applications.map((app) => (\n                            <div key={app} className=\"flex items-center\">\n                              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n                              <span className=\"text-gray-600\">{app}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n\n                      <div>\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Key Features</h3>\n                        <div className=\"space-y-2\">\n                          {details.features.map((feature) => (\n                            <div key={feature} className=\"flex items-center\">\n                              <Settings className=\"w-4 h-4 text-primary mr-3 flex-shrink-0\" />\n                              <span className=\"text-gray-600\">{feature}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <Card className=\"border-none shadow-lg\">\n                      <CardHeader>\n                        <CardTitle className=\"text-xl font-bold text-gray-900\">\n                          Technical Specifications\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          {details.specifications.map((spec, index) => (\n                            <div key={index} className=\"flex items-start\">\n                              <div className=\"w-2 h-2 bg-secondary rounded-full mr-3 mt-2 flex-shrink-0\"></div>\n                              <span className=\"text-gray-600\">{spec}</span>\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                          <div className=\"flex flex-col space-y-3\">\n                            <Button className=\"btn-primary w-full\">\n                              Request Technical Datasheet\n                            </Button>\n                            <Link href=\"/contact\">\n                              <Button variant=\"outline\" className=\"w-full\">\n                                Get Product Quote\n                              </Button>\n                            </Link>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </section>\n      )}\n\n      {/* Why Choose Our Products */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Why Choose Powerton Products?\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Shield className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Quality Assurance</h3>\n                <p className=\"text-gray-600\">\n                  All products undergo rigorous testing and quality control processes to ensure reliability and performance.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Settings className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Technical Support</h3>\n                <p className=\"text-gray-600\">\n                  Comprehensive technical support and documentation to help you select and implement the right solutions.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center border-none shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-6\">\n                  <Zap className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Innovation</h3>\n                <p className=\"text-gray-600\">\n                  Latest technology and innovative solutions to meet evolving industrial requirements and challenges.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Need Custom Product Solutions?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Can't find exactly what you're looking for? Our engineering team can customize products to meet your specific requirements.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Request Custom Solution\n              </Button>\n            </Link>\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n            >\n              <Download className=\"mr-2 w-5 h-5\" />\n              Download Complete Catalog\n            </Button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":21915},"client/src/pages/projects.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { PROJECTS } from \"@/data/constants\";\nimport { \n  MapPin, \n  Calendar, \n  ArrowRight, \n  Download,\n  Users,\n  Award,\n  Target,\n  TrendingUp,\n  CheckCircle,\n  Clock\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useState } from \"react\";\n\nexport default function Projects() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const projectCategories = [\n    { id: \"all\", name: \"All Projects\", count: PROJECTS.length },\n    { id: \"Power Plant\", name: \"Power Generation\", count: 1 },\n    { id: \"Manufacturing\", name: \"Manufacturing\", count: 1 },\n    { id: \"Solar\", name: \"Solar Energy\", count: 1 },\n    { id: \"Water Treatment\", name: \"Water Treatment\", count: 1 }\n  ];\n\n  const categoryColors = {\n    \"Power Plant\": \"bg-red-100 text-red-800\",\n    \"Manufacturing\": \"bg-blue-100 text-blue-800\",\n    \"Solar\": \"bg-green-100 text-green-800\",\n    \"Water Treatment\": \"bg-cyan-100 text-cyan-800\"\n  };\n\n  const filteredProjects = selectedCategory === \"all\" \n    ? PROJECTS \n    : PROJECTS.filter(project => project.category === selectedCategory);\n\n  const stats = [\n    { number: \"1200+\", label: \"Projects Completed\", icon: Award },\n    { number: \"450+\", label: \"Happy Clients\", icon: Users },\n    { number: \"15+\", label: \"Years Experience\", icon: Calendar },\n    { number: \"98%\", label: \"Success Rate\", icon: Target }\n  ];\n\n  return (\n    <>\n      <SEO\n        title=\"Engineering Projects Portfolio - Industrial Automation Cases | Powerton Engineering\"\n        description=\"Explore our portfolio of successfully completed engineering projects including power plants, manufacturing automation, solar installations, and water treatment systems across India.\"\n        keywords=\"engineering projects, automation projects, power plant automation, manufacturing automation, solar projects, water treatment automation, industrial projects India\"\n        canonicalUrl=\"https://powertonengineering.in/projects\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"section-padding bg-gradient-to-br from-primary to-blue-800 text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6\">\n              Our <span className=\"text-secondary\">Project Portfolio</span>\n            </h1>\n            <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90\">\n              Explore our portfolio of successfully completed engineering projects showcasing our expertise in industrial automation and electrical engineering.\n            </p>\n            <div className=\"flex flex-col sm:flex-row justify-center gap-3 sm:gap-4\">\n              <Button className=\"btn-secondary mobile-full btn-responsive\">\n                <Download className=\"mr-2 w-4 h-4 sm:w-5 sm:h-5\" />\n                Download Portfolio\n              </Button>\n              <Link href=\"/contact\" className=\"mobile-full\">\n                <Button \n                  variant=\"outline\" \n                  className=\"btn-outline mobile-full btn-responsive border-white text-white hover:bg-white hover:text-primary\"\n                >\n                  Discuss Your Project\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Project Statistics */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\n            {stats.map((stat) => {\n              const Icon = stat.icon;\n              return (\n                <div key={stat.label} className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <Icon className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">{stat.number}</div>\n                  <div className=\"text-gray-600\">{stat.label}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Project Categories and Grid */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Featured Projects by Category\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              From power generation to water treatment, explore how we've delivered innovative engineering solutions across various industries.\n            </p>\n          </div>\n\n          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3 lg:grid-cols-5 gap-2 bg-white p-2 rounded-lg mb-8 shadow-sm\">\n              {projectCategories.map((category) => (\n                <TabsTrigger\n                  key={category.id}\n                  value={category.id}\n                  className=\"data-[state=active]:bg-primary data-[state=active]:text-white\"\n                >\n                  {category.name}\n                  <Badge variant=\"outline\" className=\"ml-2\">\n                    {category.count}\n                  </Badge>\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <TabsContent value={selectedCategory} className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                {filteredProjects.map((project) => (\n                  <Card \n                    key={project.id} \n                    className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n                  >\n                    <div className=\"relative overflow-hidden\">\n                      <img \n                        src={project.image} \n                        alt={`${project.title} - ${project.description}`}\n                        className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                        loading=\"lazy\"\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      <div className=\"absolute top-4 left-4\">\n                        <Badge \n                          className={`${\n                            categoryColors[project.category] || \n                            \"bg-gray-100 text-gray-800\"\n                          }`}\n                        >\n                          {project.category}\n                        </Badge>\n                      </div>\n                      <div className=\"absolute top-4 right-4\">\n                        <Badge className=\"bg-white text-gray-900\">\n                          {project.year}\n                        </Badge>\n                      </div>\n                    </div>\n                    \n                    <CardContent className=\"p-8\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{project.title}</h3>\n                      <p className=\"text-gray-600 mb-6 leading-relaxed\">{project.description}</p>\n                      \n                      {/* Project Details */}\n                      <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <MapPin className=\"w-4 h-4 mr-2\" />\n                          {project.location}\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <Clock className=\"w-4 h-4 mr-2\" />\n                          {project.duration}\n                        </div>\n                      </div>\n\n                      {/* Project Highlights */}\n                      <div className=\"mb-6\">\n                        <h4 className=\"text-sm font-semibold text-gray-900 mb-3\">Key Achievements:</h4>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {project.highlights.map((highlight) => (\n                            <div key={highlight} className=\"flex items-center text-xs text-gray-600\">\n                              <CheckCircle className=\"w-3 h-3 text-green-600 mr-2 flex-shrink-0\" />\n                              {highlight}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                          <TrendingUp className=\"w-4 h-4 mr-2 text-green-600\" />\n                          <span>Successfully Completed</span>\n                        </div>\n                        <Button \n                          variant=\"ghost\" \n                          className=\"text-secondary hover:text-secondary/80 font-semibold\"\n                        >\n                          View Case Study <ArrowRight className=\"ml-2 w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Detailed Case Study Section */}\n      {selectedCategory !== \"all\" && filteredProjects.length > 0 && (\n        <section className=\"section-padding bg-white\">\n          <div className=\"max-w-7xl mx-auto container-padding\">\n            {filteredProjects.map((project) => (\n              <div key={`details-${project.id}`} className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                <div>\n                  <Badge \n                    className={`mb-4 ${\n                      categoryColors[project.category] || \n                      \"bg-gray-100 text-gray-800\"\n                    }`}\n                  >\n                    {project.category} Project\n                  </Badge>\n                  <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n                    {project.title}\n                  </h2>\n                  <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                    {project.description}\n                  </p>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n                    <div>\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-3\">Project Scope</h3>\n                      <div className=\"space-y-2\">\n                        {project.highlights.map((highlight) => (\n                          <div key={highlight} className=\"flex items-start\">\n                            <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-gray-600 text-sm\">{highlight}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div>\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-3\">Project Details</h3>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center\">\n                          <MapPin className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Location: {project.location}</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <Clock className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Duration: {project.duration}</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <Calendar className=\"w-4 h-4 text-primary mr-3\" />\n                          <span className=\"text-gray-600 text-sm\">Completed: {project.year}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button className=\"btn-primary\">\n                      Discuss Similar Project\n                    </Button>\n                  </Link>\n                </div>\n\n                <div>\n                  <Card className=\"border-none shadow-lg\">\n                    <CardContent className=\"p-8\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Project Impact</h3>\n                      \n                      <div className=\"space-y-6\">\n                        <div className=\"bg-green-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-green-800 mb-2\">Energy Efficiency</h4>\n                          <p className=\"text-green-700 text-sm\">\n                            Achieved 25-30% improvement in energy efficiency through advanced automation systems.\n                          </p>\n                        </div>\n\n                        <div className=\"bg-blue-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-blue-800 mb-2\">Operational Excellence</h4>\n                          <p className=\"text-blue-700 text-sm\">\n                            Reduced manual intervention by 70% and improved process reliability significantly.\n                          </p>\n                        </div>\n\n                        <div className=\"bg-orange-50 rounded-lg p-4\">\n                          <h4 className=\"font-semibold text-orange-800 mb-2\">Safety Enhancement</h4>\n                          <p className=\"text-orange-700 text-sm\">\n                            Implemented comprehensive safety systems ensuring zero incidents post-commissioning.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                        <Button variant=\"outline\" className=\"w-full\">\n                          <Download className=\"mr-2 w-4 h-4\" />\n                          Download Case Study\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n\n      {/* Client Success Stories */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              What Our Clients Say About Our Projects\n            </h2>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">AA</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"The solar installation project was executed flawlessly. The team's professionalism and technical expertise exceeded our expectations.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Anand Awasthi</div>\n                <div className=\"text-sm text-gray-600\">West Bengal</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">SP</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"Excellent project management and on-time delivery. The automation system has significantly improved our manufacturing efficiency.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Sanjay Patil</div>\n                <div className=\"text-sm text-gray-600\">Uttar Pradesh</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border-none shadow-lg\">\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-white font-bold text-xl\">RS</span>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\n                  \"Outstanding technical support throughout the project lifecycle. The instrumentation system works perfectly as designed.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Rhea Sharma</div>\n                <div className=\"text-sm text-gray-600\">Maharashtra</div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Ready to Start Your Next Project?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Let's discuss your project requirements and create a customized solution that delivers exceptional results for your business.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Start Project Discussion\n              </Button>\n            </Link>\n            <Button \n              variant=\"outline\" \n              className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n            >\n              <Download className=\"mr-2 w-5 h-5\" />\n              Download Project Portfolio\n            </Button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":18803},"client/src/pages/services.jsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { SERVICES } from \"@/data/constants\";\nimport { \n  Cpu, \n  Gauge, \n  Wrench, \n  PlayCircle, \n  Shield, \n  Settings,\n  CheckCircle,\n  ArrowRight,\n  Clock,\n  Users,\n  Award\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst iconMap = {\n  \"microchip\": Cpu,\n  \"tachometer-alt\": Gauge,\n  \"tools\": Wrench,\n  \"play-circle\": PlayCircle,\n  \"shield-alt\": Shield,\n  \"cog\": Settings\n};\n\nexport default function Services() {\n  const serviceDetails = {\n    \"process-automation\": {\n      overview: \"Advanced automation systems designed to streamline industrial processes, reduce manual intervention, and optimize operational efficiency.\",\n      benefits: [\n        \"Reduced operational costs by up to 30%\",\n        \"Improved process consistency and quality\",\n        \"Enhanced safety through automated controls\",\n        \"Real-time monitoring and reporting\",\n        \"Scalable solutions for future expansion\"\n      ],\n      technologies: [\"PLC Programming\", \"SCADA Systems\", \"HMI Development\", \"Industrial IoT\", \"Edge Computing\"],\n      industries: [\"Manufacturing\", \"Process Industries\", \"Power Generation\", \"Water Treatment\", \"Oil & Gas\"]\n    },\n    \"instrumentation\": {\n      overview: \"Precision instrumentation solutions for accurate measurement, monitoring, and control of critical industrial parameters.\",\n      benefits: [\n        \"High-precision measurements with ±0.1% accuracy\",\n        \"Reliable performance in harsh environments\",\n        \"Integration with existing control systems\",\n        \"Comprehensive calibration services\",\n        \"24/7 monitoring capabilities\"\n      ],\n      technologies: [\"Smart Transmitters\", \"Flow Meters\", \"Temperature Sensors\", \"Pressure Instruments\", \"Analytical Equipment\"],\n      industries: [\"Chemical Processing\", \"Pharmaceuticals\", \"Food & Beverage\", \"Energy\", \"Environmental Monitoring\"]\n    },\n    \"site-installation\": {\n      overview: \"Professional on-site installation services ensuring optimal performance, safety compliance, and seamless system integration.\",\n      benefits: [\n        \"Certified installation technicians\",\n        \"Compliance with industry standards\",\n        \"Minimal disruption to operations\",\n        \"Comprehensive testing and validation\",\n        \"Complete documentation and training\"\n      ],\n      technologies: [\"Electrical Installation\", \"Mechanical Assembly\", \"System Integration\", \"Cable Management\", \"Safety Systems\"],\n      industries: [\"Industrial Plants\", \"Commercial Buildings\", \"Infrastructure\", \"Renewable Energy\", \"Data Centers\"]\n    },\n    \"commissioning\": {\n      overview: \"Comprehensive system commissioning to ensure all equipment operates at peak performance levels and meets design specifications.\",\n      benefits: [\n        \"Verified system performance\",\n        \"Optimized operational parameters\",\n        \"Complete functional testing\",\n        \"Performance documentation\",\n        \"Operator training programs\"\n      ],\n      technologies: [\"Performance Testing\", \"System Optimization\", \"Functional Verification\", \"Documentation\", \"Training Programs\"],\n      industries: [\"Power Plants\", \"Manufacturing\", \"HVAC Systems\", \"Process Industries\", \"Building Automation\"]\n    },\n    \"amc\": {\n      overview: \"Comprehensive Annual Maintenance Contracts designed to keep your systems running smoothly with minimal downtime and maximum efficiency.\",\n      benefits: [\n        \"Preventive maintenance scheduling\",\n        \"24/7 emergency support\",\n        \"Reduced unplanned downtime\",\n        \"Extended equipment lifespan\",\n        \"Cost-effective maintenance solutions\"\n      ],\n      technologies: [\"Predictive Maintenance\", \"Remote Monitoring\", \"Spare Parts Management\", \"Performance Analytics\", \"Emergency Response\"],\n      industries: [\"Manufacturing\", \"Power Generation\", \"Process Industries\", \"Commercial Buildings\", \"Infrastructure\"]\n    },\n    \"customized\": {\n      overview: \"Tailored engineering solutions designed specifically for unique industrial requirements and challenges that standard solutions cannot address.\",\n      benefits: [\n        \"Custom-designed for specific needs\",\n        \"Flexible and scalable solutions\",\n        \"Integration with existing systems\",\n        \"Innovative problem-solving approach\",\n        \"Long-term technical support\"\n      ],\n      technologies: [\"Custom Software Development\", \"Specialized Hardware\", \"Unique Control Algorithms\", \"Proprietary Protocols\", \"Advanced Analytics\"],\n      industries: [\"Specialized Manufacturing\", \"Research Facilities\", \"Unique Processes\", \"Emerging Technologies\", \"Custom Applications\"]\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"Engineering Services - Process Automation & Instrumentation | Powerton Engineering\"\n        description=\"Comprehensive engineering services including process automation, instrumentation solutions, site installation, commissioning, and maintenance contracts. Expert technical support across India.\"\n        keywords=\"process automation, instrumentation services, site installation, commissioning services, AMC maintenance contracts, electrical engineering services, industrial automation India\"\n        canonicalUrl=\"https://powertonengineering.in/services\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"relative section-padding bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-cover bg-center opacity-20\" style={{backgroundImage: \"url('https://images.unsplash.com/photo-1590736969955-71cc94901144?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"}}></div>\n        <div className=\"relative max-w-7xl mx-auto container-padding\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              Professional <span className=\"text-secondary\">Engineering Services</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl mb-8 opacity-90\">\n              From process automation to maintenance contracts, we provide comprehensive engineering solutions tailored to your industrial requirements.\n            </p>\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Request Service Quote\n                <ArrowRight className=\"ml-2 w-5 h-5\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Our Service Portfolio\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Comprehensive engineering solutions backed by 15+ years of experience and expertise in industrial automation.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {SERVICES.map((service) => {\n              const IconComponent = iconMap[service.icon] || Settings;\n              \n              return (\n                <Card \n                  key={service.id} \n                  className=\"border border-gray-100 group hover:shadow-xl transition-all duration-300 hover:-translate-y-2\"\n                >\n                  <CardHeader>\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform\">\n                      <IconComponent className=\"w-8 h-8 text-white\" aria-hidden=\"true\" />\n                    </div>\n                    <CardTitle className=\"text-xl font-bold text-gray-900\">{service.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-600 mb-6\">{service.description}</p>\n                    \n                    <div className=\"space-y-2 mb-6\">\n                      <h4 className=\"font-semibold text-gray-900 text-sm\">Key Features:</h4>\n                      {service.features.slice(0, 3).map((feature) => (\n                        <div key={feature} className=\"flex items-center text-sm text-gray-600\">\n                          <CheckCircle className=\"w-4 h-4 text-green-600 mr-2 flex-shrink-0\" />\n                          {feature}\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 p-0 font-semibold\"\n                      onClick={() => {\n                        const element = document.getElementById(`service-${service.id}`);\n                        element?.scrollIntoView({ behavior: 'smooth' });\n                      }}\n                    >\n                      Learn More <ArrowRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Detailed Service Sections */}\n      {SERVICES.map((service, index) => {\n        const IconComponent = iconMap[service.icon] || Settings;\n        const details = serviceDetails[service.id];\n        const isEven = index % 2 === 0;\n        \n        return (\n          <section \n            key={service.id}\n            id={`service-${service.id}`}\n            className={`section-padding ${isEven ? 'bg-gray-50' : 'bg-white'}`}\n          >\n            <div className=\"max-w-7xl mx-auto container-padding\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n                <div className={isEven ? '' : 'lg:order-2'}>\n                  <div className=\"flex items-center mb-6\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mr-4\">\n                      <IconComponent className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <h2 className=\"text-3xl lg:text-4xl font-bold text-primary\">{service.title}</h2>\n                  </div>\n                  \n                  <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n                    {details.overview}\n                  </p>\n\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Key Benefits</h3>\n                    <div className=\"space-y-3\">\n                      {details.benefits.map((benefit) => (\n                        <div key={benefit} className=\"flex items-start\">\n                          <CheckCircle className=\"w-5 h-5 text-green-600 mr-3 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-gray-600\">{benefit}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <Link href=\"/contact\">\n                    <Button className=\"btn-primary\">\n                      Request Quote for {service.title}\n                    </Button>\n                  </Link>\n                </div>\n\n                <div className={isEven ? '' : 'lg:order-1'}>\n                  <Card className=\"border-none shadow-lg\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"grid grid-cols-1 gap-6\">\n                        <div>\n                          <h4 className=\"font-bold text-gray-900 mb-4 flex items-center\">\n                            <Settings className=\"w-5 h-5 mr-2 text-primary\" />\n                            Technologies & Solutions\n                          </h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {details.technologies.map((tech) => (\n                              <Badge key={tech} variant=\"secondary\" className=\"bg-primary/10 text-primary\">\n                                {tech}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n\n                        <div>\n                          <h4 className=\"font-bold text-gray-900 mb-4 flex items-center\">\n                            <Users className=\"w-5 h-5 mr-2 text-primary\" />\n                            Target Industries\n                          </h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {details.industries.map((industry) => (\n                              <Badge key={industry} variant=\"outline\" className=\"border-secondary text-secondary\">\n                                {industry}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n\n                        <div className=\"bg-gray-50 rounded-lg p-4\">\n                          <div className=\"flex items-center text-sm text-gray-600\">\n                            <Clock className=\"w-4 h-4 mr-2\" />\n                            <span>24/7 Support Available</span>\n                          </div>\n                          <div className=\"flex items-center text-sm text-gray-600 mt-2\">\n                            <Award className=\"w-4 h-4 mr-2\" />\n                            <span>Industry Certified Solutions</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </section>\n        );\n      })}\n\n      {/* Call to Action */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Ready to Transform Your Operations?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-90 max-w-3xl mx-auto\">\n            Our expert team is ready to analyze your requirements and provide customized engineering solutions that drive efficiency and growth.\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4\">\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary text-lg px-8 py-4\">\n                Get Free Consultation\n              </Button>\n            </Link>\n            <Link href=\"/projects\">\n              <Button \n                variant=\"outline\" \n                className=\"btn-outline text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n              >\n                View Our Projects\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":15056},"client/src/components/chatbot/chatbot.jsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { MessageCircle, X, Send, Bot, User } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// Message shape: { id, text, sender: 'user'|'bot', timestamp }\n// ChatbotResponse shape: { message, suggestions? }\n\nexport default function Chatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Handle scroll management and click outside detection\n  useEffect(() => {\n    if (isOpen) {\n      // Disable scroll but keep scrollbar visible\n      const scrollY = window.scrollY;\n      document.body.style.overflowY = 'scroll';\n      document.body.style.position = 'fixed';\n      document.body.style.top = `-${scrollY}px`;\n      document.body.style.width = '100%';\n      \n      return () => {\n        document.body.style.overflowY = '';\n        document.body.style.position = '';\n        document.body.style.top = '';\n        document.body.style.width = '';\n        window.scrollTo(0, scrollY);\n      };\n    }\n  }, [isOpen]);\n\n  // Separate effect for click outside detection\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleClickOutside = (event) => {\n      const target = event.target;\n      \n      // Check if click is inside chatbot window\n      if (chatWindowRef.current?.contains(target)) {\n        return;\n      }\n      \n      // Check if click is on toggle button or its children (more thorough check)\n      const toggleButton = document.querySelector('[data-chatbot-toggle=\"true\"]');\n      if (toggleButton && (toggleButton === target || toggleButton.contains(target))) {\n        return;\n      }\n      \n      // Check for any parent elements that might be the toggle button\n      let currentElement = target;\n      while (currentElement && currentElement !== document.body) {\n        if (currentElement.getAttribute('data-chatbot-toggle') === 'true') {\n          return;\n        }\n        currentElement = currentElement.parentElement;\n      }\n      \n      // Click is outside - close chatbot\n      setIsOpen(false);\n    };\n\n    // Add small delay to prevent immediate triggering and ensure button click is processed first\n    const timer = setTimeout(() => {\n      document.addEventListener('mousedown', handleClickOutside);\n    }, 200);\n\n    return () => {\n      clearTimeout(timer);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      setTimeout(() => {\n        addBotMessage({\n          message: \"Hello! I'm here to help you learn about Powerton Engineering's services and navigate our website. How can I assist you today?\",\n          suggestions: [\n            \"What services do you offer?\",\n            \"Tell me about your products\",\n            \"How can I get a quote?\",\n            \"Where are you located?\"\n          ]\n        });\n      }, 500);\n    }\n  }, [isOpen, messages.length]);\n\n  const addMessage = (text, sender) => {\n    const newMessage = {\n      id: Date.now().toString(),\n      text,\n      sender,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n  };\n\n  const addBotMessage = (response) => {\n    setIsTyping(true);\n    setTimeout(() => {\n      addMessage(response.message, 'bot');\n      setIsTyping(false);\n    }, 1000);\n  };\n\n  const generateResponse = (userInput) => {\n    const input = userInput.toLowerCase();\n\n    // Services related queries\n    if (input.includes('service') || input.includes('what do you do') || input.includes('what can you do')) {\n      return {\n        message: \"Powerton Engineering offers comprehensive industrial automation solutions including:\\n\\n• Process Automation Systems\\n• Instrumentation & Control\\n• Electrical Panel Manufacturing\\n• SCADA & HMI Solutions\\n• Industrial IoT Implementation\\n• Maintenance & Support Services\\n\\nWould you like detailed information about any specific service?\",\n        suggestions: [\"Process Automation\", \"Instrumentation\", \"Electrical Panels\", \"Get a Quote\"]\n      };\n    }\n\n    // Products related queries\n    if (input.includes('product') || input.includes('equipment') || input.includes('manufacture')) {\n      return {\n        message: \"We manufacture and supply a wide range of industrial products:\\n\\n• Control Panels & Switchgear\\n• Motor Control Centers (MCC)\\n• Distribution Boards\\n• Automation Hardware\\n• Sensors & Transmitters\\n• Variable Frequency Drives (VFD)\\n\\nAll our products meet international quality standards and come with comprehensive warranties.\",\n        suggestions: [\"Control Panels\", \"Motor Control Centers\", \"View All Products\", \"Technical Specifications\"]\n      };\n    }\n\n    // Quote and pricing queries\n    if (input.includes('quote') || input.includes('price') || input.includes('cost') || input.includes('estimate')) {\n      return {\n        message: \"To provide an accurate quote, I'll need some project details. You can:\\n\\n1. Fill out our online quote request form\\n2. Call us directly at +91-94627-71662\\n3. Email us at info@powertonengineering.in\\n\\nOur team typically responds within 24 hours with detailed proposals.\",\n        suggestions: [\"Request Quote\", \"Contact Us\", \"View Projects\", \"Technical Requirements\"]\n      };\n    }\n\n    // Location and contact queries\n    if (input.includes('location') || input.includes('address') || input.includes('where') || input.includes('contact')) {\n      return {\n        message: \"Powerton Engineering is located in:\\n\\n📍 2nd Floor, F-25, F Block, Sector 6\\nNoida, Uttar Pradesh - 201301, India\\n\\n📞 Phone: +91-94627-71662\\n📧 Email: info@powertonengineering.in\\n\\nWe serve clients across India with our engineering solutions.\",\n        suggestions: [\"Get Directions\", \"Call Now\", \"Send Email\", \"Service Areas\"]\n      };\n    }\n\n    // Projects and experience queries\n    if (input.includes('project') || input.includes('experience') || input.includes('portfolio') || input.includes('case study')) {\n      return {\n        message: \"With 15+ years of experience, we've successfully completed 1200+ projects across various industries:\\n\\n• Manufacturing & Production\\n• Oil & Gas\\n• Power Generation\\n• Water Treatment\\n• Chemical Processing\\n• Food & Beverage\\n\\nOur expertise ensures reliable, efficient automation solutions tailored to your specific needs.\",\n        suggestions: [\"View Projects\", \"Industry Experience\", \"Client Testimonials\", \"Technical Capabilities\"]\n      };\n    }\n\n    // Navigation help\n    if (input.includes('navigate') || input.includes('find') || input.includes('page') || input.includes('menu')) {\n      return {\n        message: \"I can help you navigate our website:\\n\\n🏠 Home - Company overview\\n📋 About - Our story and team\\n⚙️ Services - Detailed service information\\n🔧 Products - Product catalog\\n📊 Projects - Portfolio showcase\\n📞 Contact - Get in touch\\n\\nWhat specific information are you looking for?\",\n        suggestions: [\"View Services\", \"See Products\", \"Our Projects\", \"Contact Information\"]\n      };\n    }\n\n    // Technical support queries\n    if (input.includes('support') || input.includes('maintenance') || input.includes('technical') || input.includes('help')) {\n      return {\n        message: \"We provide comprehensive technical support:\\n\\n• 24/7 Emergency Support\\n• Preventive Maintenance Programs\\n• Remote Monitoring & Diagnostics\\n• On-site Technical Assistance\\n• Spare Parts & Components\\n• Training & Documentation\\n\\nOur certified engineers ensure minimal downtime and optimal system performance.\",\n        suggestions: [\"Emergency Support\", \"Maintenance Plans\", \"Technical Training\", \"Contact Support\"]\n      };\n    }\n\n    // Default response for unrecognized queries\n    return {\n      message: \"I'd be happy to help you with information about Powerton Engineering! I can assist with:\\n\\n• Our services and capabilities\\n• Product information and specifications\\n• Project portfolio and experience\\n• Contact details and locations\\n• Quote requests and pricing\\n• Technical support options\\n\\nWhat would you like to know more about?\",\n      suggestions: [\"Our Services\", \"Products & Solutions\", \"Get Quote\", \"Contact Us\"]\n    };\n  };\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    addMessage(inputValue, 'user');\n    const response = generateResponse(inputValue);\n    addBotMessage(response);\n    setInputValue(\"\");\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    addMessage(suggestion, 'user');\n    const response = generateResponse(suggestion);\n    addBotMessage(response);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <>\n      {/* Chatbot Toggle Button */}\n      <motion.div\n        className=\"fixed bottom-2 right-6 z-50\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ delay: 2 }}\n      >\n        <Button\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setIsOpen(prev => !prev);\n          }}\n          onMouseDown={(e) => {\n            e.stopPropagation();\n          }}\n          className=\"w-14 h-14 rounded-full bg-primary hover:bg-primary/90 shadow-lg\"\n          aria-label=\"Toggle chat\"\n          data-chatbot-toggle=\"true\"\n          data-testid=\"chatbot-toggle-button\"\n        >\n          {isOpen ? (\n            <X className=\"w-6 h-6 text-white\" />\n          ) : (\n            <MessageCircle className=\"w-6 h-6 text-white\" />\n          )}\n        </Button>\n      </motion.div>\n\n      {/* Blur Overlay */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed inset-0 bg-black/20 backdrop-blur-sm z-30\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Chatbot Window */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            ref={chatWindowRef}\n            className=\"fixed bottom-24 right-6 z-40 w-80 sm:w-96 max-h-[calc(100vh-200px)]\"\n            initial={{ opacity: 0, y: 100, scale: 0.8 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 100, scale: 0.8 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Card className=\"shadow-2xl border-0\">\n              <CardHeader className=\"bg-primary text-white rounded-t-lg\">\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\n                  <Bot className=\"w-5 h-5\" />\n                  Powerton Assistant\n                  <span className=\"ml-auto text-xs bg-secondary px-2 py-1 rounded-full\">\n                    Online\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-0 flex flex-col max-h-[calc(100vh-280px)]\">\n                {/* Messages Area */}\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 min-h-[280px] max-h-[380px] scroll-smooth chatbot-messages\">\n                  {messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div\n                        className={`max-w-[80%] p-3 rounded-lg ${\n                          message.sender === 'user'\n                            ? 'bg-primary text-white'\n                            : 'bg-white text-gray-800 shadow-sm border'\n                        }`}\n                      >\n                        <div className=\"flex items-start gap-2\">\n                          {message.sender === 'bot' && (\n                            <Bot className=\"w-4 h-4 mt-1 text-primary flex-shrink-0\" />\n                          )}\n                          {message.sender === 'user' && (\n                            <User className=\"w-4 h-4 mt-1 text-white flex-shrink-0\" />\n                          )}\n                          <div className=\"whitespace-pre-line text-sm\">\n                            {message.text}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {/* Typing indicator */}\n                  {isTyping && (\n                    <div className=\"flex justify-start\">\n                      <div className=\"bg-white p-3 rounded-lg shadow-sm border max-w-[80%]\">\n                        <div className=\"flex items-center gap-2\">\n                          <Bot className=\"w-4 h-4 text-primary\" />\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Show suggestions if the last message has them */}\n                  {messages.length > 0 && !isTyping && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {[\"Our Services\", \"Get Quote\", \"Contact Us\", \"View Projects\"].map((suggestion) => (\n                        <button\n                          key={suggestion}\n                          onClick={() => handleSuggestionClick(suggestion)}\n                          className=\"text-xs bg-white border border-gray-300 hover:border-primary hover:text-primary px-3 py-1 rounded-full transition-colors\"\n                        >\n                          {suggestion}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                  \n                  <div ref={messagesEndRef} />\n                </div>\n\n                {/* Input Area */}\n                <div className=\"p-4 border-t bg-white rounded-b-lg\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      placeholder=\"Ask about our services...\"\n                      value={inputValue}\n                      onChange={(e) => setInputValue(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      className=\"flex-1\"\n                    />\n                    <Button\n                      onClick={handleSendMessage}\n                      disabled={!inputValue.trim()}\n                      size=\"icon\"\n                      className=\"bg-primary hover:bg-primary/90\"\n                    >\n                      <Send className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}","size_bytes":15768},"client/src/components/forms/contact-form.jsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSchema } from \"@shared/schema\";\nimport { SERVICE_OPTIONS } from \"@/data/constants\";\nimport { z } from \"zod\";\n\nconst contactFormSchema = insertContactSchema.extend({\n  agreedToPrivacy: z.boolean().refine(val => val === true, {\n    message: \"You must agree to the privacy policy\"\n  })\n});\n\n// ContactFormData type: z.infer<typeof contactFormSchema>\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      service: \"\",\n      message: \"\",\n      agreedToPrivacy: false\n    }\n  });\n\n  const contactMutation = useMutation({\n    mutationFn: async (data) => {\n      const response = await apiRequest(\"POST\", \"/api/contacts\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Message Sent Successfully!\",\n        description: \"Thank you for your inquiry. We'll respond within 24 hours.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Sending Message\",\n        description: \"Please try again or contact us directly at +91-94627-71662.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Contact form error:\", error);\n    }\n  });\n\n  const onSubmit = (data) => {\n    contactMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"text-gray-900\">\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Message Sent Successfully!</h3>\n          <p className=\"text-gray-600 mb-6\">\n            Thank you for your inquiry. Our team will review your message and respond within 24 hours.\n          </p>\n          <Button \n            onClick={() => setIsSubmitted(false)}\n            className=\"btn-primary\"\n          >\n            Send Another Message\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"text-gray-900 border-none shadow-lg\">\n      <CardContent className=\"p-4 sm:p-6 md:p-8\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 sm:space-y-6\">\n            <div className=\"grid-responsive-2\">\n              <FormField\n                control={form.control}\n                name=\"firstName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-xs sm:text-sm font-semibold text-gray-700\">\n                      First Name *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        className=\"w-full px-3 sm:px-4 py-2 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent text-sm sm:text-base\"\n                        placeholder=\"Enter your first name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"lastName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Last Name *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your last name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Email *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        type=\"email\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your email address\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Phone *\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        type=\"tel\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your phone number\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"service\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                    Service of Interest *\n                  </FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                        <SelectValue placeholder=\"Select a service...\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {SERVICE_OPTIONS.map((option) => (\n                        <SelectItem key={option.value} value={option.value}>\n                          {option.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"message\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                    Project Details *\n                  </FormLabel>\n                  <FormControl>\n                    <Textarea \n                      {...field} \n                      rows={4}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                      placeholder=\"Please describe your project requirements, timeline, and any specific technical specifications...\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"agreedToPrivacy\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      className=\"rounded border-gray-300 text-secondary focus:ring-secondary\"\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel className=\"text-sm text-gray-600\">\n                      I agree to the{\" \"}\n                      <a href=\"#\" className=\"text-secondary hover:underline\">\n                        Privacy Policy\n                      </a>{\" \"}\n                      and consent to being contacted about my inquiry. *\n                    </FormLabel>\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button \n              type=\"submit\" \n              disabled={contactMutation.isPending}\n              className=\"w-full bg-secondary text-white py-4 rounded-lg hover:bg-secondary/90 transition-colors font-semibold\"\n            >\n              {contactMutation.isPending ? \"Sending...\" : \"Send Message & Request Quote\"}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":10362},"client/src/components/forms/quote-form.jsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertQuoteRequestSchema } from \"@shared/schema\";\nimport { SERVICE_OPTIONS } from \"@/data/constants\";\nimport { z } from \"zod\";\nimport { CheckCircle, FileText, Calculator } from \"lucide-react\";\n\nconst quoteFormSchema = insertQuoteRequestSchema.extend({\n  budget: z.string().optional(),\n  timeline: z.string().optional()\n});\n\n// QuoteFormData type: z.infer<typeof quoteFormSchema>\n\nconst budgetRanges = [\n  { value: \"under-5-lakh\", label: \"Under ₹5 Lakh\" },\n  { value: \"5-10-lakh\", label: \"₹5 - 10 Lakh\" },\n  { value: \"10-25-lakh\", label: \"₹10 - 25 Lakh\" },\n  { value: \"25-50-lakh\", label: \"₹25 - 50 Lakh\" },\n  { value: \"50-lakh-1-crore\", label: \"₹50 Lakh - 1 Crore\" },\n  { value: \"above-1-crore\", label: \"Above ₹1 Crore\" },\n  { value: \"to-be-discussed\", label: \"To be discussed\" }\n];\n\nconst timelineOptions = [\n  { value: \"immediate\", label: \"Immediate (1-2 weeks)\" },\n  { value: \"1-month\", label: \"Within 1 month\" },\n  { value: \"2-3-months\", label: \"2-3 months\" },\n  { value: \"3-6-months\", label: \"3-6 months\" },\n  { value: \"6-months-plus\", label: \"6+ months\" },\n  { value: \"flexible\", label: \"Flexible timeline\" }\n];\n\nexport default function QuoteForm() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm({\n    resolver: zodResolver(quoteFormSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      company: \"\",\n      service: \"\",\n      projectDetails: \"\",\n      budget: \"\",\n      timeline: \"\"\n    }\n  });\n\n  const quoteMutation = useMutation({\n    mutationFn: async (data) => {\n      const response = await apiRequest(\"POST\", \"/api/quote-requests\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      toast({\n        title: \"Quote Request Submitted!\",\n        description: \"Our team will review your requirements and send a detailed quote within 24 hours.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Submitting Quote Request\",\n        description: \"Please try again or contact us directly at +91-94627-71662.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Quote form error:\", error);\n    }\n  });\n\n  const onSubmit = (data) => {\n    quoteMutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <Card className=\"text-gray-900 border-none shadow-lg\">\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\n          </div>\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Quote Request Received!</h3>\n          <p className=\"text-gray-600 mb-6 leading-relaxed\">\n            Thank you for your detailed project information. Our engineering team will analyze your requirements and prepare a comprehensive quote including:\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8 text-left\">\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Detailed cost breakdown</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Project timeline</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Technical specifications</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"w-4 h-4 text-green-600 mr-3 flex-shrink-0\" />\n              <span className=\"text-sm text-gray-600\">Implementation plan</span>\n            </div>\n          </div>\n          <p className=\"text-sm text-gray-500 mb-6\">\n            Expected response time: Within 24 hours\n          </p>\n          <Button \n            onClick={() => setIsSubmitted(false)}\n            className=\"btn-primary\"\n          >\n            Submit Another Quote Request\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"text-gray-900 border-none shadow-lg\">\n      <CardContent className=\"p-8\">\n        <div className=\"flex items-center mb-6\">\n          <Calculator className=\"w-6 h-6 text-secondary mr-3\" />\n          <h3 className=\"text-xl font-bold text-gray-900\">Project Quote Request</h3>\n        </div>\n        \n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Personal Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-lg font-semibold text-gray-900 border-b pb-2\">Contact Information</h4>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"firstName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        First Name *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your first name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"lastName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Last Name *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your last name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Email Address *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          type=\"email\"\n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your email address\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Phone Number *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          {...field} \n                          type=\"tel\"\n                          className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                          placeholder=\"Enter your phone number\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"company\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Company/Organization\n                    </FormLabel>\n                    <FormControl>\n                      <Input \n                        {...field} \n                        value={field.value || \"\"}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Enter your company name (optional)\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Project Information */}\n            <div className=\"space-y-4\">\n              <h4 className=\"text-lg font-semibold text-gray-900 border-b pb-2\">Project Details</h4>\n              \n              <FormField\n                control={form.control}\n                name=\"service\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Primary Service Required *\n                    </FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                          <SelectValue placeholder=\"Select the primary service you need...\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {SERVICE_OPTIONS.map((option) => (\n                          <SelectItem key={option.value} value={option.value}>\n                            {option.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"projectDetails\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                      Detailed Project Description *\n                    </FormLabel>\n                    <FormControl>\n                      <Textarea \n                        {...field} \n                        rows={6}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\"\n                        placeholder=\"Please provide detailed information about your project including:\n• Scope of work and objectives\n• Technical requirements and specifications\n• Location and site conditions\n• Any specific challenges or constraints\n• Expected deliverables\n• Integration with existing systems (if applicable)\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"budget\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Estimated Budget Range\n                      </FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                            <SelectValue placeholder=\"Select budget range (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {budgetRanges.map((range) => (\n                            <SelectItem key={range.value} value={range.value}>\n                              {range.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"timeline\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-semibold text-gray-700\">\n                        Expected Timeline\n                      </FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-secondary focus:border-transparent\">\n                            <SelectValue placeholder=\"Select timeline (optional)\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {timelineOptions.map((option) => (\n                            <SelectItem key={option.value} value={option.value}>\n                              {option.label}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n            </div>\n\n            {/* Additional Information */}\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex items-start\">\n                <FileText className=\"w-5 h-5 text-blue-600 mr-3 mt-0.5 flex-shrink-0\" />\n                <div className=\"text-sm text-blue-800\">\n                  <p className=\"font-semibold mb-2\">What happens next?</p>\n                  <ul className=\"space-y-1 text-blue-700\">\n                    <li>• Our engineering team will review your requirements</li>\n                    <li>• We may contact you for clarifications or additional details</li>\n                    <li>• A comprehensive quote will be prepared within 24-48 hours</li>\n                    <li>• The quote will include cost breakdown, timeline, and implementation plan</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <Button \n              type=\"submit\" \n              disabled={quoteMutation.isPending}\n              className=\"w-full bg-secondary text-white py-4 rounded-lg hover:bg-secondary/90 transition-colors font-semibold text-lg\"\n            >\n              {quoteMutation.isPending ? \"Submitting Quote Request...\" : \"Submit Quote Request\"}\n            </Button>\n\n            <p className=\"text-xs text-gray-500 text-center\">\n              By submitting this form, you agree to be contacted by our team regarding your project requirements. \n              We respect your privacy and will not share your information with third parties.\n            </p>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":16958},"client/src/components/layout/footer.jsx":{"content":"import { Link } from \"wouter\";\nimport { Phone, Mail, MapPin } from \"lucide-react\";\nimport { COMPANY_INFO, SERVICES, PRODUCTS } from \"@/data/constants\";\nimport logoImage from \"@assets/logo-new-removebg-preview_1755497919444.png\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-12\" role=\"contentinfo\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-8\">\n          {/* Company Info */}\n          <div>\n            <div className=\"mb-4\">\n              <img \n                src={logoImage} \n                alt=\"Powerton Engineering Pvt. Ltd.\" \n                className=\"h-12 w-auto mb-3\"\n                loading=\"lazy\"\n              />\n            </div>\n            <p className=\"text-gray-300 mb-6\">\n              Your trusted partner in delivering high-quality engineering solutions and services for industrial automation and electrical systems.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href={COMPANY_INFO.socialMedia.linkedin} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on LinkedIn\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.338 16.338H13.67V12.16c0-.995-.017-2.277-1.387-2.277-1.39 0-1.601 1.086-1.601 2.207v4.248H8.014v-8.59h2.559v1.174h.037c.356-.675 1.227-1.387 2.526-1.387 2.703 0 3.203 1.778 3.203 4.092v4.711zM5.005 6.575a1.548 1.548 0 11-.003-3.096 1.548 1.548 0 01.003 3.096zm-1.337 9.763H6.34v-8.59H3.667v8.59zM17.668 1H2.328C1.595 1 1 1.581 1 2.298v15.403C1 18.418 1.595 19 2.328 19h15.34c.734 0 1.332-.582 1.332-1.299V2.298C19 1.581 18.402 1 17.668 1z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n              <a \n                href={COMPANY_INFO.socialMedia.twitter} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on Twitter\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                </svg>\n              </a>\n              <a \n                href={COMPANY_INFO.socialMedia.facebook} \n                className=\"text-gray-400 hover:text-secondary transition-colors\" \n                aria-label=\"Follow us on Facebook\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\" clipRule=\"evenodd\" />\n                </svg>\n              </a>\n            </div>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Services</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              {SERVICES.slice(0, 5).map((service) => (\n                <li key={service.id}>\n                  <Link \n                    href=\"/services\" \n                    className=\"hover:text-secondary transition-colors\"\n                  >\n                    {service.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Products */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Products</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              {PRODUCTS.slice(0, 5).map((product) => (\n                <li key={product.id}>\n                  <Link \n                    href=\"/products\" \n                    className=\"hover:text-secondary transition-colors\"\n                  >\n                    {product.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Contact Info</h4>\n            <ul className=\"space-y-3 text-gray-300\">\n              <li className=\"flex items-center\">\n                <Phone className=\"w-4 h-4 mr-3 text-secondary\" aria-hidden=\"true\" />\n                <span>{COMPANY_INFO.phone}</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Mail className=\"w-4 h-4 mr-3 text-secondary\" aria-hidden=\"true\" />\n                <span>{COMPANY_INFO.email}</span>\n              </li>\n              <li className=\"flex items-start\">\n                <MapPin className=\"w-4 h-4 mr-3 text-secondary mt-1\" aria-hidden=\"true\" />\n                <span>\n                  {COMPANY_INFO.address.street}<br />\n                  {COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} {COMPANY_INFO.address.pincode}\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-400 text-sm mb-4 md:mb-0\">\n              &copy; 2024 Powerton Engineering Pvt. Ltd. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 text-sm text-gray-400\">\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Privacy Policy</a>\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Terms of Service</a>\n              <a href=\"#\" className=\"hover:text-secondary transition-colors\">Sitemap</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6260},"client/src/components/layout/header.jsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, Phone, Mail, MapPin } from \"lucide-react\";\nimport { COMPANY_INFO } from \"@/data/constants\";\nimport logoImage from \"@assets/logo-new-removebg-preview_1755497919444.png\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigation = [\n    { name: \"About\", href: \"/about\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Products\", href: \"/products\" },\n    { name: \"Projects\", href: \"/projects\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const isActive = (href) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm sticky top-0 z-50\" role=\"banner\">\n      {/* Top bar */}\n      <div className=\"bg-primary text-white py-1 sm:py-2\">\n        <div className=\"max-w-7xl mx-auto container-padding flex flex-col sm:flex-row sm:justify-between items-center gap-2 sm:gap-0 text-xs sm:text-sm\">\n          <div className=\"flex items-center gap-2 sm:gap-4 flex-wrap justify-center sm:justify-start\">\n            <a \n              href={`tel:${COMPANY_INFO.phone}`} \n              className=\"flex items-center hover:text-secondary transition-colors\"\n              aria-label=\"Call us\"\n            >\n              <Phone className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n              <span className=\"hidden xs:inline\">{COMPANY_INFO.phone}</span>\n              <span className=\"xs:hidden\">Call</span>\n            </a>\n            <a \n              href={`mailto:${COMPANY_INFO.email}`} \n              className=\"flex items-center hover:text-secondary transition-colors\"\n              aria-label=\"Email us\"\n            >\n              <Mail className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" aria-hidden=\"true\" />\n              <span className=\"hidden sm:inline\">{COMPANY_INFO.email}</span>\n              <span className=\"sm:hidden\">Email</span>\n            </a>\n          </div>\n          <div className=\"hidden md:flex items-center\">\n            <span className=\"flex items-center\">\n              <MapPin className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n              <span className=\"text-xs lg:text-sm\">{COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} - Serving All India</span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main navigation */}\n      <nav className=\"max-w-7xl mx-auto container-padding\" role=\"navigation\" aria-label=\"Main navigation\">\n        <div className=\"flex justify-between items-center py-3 sm:py-4\">\n          <Link href=\"/\" className=\"flex items-center\">\n            <img \n              src={logoImage} \n              alt=\"Powerton Engineering Pvt. Ltd.\" \n              className=\"h-8 sm:h-10 md:h-12 w-auto\"\n              loading=\"eager\"\n            />\n          </Link>\n\n          {/* Desktop navigation */}\n          <div className=\"hidden lg:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`text-gray-700 hover:text-primary transition-colors font-medium ${\n                  isActive(item.href) ? \"text-primary border-b-2 border-primary\" : \"\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            ))}\n            <Link href=\"/contact\">\n              <Button className=\"btn-secondary\">\n                Get Quote\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile navigation */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\">\n                <Menu className=\"w-6 h-6\" />\n                <span className=\"sr-only\">Open mobile menu</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n              <nav className=\"flex flex-col space-y-4 mt-8\">\n                {navigation.map((item) => (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    className={`text-lg font-medium transition-colors ${\n                      isActive(item.href) ? \"text-primary\" : \"text-gray-700 hover:text-primary\"\n                    }`}\n                    onClick={() => setIsOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n                <Link href=\"/contact\" onClick={() => setIsOpen(false)}>\n                  <Button className=\"btn-secondary w-full mt-4\">\n                    Get Quote\n                  </Button>\n                </Link>\n              </nav>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":5107},"client/src/components/layout/layout.jsx":{"content":"import Header from \"./header\";\nimport Footer from \"./footer\";\nimport Chatbot from \"@/components/chatbot/chatbot\";\n\nexport default function Layout({ children }) {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        {children}\n      </main>\n      <Footer />\n      <Chatbot />\n    </div>\n  );\n}\n","size_bytes":357},"client/src/components/sections/about-section.jsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Cog, Wrench, Sun, Settings } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function AboutSection() {\n  const features = [\n    {\n      icon: Cog,\n      title: \"Electrical & Instrumentation\",\n      description: \"Complete range of control systems\"\n    },\n    {\n      icon: Wrench,\n      title: \"Mechanical Pumps\",\n      description: \"Durable pump solutions & spares\"\n    },\n    {\n      icon: Sun,\n      title: \"Solar Solutions\",\n      description: \"Sustainable energy installations\"\n    },\n    {\n      icon: Settings,\n      title: \"Industrial Tools\",\n      description: \"Professional grade equipment\"\n    }\n  ];\n\n  return (\n    <section id=\"about\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 sm:gap-12 lg:gap-16 items-center\">\n          <div className=\"order-2 lg:order-1\">\n            <img \n              src=\"https://images.unsplash.com/photo-1587440871875-191322ee64b0?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n              alt=\"Professional Indian engineers working on industrial automation and control systems\" \n              className=\"rounded-xl shadow-2xl w-full animate-fade-in\"\n              loading=\"lazy\"\n            />\n          </div>\n          \n          <div className=\"animate-slide-in-right order-1 lg:order-2\">\n            <span className=\"text-secondary font-semibold text-sm sm:text-base md:text-lg\">About Us</span>\n            <h2 className=\"text-responsive-xl font-bold text-primary mt-2 sm:mt-4 mb-4 sm:mb-6\">\n              Welcome to Powerton Engineering Pvt. Ltd.\n            </h2>\n            <p className=\"text-responsive-sm text-gray-600 mb-6 leading-relaxed\">\n              Your trusted partner in delivering high-quality engineering solutions and services. Founded with a vision to empower industries through innovation and excellence, we specialize in providing a comprehensive range of electrical and instrumentation products.\n            </p>\n            \n            <div className=\"grid-responsive-2 mb-6 sm:mb-8\">\n              {features.map((feature, index) => {\n                const Icon = feature.icon;\n                return (\n                  <div key={feature.title} className=\"flex items-start space-x-3\">\n                    <div className=\"flex-shrink-0 w-8 h-8 bg-secondary rounded-full flex items-center justify-center\">\n                      <Icon className=\"w-4 h-4 text-white\" aria-hidden=\"true\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900\">{feature.title}</h3>\n                      <p className=\"text-gray-600 text-sm\">{feature.description}</p>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            <Link href=\"/about\">\n              <Button className=\"btn-primary\">\n                Learn More About Us\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3129},"client/src/components/sections/clients-section.jsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { TESTIMONIALS, CLIENTS } from \"@/data/constants\";\nimport { Star } from \"lucide-react\";\n\nexport default function ClientsSection() {\n  return (\n    <section className=\"section-padding bg-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Clients</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Trusted By Leading Brands and Organizations\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            We've partnered with industry leaders across various sectors to deliver exceptional engineering solutions.\n          </p>\n        </div>\n\n        {/* Client Logos Grid */}\n        <div className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-8 items-center opacity-70 hover:opacity-100 transition-opacity duration-300 mb-16\">\n          {CLIENTS.map((client, index) => (\n            <div \n              key={client} \n              className=\"flex items-center justify-center p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              <span className=\"text-gray-600 font-semibold text-sm text-center\">{client}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* Testimonials Section */}\n        <div className=\"text-center mb-12\">\n          <h3 className=\"text-2xl font-bold text-primary mb-8\">What Our Clients Say</h3>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {TESTIMONIALS.map((testimonial) => (\n            <Card key={testimonial.name} className=\"bg-gray-50 border border-gray-100\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex text-secondary\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"w-4 h-4 fill-current\" aria-hidden=\"true\" />\n                    ))}\n                  </div>\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\"{testimonial.comment}\"</p>\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center text-white font-semibold mr-4\">\n                    <span>{testimonial.initials}</span>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-900\">{testimonial.name}</div>\n                    <div className=\"text-sm text-gray-600\">{testimonial.location}</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2878},"client/src/components/sections/contact-section.jsx":{"content":"import ContactForm from \"@/components/forms/contact-form\";\nimport { Phone, Mail, MapPin, Clock } from \"lucide-react\";\nimport { COMPANY_INFO } from \"@/data/constants\";\n\nexport default function ContactSection() {\n  return (\n    <section id=\"contact\" className=\"section-padding bg-primary text-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Contact Us</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold mt-4 mb-6\">\n            Let's Discuss Your Engineering Needs\n          </h2>\n          <p className=\"text-xl opacity-90 max-w-3xl mx-auto\">\n            Ready to start your next project? Get in touch with our expert team for customized solutions and professional consultation.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n          <div>\n            <h3 className=\"text-2xl font-bold mb-8\">Get in Touch</h3>\n            \n            <div className=\"space-y-6 mb-8\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <Phone className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Phone</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.phone}</p>\n                  <p className=\"text-sm opacity-70\">Available 24/7 for emergency support</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <Mail className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Email</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.email}</p>\n                  <p className=\"text-sm opacity-70\">We'll respond within 24 hours</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"flex-shrink-0 w-12 h-12 bg-secondary rounded-lg flex items-center justify-center\">\n                  <MapPin className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold mb-2\">Address</h4>\n                  <p className=\"opacity-90\">{COMPANY_INFO.address.street}</p>\n                  <p className=\"opacity-90\">{COMPANY_INFO.address.city}, {COMPANY_INFO.address.state} {COMPANY_INFO.address.pincode}</p>\n                  <p className=\"text-sm opacity-70\">Nearest Metro: {COMPANY_INFO.address.landmark}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white bg-opacity-10 rounded-lg p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Clock className=\"w-5 h-5 mr-3\" />\n                <h4 className=\"font-semibold\">Business Hours</h4>\n              </div>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Monday - Saturday:</span>\n                  <span>9:00 AM - 6:00 PM</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Sunday:</span>\n                  <span>Emergency Support Only</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <ContactForm />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3772},"client/src/components/sections/hero-section.jsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { ArrowRight, CheckCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function HeroSection() {\n  return (\n    <section \n      id=\"home\" \n      className=\"relative bg-gradient-to-br from-primary to-blue-800 text-white overflow-hidden\"\n      role=\"banner\"\n    >\n      <div className=\"absolute inset-0 bg-black bg-opacity-20\"></div>\n      \n      {/* Background Image */}\n      <div \n        className=\"absolute inset-0 bg-cover bg-center opacity-30\"\n        style={{\n          backgroundImage: \"url('https://images.unsplash.com/photo-1565087826739-dac3fb4d34b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n        }}\n      ></div>\n      \n      <div className=\"relative max-w-7xl mx-auto container-padding py-12 sm:py-16 md:py-20 lg:py-32\">\n        <div className=\"max-w-4xl\">\n          <h1 className=\"text-responsive-2xl font-bold mb-4 sm:mb-6 leading-tight animate-fade-in\">\n            Comprehensive Solutions for <span className=\"text-secondary\">Industrial Success</span>\n          </h1>\n          <p className=\"text-responsive-base mb-6 sm:mb-8 opacity-90 leading-relaxed animate-fade-in\">\n            Our broad portfolio of products and services provides all-encompassing solutions that drive industrial success, ensuring that every aspect of your engineering needs is covered.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 mb-8 sm:mb-12\">\n            <Link href=\"/services\" className=\"w-full sm:w-auto\">\n              <Button className=\"btn-secondary w-full sm:w-auto text-sm sm:text-base md:text-lg px-4 sm:px-6 md:px-8 py-3 sm:py-4 transform hover:scale-105 transition-all\">\n                Explore Our Services\n                <ArrowRight className=\"ml-2 w-4 h-4 sm:w-5 sm:h-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/quote\" className=\"w-full sm:w-auto\">\n              <Button \n                variant=\"outline\" \n                className=\"w-full sm:w-auto text-sm sm:text-base md:text-lg px-4 sm:px-6 md:px-8 py-3 sm:py-4 border-white text-white hover:bg-white hover:text-primary transition-all duration-300\"\n              >\n                Request Consultation\n              </Button>\n            </Link>\n          </div>\n\n          {/* Key Features */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">15+ Years Experience</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">24/7 Technical Support</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <CheckCircle className=\"w-6 h-6 text-secondary\" />\n              <span className=\"text-lg\">Pan-India Service</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Section */}\n      <div className=\"relative bg-white bg-opacity-10 backdrop-blur-sm border-t border-white border-opacity-20\">\n        <div className=\"max-w-7xl mx-auto container-padding py-8\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">15+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Years Experience</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">1200+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Projects Completed</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">450+</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Happy Clients</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-secondary mb-2\">24/7</div>\n              <div className=\"text-sm lg:text-base opacity-90\">Support Available</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4294},"client/src/components/sections/products-section.jsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { PRODUCTS } from \"@/data/constants\";\nimport { ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ProductsSection() {\n  return (\n    <section id=\"products\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Products</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Industrial Automation Equipment Solutions\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Comprehensive range of electrical and automation products designed for reliability, efficiency, and superior performance in industrial environments.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12\">\n          {PRODUCTS.map((product) => (\n            <Card \n              key={product.id} \n              className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n            >\n              <div className=\"relative overflow-hidden\">\n                <img \n                  src={product.image} \n                  alt={`${product.title} - ${product.description}`} \n                  className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-primary bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-300\"></div>\n              </div>\n              \n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{product.title}</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">{product.description}</p>\n                <Link href=\"/products\">\n                  <Button \n                    variant=\"ghost\" \n                    className=\"text-secondary hover:text-secondary/80 p-0 font-medium\"\n                  >\n                    View Products <ArrowRight className=\"ml-2 w-4 h-4\" />\n                  </Button>\n                </Link>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <Link href=\"/products\">\n            <Button className=\"btn-primary text-lg px-8 py-4\">\n              View Complete Product Catalog\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2694},"client/src/components/sections/projects-section.jsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { PROJECTS } from \"@/data/constants\";\nimport { MapPin, Calendar, ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function ProjectsSection() {\n  const categoryColors = {\n    \"Power Plant\": \"bg-red-100 text-red-800\",\n    \"Manufacturing\": \"bg-blue-100 text-blue-800\",\n    \"Solar\": \"bg-green-100 text-green-800\",\n    \"Water Treatment\": \"bg-cyan-100 text-cyan-800\"\n  };\n\n  return (\n    <section id=\"projects\" className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Projects</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Successfully Delivered Engineering Solutions\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Explore our portfolio of completed projects showcasing our expertise in industrial automation and electrical engineering.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12\">\n          {PROJECTS.map((project) => (\n            <Card \n              key={project.id} \n              className=\"overflow-hidden group hover:shadow-xl transition-all duration-300 card-hover\"\n            >\n              <div className=\"relative overflow-hidden\">\n                <img \n                  src={project.image} \n                  alt={`${project.title} - ${project.description}`}\n                  className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n              </div>\n              \n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-4\">\n                  <Badge \n                    className={`mr-4 ${\n                      categoryColors[project.category] || \n                      \"bg-gray-100 text-gray-800\"\n                    }`}\n                  >\n                    {project.category}\n                  </Badge>\n                  <span className=\"text-gray-500 text-sm\">Completed {project.year}</span>\n                </div>\n                \n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{project.title}</h3>\n                <p className=\"text-gray-600 mb-6\">{project.description}</p>\n                \n                {/* Project Highlights */}\n                <div className=\"mb-6\">\n                  <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Key Features:</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {project.highlights.map((highlight) => (\n                      <span \n                        key={highlight}\n                        className=\"text-xs bg-primary/10 text-primary px-2 py-1 rounded\"\n                      >\n                        {highlight}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                    <span className=\"flex items-center\">\n                      <MapPin className=\"w-4 h-4 mr-1\" aria-hidden=\"true\" />\n                      {project.location}\n                    </span>\n                    <span className=\"flex items-center\">\n                      <Calendar className=\"w-4 h-4 mr-1\" aria-hidden=\"true\" />\n                      {project.duration}\n                    </span>\n                  </div>\n                  <Link href=\"/projects\">\n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 font-semibold\"\n                    >\n                      View Details <ArrowRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <Link href=\"/projects\">\n            <Button className=\"btn-primary text-lg px-8 py-4 mr-4\">\n              View All Projects\n            </Button>\n          </Link>\n          <Button \n            variant=\"outline\" \n            className=\"btn-outline text-lg px-8 py-4\"\n          >\n            Download Portfolio\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4853},"client/src/components/sections/services-section.jsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { SERVICES } from \"@/data/constants\";\nimport { \n  Cpu, \n  Gauge, \n  Wrench, \n  PlayCircle, \n  Shield, \n  Settings \n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst iconMap = {\n  \"microchip\": Cpu,\n  \"tachometer-alt\": Gauge,\n  \"tools\": Wrench,\n  \"play-circle\": PlayCircle,\n  \"shield-alt\": Shield,\n  \"cog\": Settings\n};\n\nexport default function ServicesSection() {\n  return (\n    <section id=\"services\" className=\"section-padding bg-white\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-12 sm:mb-16\">\n          <span className=\"text-secondary font-semibold text-sm sm:text-base md:text-lg\">Our Services</span>\n          <h2 className=\"text-responsive-xl font-bold text-primary mt-2 sm:mt-4 mb-4 sm:mb-6\">\n            Expert solutions for all needs, delivered with exceptional care\n          </h2>\n          <p className=\"text-responsive-sm text-gray-600 max-w-3xl mx-auto\">\n            From process automation to maintenance contracts, we provide comprehensive engineering solutions tailored to your industrial requirements.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8\">\n          {SERVICES.map((service, index) => {\n            const IconComponent = iconMap[service.icon] || Settings;\n            \n            return (\n              <Card \n                key={service.id} \n                className=\"border border-gray-100 group hover:shadow-xl transition-all duration-300 hover:-translate-y-1 sm:hover:-translate-y-2\"\n              >\n                <CardContent className=\"p-4 sm:p-6 md:p-8\">\n                  <div className=\"w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 bg-gradient-to-br from-primary to-accent rounded-lg flex items-center justify-center mb-4 sm:mb-6 group-hover:scale-110 transition-transform\">\n                    <IconComponent className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 text-white\" aria-hidden=\"true\" />\n                  </div>\n                  \n                  <h3 className=\"text-lg sm:text-xl font-bold text-gray-900 mb-3 sm:mb-4\">{service.title}</h3>\n                  <p className=\"text-sm sm:text-base text-gray-600 mb-4 sm:mb-6\">{service.description}</p>\n                  \n                  <ul className=\"space-y-2 mb-6\">\n                    {service.features.map((feature) => (\n                      <li key={feature} className=\"text-sm text-gray-600 flex items-center\">\n                        <div className=\"w-1.5 h-1.5 bg-secondary rounded-full mr-3\"></div>\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <Link href=\"/services\">\n                    <Button \n                      variant=\"ghost\" \n                      className=\"text-secondary hover:text-secondary/80 p-0 font-semibold\"\n                    >\n                      Learn More →\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Link href=\"/services\">\n            <Button className=\"btn-primary text-lg px-8 py-4\">\n              View All Services\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3479},"client/src/components/ui/accordion.jsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.jsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4344},"client/src/components/ui/alert.jsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.jsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.jsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1116},"client/src/components/ui/breadcrumb.jsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2637},"client/src/components/ui/button.jsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1699},"client/src/components/ui/calendar.jsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2680},"client/src/components/ui/card.jsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","size_bytes":1843},"client/src/components/ui/carousel.jsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\n\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":5917},"client/src/components/ui/chart.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?\n    icon?\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10393},"client/src/components/ui/checkbox.jsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.jsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.jsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4833},"client/src/components/ui/context-menu.jsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7389},"client/src/components/ui/dialog.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3772},"client/src/components/ui/drawer.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":2894},"client/src/components/ui/dropdown-menu.jsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7570},"client/src/components/ui/form.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4045},"client/src/components/ui/hover-card.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.jsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.jsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":742},"client/src/components/ui/label.jsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8298},"client/src/components/ui/navigation-menu.jsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.jsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2552},"client/src/components/ui/popover.jsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.jsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.jsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1592},"client/src/components/ui/scroll-area.jsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.jsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4177},"client/src/components/ui/sidebar.jsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23538},"client/src/components/ui/skeleton.jsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":223},"client/src/components/ui/slider.jsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.jsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.jsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.jsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.jsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.jsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\n\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4717},"client/src/components/ui/toaster.jsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.jsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.jsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1087},"client/src/pages/quote.tsx":{"content":"import { SEO } from \"@/lib/seo\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport QuoteForm from \"@/components/forms/quote-form\";\nimport { CheckCircle, Clock, FileText, Users, Star, Award } from \"lucide-react\";\n\nexport default function Quote() {\n  const benefits = [\n    {\n      icon: FileText,\n      title: \"Detailed Assessment\",\n      description: \"Comprehensive project evaluation and technical specifications\"\n    },\n    {\n      icon: Clock,\n      title: \"Quick Response\",\n      description: \"Receive your detailed quote within 24-48 hours\"\n    },\n    {\n      icon: Users,\n      title: \"Expert Consultation\",\n      description: \"Free technical consultation with our engineering team\"\n    },\n    {\n      icon: Star,\n      title: \"Customized Solutions\",\n      description: \"Tailored engineering solutions for your specific requirements\"\n    }\n  ];\n\n  const processSteps = [\n    {\n      step: \"01\",\n      title: \"Submit Request\",\n      description: \"Fill out our comprehensive quote form with your project details\"\n    },\n    {\n      step: \"02\", \n      title: \"Technical Review\",\n      description: \"Our engineering team analyzes your requirements and specifications\"\n    },\n    {\n      step: \"03\",\n      title: \"Site Assessment\",\n      description: \"Optional on-site visit for complex projects (if required)\"\n    },\n    {\n      step: \"04\",\n      title: \"Detailed Quote\",\n      description: \"Receive comprehensive pricing with timeline and deliverables\"\n    }\n  ];\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Get Quote - Powerton Engineering\",\n    \"description\": \"Request a detailed quote for industrial automation, electrical control panels, and engineering solutions from Powerton Engineering\",\n    \"url\": \"https://powertonengineering.in/quote\",\n    \"mainEntity\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Powerton Engineering Pvt. Ltd.\",\n      \"contactPoint\": {\n        \"@type\": \"ContactPoint\",\n        \"telephone\": \"+91-94627-71662\",\n        \"contactType\": \"sales\"\n      }\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title=\"Get Quote - Industrial Automation & Electrical Solutions | Powerton Engineering\"\n        description=\"Request a detailed quote for process automation, electrical control panels, instrumentation, and custom engineering solutions. Free consultation and competitive pricing.\"\n        keywords=\"quote request, industrial automation quote, electrical control panel pricing, process automation cost, engineering solutions quote, instrumentation pricing\"\n        structuredData={structuredData}\n      />\n\n      {/* Hero Section */}\n      <section className=\"relative bg-gradient-to-br from-primary to-blue-800 text-white py-16 lg:py-24\">\n        <div className=\"absolute inset-0 bg-black bg-opacity-20\"></div>\n        <div \n          className=\"absolute inset-0 bg-cover bg-center opacity-20\"\n          style={{\n            backgroundImage: \"url('https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n          }}\n        ></div>\n        \n        <div className=\"relative max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center max-w-4xl mx-auto\">\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6 leading-tight\">\n              Get Your Custom <span className=\"text-secondary\">Engineering Quote</span>\n            </h1>\n            <p className=\"text-xl lg:text-2xl opacity-90 mb-8 leading-relaxed\">\n              Professional assessment, competitive pricing, and expert consultation for your industrial automation and electrical engineering projects.\n            </p>\n            \n            <div className=\"flex flex-wrap justify-center gap-4 mb-8\">\n              <div className=\"flex items-center bg-white/10 backdrop-blur-sm rounded-lg px-4 py-2\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-secondary\" />\n                <span className=\"text-sm\">Free Consultation</span>\n              </div>\n              <div className=\"flex items-center bg-white/10 backdrop-blur-sm rounded-lg px-4 py-2\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-secondary\" />\n                <span className=\"text-sm\">24-48 Hour Response</span>\n              </div>\n              <div className=\"flex items-center bg-white/10 backdrop-blur-sm rounded-lg px-4 py-2\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-secondary\" />\n                <span className=\"text-sm\">No Hidden Costs</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"section-padding bg-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-primary mb-6\">\n              Why Request a Quote from Us?\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Get accurate pricing and professional consultation for your engineering projects with our comprehensive quote service.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {benefits.map((benefit) => {\n              const Icon = benefit.icon;\n              return (\n                <Card key={benefit.title} className=\"text-center border-none shadow-lg hover:shadow-xl transition-shadow\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-secondary rounded-lg flex items-center justify-center mx-auto mb-6\">\n                      <Icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{benefit.title}</h3>\n                    <p className=\"text-gray-600\">{benefit.description}</p>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Quote Form Section */}\n      <section className=\"section-padding bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n            {/* Form */}\n            <div className=\"lg:col-span-2\">\n              <Card className=\"shadow-2xl border-none\">\n                <CardHeader className=\"bg-gradient-to-r from-primary to-blue-700 text-white rounded-t-lg\">\n                  <CardTitle className=\"text-2xl\">Request Your Quote</CardTitle>\n                  <p className=\"text-blue-100\">\n                    Fill out the form below and our engineering team will provide you with a detailed quote tailored to your project requirements.\n                  </p>\n                </CardHeader>\n                <CardContent className=\"p-8\">\n                  <QuoteForm />\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Process Steps */}\n            <div>\n              <Card className=\"shadow-lg border-none mb-8\">\n                <CardHeader>\n                  <CardTitle className=\"text-xl text-primary\">Our Quote Process</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-6\">\n                  <div className=\"space-y-6\">\n                    {processSteps.map((process, index) => (\n                      <div key={process.step} className=\"flex items-start\">\n                        <div className=\"flex-shrink-0 w-10 h-10 bg-secondary rounded-full flex items-center justify-center text-white font-bold text-sm mr-4\">\n                          {process.step}\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-2\">{process.title}</h4>\n                          <p className=\"text-sm text-gray-600\">{process.description}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Trust Indicators */}\n              <Card className=\"shadow-lg border-none\">\n                <CardContent className=\"p-6\">\n                  <div className=\"text-center\">\n                    <Award className=\"w-12 h-12 text-secondary mx-auto mb-4\" />\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Industry Expertise</h3>\n                    <p className=\"text-sm text-gray-600 mb-4\">\n                      15+ years of experience delivering successful engineering projects across India.\n                    </p>\n                    \n                    <div className=\"space-y-2 text-sm text-gray-600\">\n                      <div className=\"flex items-center justify-between\">\n                        <span>Projects Completed:</span>\n                        <span className=\"font-semibold text-primary\">1200+</span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Happy Clients:</span>\n                        <span className=\"font-semibold text-primary\">450+</span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Response Time:</span>\n                        <span className=\"font-semibold text-secondary\">24-48 hours</span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Information */}\n      <section className=\"section-padding bg-primary text-white\">\n        <div className=\"max-w-7xl mx-auto container-padding\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n                Need Help with Your Quote Request?\n              </h2>\n              <p className=\"text-xl opacity-90 mb-8\">\n                Our engineering consultants are available to discuss your project requirements and help you get the most accurate quote for your needs.\n              </p>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-center\">\n                  <CheckCircle className=\"w-6 h-6 mr-4 text-secondary\" />\n                  <span className=\"text-lg\">Technical consultation included</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <CheckCircle className=\"w-6 h-6 mr-4 text-secondary\" />\n                  <span className=\"text-lg\">Flexible payment options available</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <CheckCircle className=\"w-6 h-6 mr-4 text-secondary\" />\n                  <span className=\"text-lg\">Post-installation support included</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"text-center lg:text-right\">\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8\">\n                <h3 className=\"text-2xl font-bold mb-4\">Contact Our Sales Team</h3>\n                <div className=\"space-y-4 text-lg\">\n                  <div>\n                    <div className=\"font-semibold\">Phone:</div>\n                    <a href=\"tel:+91-94627-71662\" className=\"text-secondary hover:underline\">\n                      +91-94627-71662\n                    </a>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold\">Email:</div>\n                    <a href=\"mailto:info@powertonengineering.in\" className=\"text-secondary hover:underline\">\n                      info@powertonengineering.in\n                    </a>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold\">Business Hours:</div>\n                    <div className=\"text-blue-100\">Mon - Sat: 9:00 AM - 6:00 PM</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}","size_bytes":12320},"client/src/components/sections/gallery-section.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Eye, ArrowRight } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function GallerySection() {\n  const galleryImages = [\n    {\n      id: 1,\n      image: \"https://images.unsplash.com/photo-1565087826739-dac3fb4d34b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Industrial Control Panel Installation\",\n      category: \"Electrical Systems\",\n      description: \"Advanced control panel setup for manufacturing facility\"\n    },\n    {\n      id: 2,\n      image: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Process Automation Implementation\",\n      category: \"Automation\",\n      description: \"Complete SCADA system deployment for chemical plant\"\n    },\n    {\n      id: 3,\n      image: \"https://images.unsplash.com/photo-1581092335878-1c43d93b6e07?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Safety System Integration\",\n      category: \"Safety & Protection\",\n      description: \"Comprehensive safety relay and protection system installation\"\n    },\n    {\n      id: 4,\n      image: \"https://images.unsplash.com/photo-1508615070457-7baeba4003ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Solar Power Installation\",\n      category: \"Renewable Energy\",\n      description: \"10MW solar farm with complete monitoring systems\"\n    },\n    {\n      id: 5,\n      image: \"https://images.unsplash.com/photo-1581092918056-0c4c3acd3789?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Instrumentation Setup\",\n      category: \"Measurement Systems\",\n      description: \"Precision measurement and calibration equipment installation\"\n    },\n    {\n      id: 6,\n      image: \"https://images.unsplash.com/photo-1504307651254-35680f356dfd?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\",\n      title: \"Pump Station Automation\",\n      category: \"Mechanical Systems\",\n      description: \"Automated pump control and monitoring system\"\n    }\n  ];\n\n  const categoryColors = {\n    \"Electrical Systems\": \"bg-blue-100 text-blue-800\",\n    \"Automation\": \"bg-green-100 text-green-800\",\n    \"Safety & Protection\": \"bg-red-100 text-red-800\",\n    \"Renewable Energy\": \"bg-yellow-100 text-yellow-800\",\n    \"Measurement Systems\": \"bg-purple-100 text-purple-800\",\n    \"Mechanical Systems\": \"bg-cyan-100 text-cyan-800\"\n  };\n\n  return (\n    <section className=\"section-padding bg-gray-50\" role=\"main\">\n      <div className=\"max-w-7xl mx-auto container-padding\">\n        <div className=\"text-center mb-16\">\n          <span className=\"text-secondary font-semibold text-lg\">Our Work</span>\n          <h2 className=\"text-3xl lg:text-5xl font-bold text-primary mt-4 mb-6\">\n            Engineering Excellence in Action\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Explore our portfolio of successful installations, automation projects, and industrial solutions \n            delivered across various sectors and industries.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n          {galleryImages.map((item) => (\n            <Card \n              key={item.id} \n              className=\"group overflow-hidden hover:shadow-xl transition-all duration-300 card-hover border-none\"\n            >\n              <div className=\"relative overflow-hidden\">\n                <img \n                  src={item.image} \n                  alt={item.title}\n                  className=\"w-full h-64 object-cover group-hover:scale-110 transition-transform duration-500\"\n                  loading=\"lazy\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                \n                {/* Overlay Content */}\n                <div className=\"absolute inset-0 flex items-end p-6 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <div className=\"text-white\">\n                    <Badge \n                      className={`mb-2 ${\n                        categoryColors[item.category as keyof typeof categoryColors] || \n                        \"bg-gray-100 text-gray-800\"\n                      }`}\n                    >\n                      {item.category}\n                    </Badge>\n                    <h3 className=\"text-lg font-bold mb-2\">{item.title}</h3>\n                    <p className=\"text-sm opacity-90\">{item.description}</p>\n                  </div>\n                </div>\n\n                {/* View Icon */}\n                <div className=\"absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <div className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center\">\n                    <Eye className=\"w-5 h-5 text-white\" />\n                  </div>\n                </div>\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Statistics Row */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-12\">\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-primary mb-2\">250+</div>\n              <div className=\"text-gray-600\">Projects Completed</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-primary mb-2\">150+</div>\n              <div className=\"text-gray-600\">Happy Clients</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-primary mb-2\">15+</div>\n              <div className=\"text-gray-600\">Years Experience</div>\n            </div>\n            <div>\n              <div className=\"text-3xl lg:text-4xl font-bold text-primary mb-2\">50+</div>\n              <div className=\"text-gray-600\">Cities Served</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-center\">\n          <Link href=\"/projects\">\n            <Button className=\"btn-primary text-lg px-8 py-4 mr-4\">\n              View All Projects\n              <ArrowRight className=\"ml-2 w-5 h-5\" />\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6511}}}